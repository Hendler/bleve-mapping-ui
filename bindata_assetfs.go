package mapping

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"github.com/elazarl/go-bindata-assetfs"
	"io"
	"io/ioutil"
	"os"
	"path"
	"path/filepath"
	"strings"
	"time"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindata_file_info struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindata_file_info) Name() string {
	return fi.name
}
func (fi bindata_file_info) Size() int64 {
	return fi.size
}
func (fi bindata_file_info) Mode() os.FileMode {
	return fi.mode
}
func (fi bindata_file_info) ModTime() time.Time {
	return fi.modTime
}
func (fi bindata_file_info) IsDir() bool {
	return false
}
func (fi bindata_file_info) Sys() interface{} {
	return nil
}

var _mapping_static_js_mapping_analysis_analyzer_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x57\xcd\x6e\xdb\x38\x10\xbe\xe7\x29\x18\xa1\xa8\x65\xd4\xb0\xb1\xd7\x35\x72\xe8\x16\x58\x60\x0f\xd9\x53\x6f\x86\x11\xb0\xe2\x28\x26\x4c\x51\x5a\x92\x72\xe3\x06\x7e\xf7\x1d\x52\x7f\xa4\x7e\x62\xb9\x45\xb1\xdb\x1c\x1c\x91\x33\xf3\x71\xe6\xe3\x70\xc8\x49\x4b\x99\x18\x9e\x4b\xf2\x87\x80\x13\x7c\x94\x54\x9c\xbf\x81\x7a\xcc\x19\x15\x9f\x8c\x12\xf1\x3b\x9d\xe4\x05\xac\xc8\xbb\xcc\x4e\xfd\x25\xb5\xa1\x32\xb1\xe3\x83\x31\xc5\xea\x8e\x5c\xf9\x93\x34\x43\xe5\x13\x15\x25\xfe\xcb\x68\x51\x70\xf9\xbc\x22\x08\x62\x78\xf2\x54\x28\x48\xf9\xcb\x92\xbc\x3a\x98\x6a\xa5\x75\xae\xf8\xf3\xdf\x68\x45\x1e\x9c\xf1\xd6\x97\xc9\x89\x79\x50\x2a\x57\x8f\xa0\x35\x7d\xb6\xf2\x28\x0a\xa4\x69\xae\xb2\x82\x9a\xc3\x50\x52\x3b\x84\x82\xfa\x2b\x90\x06\x5e\xa2\x4e\x30\xde\xde\xf9\xaa\xb4\xe6\x0d\xb5\x5e\x2f\x15\xc8\x66\x43\x50\x74\x26\x5c\x56\xe1\x13\x74\x83\x00\xe3\x06\x97\x71\x0a\x76\x1c\x9f\xa8\x22\xc7\x56\xa7\xa1\xa2\xb6\x97\x00\x8c\x30\x80\x02\x81\x1d\x56\x9e\xe2\x9c\x36\x38\x4b\x95\xa2\x67\xdd\x2a\xf3\x94\xc4\x47\xf2\x80\x01\x26\x07\xaa\x9e\x52\x2e\x0c\x28\x1d\xf9\x78\x6e\x37\xe0\xab\x95\xd7\x62\x74\x76\xb7\xdf\x06\x0a\xad\x4f\x49\xca\x5b\xaf\xd6\x3e\x66\x1f\x72\x08\xbb\x2e\x4a\x7d\x88\x87\x96\x3b\xc4\xdc\x2f\xc3\xf5\x2e\xc1\xa8\x47\x66\x60\x6d\xb7\x3d\x58\xa6\x03\xba\x10\x10\x1a\x3c\x0e\x4c\x7e\x04\xf9\x16\x09\x4e\x61\x06\x0b\xc6\x67\x21\x40\x9d\xa0\xc1\x07\xf6\x79\x08\x6c\x77\xe6\x56\x22\x02\xf3\x8a\x09\x7f\xa5\x01\x15\xaf\x6f\xa1\xed\x8e\x7b\x84\x70\x7e\xe1\xa7\x67\x7b\x57\xfd\xfa\x79\xed\x56\xe1\x68\x64\x4f\x64\x43\x95\xaf\x20\x72\xca\x3e\xf7\x95\x9a\x9a\x12\xfb\x2c\xb9\x82\xb1\x2e\x72\x6d\xe2\xc5\x86\x16\x7c\xf3\x14\x82\x2f\x56\xf5\x19\x5c\xae\x75\x99\x24\x78\x98\xe3\x16\x87\x51\x43\xfb\x8c\x4f\x79\x68\x75\xbb\x59\x9f\x9b\xe5\xba\xfd\x76\x05\x23\xc4\x5f\xe1\x11\x63\x30\xb1\x4a\xaf\xc0\x58\x7d\x1f\xb8\xfa\xbe\x5c\xa3\x26\x5e\x86\x1a\x36\x9b\xff\x74\x5b\xf8\x16\xbd\x9f\x06\x5a\x33\xf9\xed\xc1\x7f\x27\xc1\x43\x27\x1d\xc3\xfe\xd9\xfc\x6f\x39\xee\xf1\xd3\x27\x99\x32\x4f\xc3\x27\xcf\x89\x7d\x5f\xd2\x46\x25\x30\xa4\x09\x4e\x76\xf8\xdb\xa0\xe6\xd6\x26\xf7\x58\x75\x4a\xc9\xf0\x5e\x90\x58\x9b\xdf\xbf\x27\xde\x7c\x34\x28\x40\xcd\xf5\x02\x02\x10\x9b\x7d\x1c\x2b\x77\x55\xf1\xa8\x06\xcb\xc1\x19\x0d\x23\x54\x90\xe5\x27\x18\x0f\x92\xa3\x57\x2f\x41\x9a\xcc\x59\x5c\x17\x82\x27\x50\x19\xaf\xc8\x6f\xe3\xdc\xbb\x33\x76\x3d\x7d\x3f\x0f\xd5\x6e\xa9\x0f\x3f\x9e\xc0\x23\x7e\x76\x35\xe2\xff\x91\xc2\x7d\x8e\x7e\x99\x1c\x1e\xbd\xaa\x7f\x76\xee\x8e\x2f\x3a\x2b\x67\x91\x0f\x8f\xeb\x1b\x99\xec\xed\xd2\x4f\x60\x31\x48\xc9\xdb\x69\x9c\x08\xed\x2a\x8f\xe1\xb2\xb3\x88\x4c\x6c\x17\x20\xbc\x55\x48\x78\x98\x83\x6e\x61\xcd\xb8\xce\x38\x1e\xd7\x45\x65\xb6\x18\xc7\xfc\x52\x72\xc1\xa6\xca\x03\x3e\x87\xb3\x52\x1b\x72\xa0\x27\x20\xd4\xb5\x00\x01\xff\xf7\x5e\x8b\x30\xef\x74\x46\xae\xcb\xe0\x9a\x28\xf8\xa7\xe4\x0a\x58\x14\x3e\xc9\x14\x98\x52\x49\x9f\xf8\xe0\x6d\x6e\x8d\x9d\x47\x32\x37\x84\x0a\x05\x94\x9d\xc9\x17\x20\xa5\x06\x16\x78\xe6\xf7\x2e\xf7\x0f\x83\x36\x07\x73\x24\xec\x46\xaa\x7d\xd1\x5c\xb7\x1b\xa4\x77\x1e\xc6\x7e\x66\x74\x4d\x65\x77\x9e\x32\xb2\x88\xc8\x87\xa0\x8d\xfa\x40\xa2\x45\xeb\x37\xbc\x70\x6d\xf4\x4d\x04\x80\xd4\xa5\x02\x62\x0e\xd4\xe0\x0f\xd2\x88\x8f\xd2\xa6\x8d\xc2\x1a\x99\x15\xb9\x04\x69\x2c\xbf\xf8\xd4\xe4\x1d\x25\x4d\x74\x5e\xab\x64\xff\xda\x37\x37\x75\xed\xd0\x04\x25\xfd\xd8\x9b\xf9\x1d\x75\x8f\xda\x09\x2b\x2b\xed\x1f\xa0\xd6\xfa\x5b\xf5\xa4\xf6\x7d\x19\xe7\xbd\xc3\x6f\xe4\xdb\x41\x50\xbb\xa8\xb5\x8d\xac\x41\x3b\xda\x76\xdc\x19\xec\xe0\x1e\xdb\xc6\x33\x8c\x27\x6a\x80\xa2\xdf\x5b\xcc\xce\x71\x0f\x64\x78\x5b\x3a\x96\xa9\x81\x1a\x7a\xb1\xf2\xd6\x99\x79\x61\xe2\xae\x62\xc2\x72\x53\x6f\x59\x9d\x00\x38\xd1\x4b\x0b\x5d\x0a\xd3\xa3\xac\x13\xcc\xe6\xcc\x85\x11\xd6\x89\x44\xe4\x1a\xe2\x0a\x67\xf9\x83\x57\x32\x06\x93\x9b\x03\xa8\xaf\x1c\x1b\x22\x2c\x40\x85\xa0\xe7\xca\xfa\xbb\x6e\xee\xa6\x60\x5d\xb6\xff\x06\x00\x00\xff\xff\x36\xf6\x5e\x36\x32\x11\x00\x00")

func mapping_static_js_mapping_analysis_analyzer_js_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_js_mapping_analysis_analyzer_js,
		"mapping_static/js/mapping/analysis-analyzer.js",
	)
}

func mapping_static_js_mapping_analysis_analyzer_js() (*asset, error) {
	bytes, err := mapping_static_js_mapping_analysis_analyzer_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/js/mapping/analysis-analyzer.js", size: 4402, mode: os.FileMode(420), modTime: time.Unix(1445359170, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_js_mapping_analysis_charfilter_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x56\x4b\x6f\xe3\x36\x10\xbe\xef\xaf\x60\x84\xc5\x4a\x46\x0d\xe9\x5e\x63\x2f\x4d\x51\xa0\x87\xf4\xb4\x37\xc3\x30\xb8\xd2\xd8\x26\x22\x51\x2a\x49\x39\x31\x12\xff\xf7\x0e\x49\x3d\x48\x3d\x6c\xa5\x69\x75\xb0\x25\xce\x70\x66\xf8\xcd\x83\xdf\xa1\xe6\xa9\x62\x25\x27\xbf\xe5\x70\x86\xc7\x13\x15\x7f\xb0\x5c\x81\x78\x2a\x33\x9a\x3f\x2a\x91\x47\x5f\x65\x5a\x56\xb0\x26\x5f\x0b\xbd\xf4\x27\x97\x8a\xf2\x54\x7f\x9f\x94\xaa\xd6\x5f\xc8\xdd\x87\xd3\x02\xd5\xcf\x34\xaf\xf1\xaf\xa0\x55\xc5\xf8\x71\x4d\xd0\x8c\x62\xe9\xbe\x12\x70\x60\xaf\x2b\xf2\x66\x0c\x59\x5f\x71\x29\xd8\xf1\x2f\xdc\x45\xbe\x9b\xcd\x1b\x57\xc6\x67\xd6\x41\x88\x52\x3c\x81\x94\xf4\xa8\xe5\x41\xe0\x49\x0f\xa5\x28\x2a\xaa\x4e\x63\x49\x13\x10\x0a\x9a\x37\x4f\xea\x45\x89\x3a\xde\xf7\xe6\x8b\xab\x9a\x22\x76\x07\x83\x1d\xea\xbd\x5d\xad\x99\x24\x21\x28\xbc\x10\xc6\x2d\x00\x04\x03\x21\x90\x31\x85\x8e\x8c\x82\xfe\x8e\xce\x54\x90\xe7\x4e\xa7\x05\x63\xd2\xf6\xf6\x79\x87\xe6\x8d\x1e\xbe\x5a\x27\x57\x1b\x87\xb6\x22\x2b\x94\x46\x93\xc1\xbf\xbf\x93\x30\xb1\x4b\xe1\xca\x0f\xbd\xe6\xcf\xbc\x7c\xe1\x7d\xf6\x7f\x5c\x2a\xf8\x01\x45\x95\x53\x85\x60\x76\xd1\xa0\xf5\x5f\x48\x90\x54\x54\x28\x46\x73\x99\x50\x4e\xf3\x8b\x64\x32\xe9\xe3\x93\xc9\x11\x38\x08\x96\xc6\x27\x55\xe4\xc1\x18\xa2\xb1\x03\xa9\xf1\xea\x7c\x04\x02\x8e\xf0\x5a\x05\xbf\x2e\xf3\x66\xb5\xad\x33\x5b\x8c\xd7\x5b\x3e\x7f\x87\x03\xad\x73\x35\xe7\xb2\xed\x86\xc8\xcd\x81\x7e\x04\xa8\x5a\xf0\xc1\xa2\xbf\x37\x08\xc6\xcd\x80\x52\x3c\x62\x0a\x46\xec\x49\x9b\xfa\xb0\xe9\xbb\x1b\xb6\x8e\x77\xbb\x6b\x34\xea\x2a\x43\xd4\x1e\x47\x0a\x93\xc1\x9b\x2e\x8d\x8f\xa0\xa2\x30\xa1\x15\x4b\xf6\x03\xc3\xe1\x2a\x96\x75\x9a\x62\xdf\x44\xdd\x7e\x34\x4f\x87\x00\xcc\x86\xa5\x95\xcd\xf2\xde\xa6\x64\xaf\xb4\xc0\x39\xdd\x2a\xee\xde\x4d\x8f\xfa\x7e\xd6\xd8\x1f\x19\xcc\x78\x1b\xf4\xb4\xd6\x77\x0d\x6f\x3c\xe0\x26\x61\x89\xda\x4a\x67\x07\x12\x3d\x8c\xba\x29\xd6\xc1\xba\xce\x33\x5b\x1f\x7a\xaf\x1e\x15\x4d\x72\x7b\xa7\xda\xcc\xcd\xc2\xda\x3a\x16\x76\x37\x40\xec\x26\xc5\x72\x6b\xd1\x6a\x58\x33\x06\xd3\x5c\xc2\x02\x37\x6f\xa3\x82\x9b\xd4\x34\x80\x68\xa8\x7b\xbf\xde\x8c\x19\x8f\xd3\xdb\xad\xbd\x9d\xf6\xb0\xbb\x55\xec\x98\x42\x6e\xf2\x3d\x59\xd0\x1c\x5e\x9a\xec\x4c\x9b\xfe\x48\xae\x66\x82\xfb\x7c\xda\x66\x0c\x7b\x19\xfc\x9f\x32\xd7\xe0\xb3\x00\x86\xbb\x49\x9a\xc1\xe1\x3f\x48\xfe\x12\x10\x1c\x37\x37\xef\xa7\x7b\x83\x54\xb3\x95\xdc\xa9\x26\xe2\xcf\x47\x8f\xd5\xc4\x19\x93\x05\xc3\x59\x18\xda\x6d\xe1\x60\xc6\x34\x36\x7f\xd6\x2c\xcf\xe6\x0a\x14\xaf\xfc\xa2\x96\x8a\x9c\xe8\x19\x08\x35\x44\xc5\xcb\xc5\x83\x43\x64\x96\xcd\xbd\xc0\x70\x21\x26\xf1\x16\xfa\xbb\x66\x02\x32\x67\x20\xe9\xc7\x5e\x4e\x2e\x0e\x6e\x30\x86\x30\x99\x88\x78\xa9\x08\xcd\x05\xd0\xec\x42\x7e\x02\xa9\x25\x64\x53\x55\x62\x36\x3c\x7c\x1f\x91\xb1\x6f\xdf\x06\x9c\x29\x6e\x6f\x64\x77\xfe\x77\x59\xd7\x66\xe6\x4a\x68\x78\x40\x9d\x59\x9a\xea\x7a\x6f\xca\x5e\x6f\xce\x48\x18\x20\x03\x70\xa3\x42\x3e\x10\x76\x47\x80\x57\x26\x95\xfc\x10\x16\xc0\x65\x2d\x80\xa8\x13\x55\xf8\x83\x88\x62\xb7\xb4\xbc\x0f\x2f\xa2\xa2\x2a\x39\x70\xa5\xa1\x46\x86\xc5\x7a\x74\xfa\x02\x97\x83\x8e\x74\x24\xde\xc1\xa7\xe6\xd3\xa6\x8f\x05\xbb\x43\x3d\x75\xcc\xd3\xc7\x28\x68\x61\x45\xd6\x30\x41\x38\x5c\xac\x51\xc3\x09\xc0\x27\x18\x3d\x04\x8e\x5f\x4b\x07\xaa\x52\x76\x7c\xc0\x1c\x14\xdb\xa8\x89\x26\x5c\x3b\xa1\x2d\xe4\x06\x08\x2c\x96\x0f\x53\x0d\x6a\x2d\x59\x62\x6a\x90\x19\x89\xb3\x71\x00\x5f\x2f\x58\x80\x9e\x57\x48\x7e\xdf\xa6\x79\x29\x21\xb2\x96\x56\x9f\x24\x1f\x78\x9c\x52\x9d\x40\xbc\x30\x1c\x4d\x38\x10\x70\xca\x5c\xec\xee\x7f\xc5\x51\xda\x01\x72\xdd\xfc\x13\x00\x00\xff\xff\xa8\xf4\x17\x41\x6c\x0d\x00\x00")

func mapping_static_js_mapping_analysis_charfilter_js_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_js_mapping_analysis_charfilter_js,
		"mapping_static/js/mapping/analysis-charfilter.js",
	)
}

func mapping_static_js_mapping_analysis_charfilter_js() (*asset, error) {
	bytes, err := mapping_static_js_mapping_analysis_charfilter_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/js/mapping/analysis-charfilter.js", size: 3436, mode: os.FileMode(420), modTime: time.Unix(1445359216, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_js_mapping_analysis_tokenfilter_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x58\xcd\x6e\xe3\x36\x10\xbe\xef\x53\x70\x85\xc5\x5a\x46\x0d\xab\x48\xb1\x97\x06\x7b\xe9\x16\x05\x7a\x48\x4f\xb9\x05\x81\xc1\x95\xc6\x36\x61\x8a\x54\x49\xca\x89\x9b\xf5\xbb\x77\x28\xc9\x12\x29\x51\xb6\xe2\xa4\xa8\x0f\x89\x2d\xce\x7c\x33\xfc\xe6\x47\x43\xae\x4b\x91\x1a\x26\x05\xf9\x8d\xc3\x1e\xee\xe5\x0e\xc4\x1f\x8c\x1b\x50\x77\x32\xa3\xfc\x9b\x51\x3c\xfe\xa4\x53\x59\xc0\x82\x7c\xca\xed\xa3\x3f\x85\x36\x54\xa4\xf6\xf7\xd6\x98\x62\xf1\x81\x5c\xfe\x08\x9a\xa3\xfc\x9e\xf2\x12\xff\xe5\xb4\x28\x98\xd8\x2c\x08\xe2\x18\x96\xae\x0a\x05\x6b\xf6\x3c\x27\x2f\x15\x52\x6d\x6c\x29\x15\xdb\xfc\x85\x5a\xe4\x6b\xa5\x7c\xeb\xae\x89\x91\xe7\xa0\x94\x54\x77\xa0\x35\xdd\xd8\xf5\x28\xf2\x56\xd7\x52\xe5\x05\x35\xdb\xe1\x4a\xe3\x10\x2e\x34\xdf\xbc\x55\xcf\x4b\x94\xf1\x7e\xdf\x7e\x70\x45\x8d\x65\x6f\x5d\xb1\x87\x82\x2f\xc7\x1a\x27\x49\x08\xae\x1e\x08\x13\x35\x03\x04\x3d\x21\x90\x31\x83\x96\x2a\x01\xfb\x3b\xde\x53\x45\x76\xad\xcc\x89\x8d\x30\xf8\xc3\xee\x11\xf1\x2b\x41\xfc\x5a\x5b\x39\x0e\x3d\xb9\xa3\x85\xa5\x50\xa3\xec\xc3\xa3\xef\x29\x97\x34\xbb\xef\xc9\x9c\x32\x21\xf6\x8c\xdb\x18\x2f\x0b\xa9\x4d\x3c\x4b\x68\xc1\x92\x95\x07\x3d\x5b\x34\x94\xcd\x97\xba\x4c\x53\xe4\x3e\x6e\x61\x32\x6a\xa8\x0b\x75\xc6\x3d\x2b\x5a\x3f\x5c\x21\x9e\xbe\x6d\x75\x8e\xf3\x65\xfb\xbd\x0a\xaf\x0f\xbf\x40\x66\x33\x18\x31\xd2\x4b\x07\x2b\xef\x02\x37\xb4\x5d\xe0\x25\x9e\x37\x02\x36\x3e\xba\x40\x9c\x38\x98\x17\x3f\x7e\x90\x59\x52\x3f\x9a\xcd\x7d\xcc\x52\xec\x84\x7c\x12\x4e\x69\xdd\x1f\x0a\xb8\x87\xbc\xe0\xd4\xa0\x67\xad\x4f\x08\xff\x13\x89\x92\x82\x2a\xc3\x28\xd7\x09\x15\x94\x1f\x34\xd3\x89\x13\x7a\x9d\x6c\x40\x80\x62\xe9\x72\x6b\x72\x1e\x05\xf2\x6f\x68\xc2\x32\xdc\x31\x14\x65\x2c\x35\xab\x54\xe6\x85\x2c\x45\x16\xfd\x3a\xd1\xac\xa7\x55\x1b\xef\x4a\x3f\x82\x6c\x03\x2b\xb1\x51\x34\x9f\x0c\xd8\xa9\x0c\xd1\x38\xd3\x18\xe2\xe9\x50\xb5\xfc\x00\x67\x07\x87\x27\xa9\x32\xcc\x29\xb5\x03\x35\x19\xce\x57\x1b\xa0\x72\x10\x1b\xb3\x9d\x8c\x56\x8b\x0f\x50\x5e\x47\x56\x98\x27\x81\x2d\x8d\x72\xf6\x0f\xac\x4a\xc1\x6c\x25\x4c\xc7\xeb\x6b\x0e\xb0\xf5\x16\xab\x9a\x4f\x47\x6c\xe4\x87\x38\x46\x16\x75\xcf\xd0\xd3\xb1\x3a\x9d\x01\x9e\x51\xd8\x00\x30\xa9\xeb\xf5\xc9\x90\xbe\x9a\x8b\x7a\x3c\x5b\x43\xbf\xc3\x9a\x96\xdc\x5c\x28\xa1\x60\xeb\xb4\x1f\x05\xa6\x54\xa2\xf7\xb0\x83\x68\x5b\x1e\x62\x84\x5a\xe3\xc3\xcf\x8f\x9e\xe6\xd1\x69\x60\x63\xd5\x77\x85\x2f\x56\x1f\x35\xa3\xb5\x92\xc2\x44\xc3\x37\x7a\x94\x33\xcb\xf4\x2f\xa1\x15\xfa\x3c\x5c\x19\x73\xb3\x2d\xeb\x2b\x7c\xb4\xe1\x4d\x39\xe8\xf7\xe2\x6c\xd0\x1b\xae\xf0\xa9\xc1\x78\x37\x9f\xda\xce\x72\x85\x2f\x97\x42\x74\xf3\xe5\xcb\x14\x17\xde\x90\x45\x17\x93\x64\x92\xfd\x40\x4b\xbb\xc2\x17\x3b\xec\xd9\x8c\x16\xeb\x34\x9a\x62\xb6\xeb\x76\x57\x6f\xfc\x66\x9c\xfa\xc0\x8a\x2c\x4d\x51\x9a\x95\x1d\x73\x19\x36\x2c\x6b\x18\x9b\x17\x04\x24\x35\x60\x6b\xa3\x46\xda\x1c\x8d\x42\xc5\x89\x2d\x8e\x43\xbd\x3a\x69\xab\x5e\x43\xbe\x62\xbb\x1d\xc0\xdb\x33\x7e\xd0\xcd\xaf\xf0\xa7\xad\x9a\x9b\x4b\x19\x7e\xbe\xd5\x7b\x73\x72\x59\xe0\xbc\x08\xf7\x43\x89\x33\x53\xf2\x06\xfc\x21\xd9\x51\x9c\x5d\x31\x1f\xfb\x76\x9d\x11\xb9\x7e\xa7\xad\x8c\x5d\xf9\x1f\x46\xe5\x30\x35\xed\xa0\xcc\xd6\x24\xfe\x38\x3c\xb3\x2c\xad\xbb\xae\xf9\xac\x7e\xb3\x5a\x65\x7b\x24\x6b\xa2\xd8\x99\xb5\x38\xe7\xdf\xc9\x0f\x0e\xc4\xe3\x39\x26\xdb\x23\xd9\x2b\xf0\xe2\xb9\xc3\x40\x47\x2c\xd6\xe8\x14\x43\x2f\xc7\x90\xf6\x08\x2b\x96\xf1\xce\xf2\xe9\x38\xe7\x28\x38\x47\xd7\x0b\x93\xfe\xc3\x88\x89\xc7\xb3\x99\xff\x6d\x4b\x45\x15\xf8\x60\x72\x0b\x78\x6a\x82\x34\x02\xfe\xaa\x98\x8d\x39\xf8\x1e\xf1\x1b\xc3\xf6\x62\xf9\x9f\xc5\xb0\xe1\x69\x0a\x1b\x97\xe3\x35\x42\xc7\xbb\x64\xc2\x14\x2a\x86\x86\xce\x1f\x63\xfb\x54\xf5\x5a\x6d\x6a\x6f\x8c\xb8\x93\x61\xc4\xef\x9f\xde\xcd\xd2\x32\x63\x3a\x67\xd8\x2a\x67\xb5\xda\x2c\x7c\x56\xff\x5e\x32\x9e\x8d\x25\x6d\x92\x90\xbc\xd4\x86\x6c\xe9\x1e\x08\xad\xee\x8a\xbc\xb8\x7c\x74\xee\x92\xa6\x35\xc5\xa8\xba\x8e\x62\x1a\xdf\x44\x7f\x97\x4c\x41\xe6\xf4\x2a\xfb\xa9\x5f\x50\x2e\x0f\xae\x33\xd5\x9d\x55\xe5\x91\x90\x86\x50\xae\x80\x66\x07\xf2\x1d\x48\xa9\x21\x0b\x65\x4c\xa5\xf0\xf1\xeb\xe0\x3e\xec\xf3\xe7\x90\xaf\xcd\x2d\xcc\xf2\x74\xf8\xf1\xde\x14\x6d\x2e\x58\xcc\xb1\xcc\xea\xef\xb6\x8a\x33\x69\x8a\xc1\x2a\x66\x64\x16\xe1\x49\xcb\x75\x0f\xcf\x5d\xb3\x76\x2f\xf0\xcc\xb4\xd1\xaf\x22\x05\x47\x90\x52\x01\x31\x5b\x6a\xf0\x0f\x52\x8b\x25\x74\xba\x83\x23\xd5\xf1\x4a\x80\x30\x96\xf3\x3d\xce\x84\x1d\x4d\xee\xc9\xae\x57\xa8\xee\x92\xb7\xed\x60\xfb\xba\xed\xdc\xc1\x92\x31\x77\xed\x45\xa0\x4f\x51\x74\xa2\x15\x87\x8c\xc0\x00\xe2\x71\x8d\x22\xae\x0f\x81\x79\xad\xbb\xe7\xea\x66\xa7\x91\xf8\x59\x21\x7f\xa6\xe9\x98\x74\x7c\x1f\x5e\xd2\x55\x7c\x61\x59\x36\x3b\x9a\x2d\x9c\xed\x4d\x1c\x45\x30\x3e\x98\x8e\xcc\x34\xe4\x9f\x06\x30\x66\x7a\x01\xd6\xd8\x7a\x7b\x41\xe8\x16\xa6\x84\xc0\xd5\xea\x35\x82\x94\x4b\x0d\x71\x0d\x35\x7f\xe3\xa8\x83\xfb\x91\x66\x0b\xea\x89\x61\xcf\xc3\x0e\x83\x6d\xeb\x50\x6b\xbf\x65\x22\x3a\xde\xfe\x1b\x00\x00\xff\xff\x73\x0e\xb3\x8f\x41\x17\x00\x00")

func mapping_static_js_mapping_analysis_tokenfilter_js_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_js_mapping_analysis_tokenfilter_js,
		"mapping_static/js/mapping/analysis-tokenfilter.js",
	)
}

func mapping_static_js_mapping_analysis_tokenfilter_js() (*asset, error) {
	bytes, err := mapping_static_js_mapping_analysis_tokenfilter_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/js/mapping/analysis-tokenfilter.js", size: 5953, mode: os.FileMode(420), modTime: time.Unix(1445360144, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_js_mapping_analysis_tokenizer_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x57\xcd\x6e\xe3\x36\x10\xbe\xe7\x29\x18\x61\xb1\x92\x51\x43\x46\xaf\x35\xf6\xd2\x6d\x0f\x3d\xa4\xa7\xdc\x0c\x23\xe0\x4a\x63\x9b\x88\x44\xa9\x24\xe5\x9f\x66\xfd\xee\x1d\x52\x7f\xa4\x4c\x49\xde\x04\xc5\xfa\x90\x48\xe2\xcc\x37\x33\xdf\xcc\x90\xc3\x5d\xc5\x13\xc5\x0a\x4e\x7e\xcf\xe0\x08\xcf\xc5\x2b\x70\xf6\x2f\x88\xa7\x22\xa5\xd9\x57\x25\xb2\xe8\x93\x4c\x8a\x12\x96\xe4\x53\xae\x3f\xfd\xc5\xa5\xa2\x3c\xd1\xef\x07\xa5\xca\xe5\x03\x99\xfb\x71\x9a\xa3\xf4\x91\x66\x15\xfe\xcb\x69\x59\x32\xbe\x5f\x12\x44\x51\x2c\x79\x29\x05\xec\xd8\x79\x41\xde\x0c\x4e\x6d\x2a\x2e\x04\xdb\xff\x8d\x5a\xe4\x8b\x51\x5e\xdb\x6b\x7c\xe4\x3b\x08\x51\x88\x27\x90\x92\xee\xf5\x7a\x10\x38\xab\xbb\x42\xe4\x25\x55\x87\xdb\x95\xc6\x21\x5c\x68\x9e\x9c\x55\xc7\x4b\x94\x71\xde\xd7\x0f\xb6\xa8\x6a\x99\x43\xb1\xb7\x6b\x8d\xb2\x5a\x11\x5c\xbb\x10\xc6\xeb\xf8\x09\xfa\x41\x20\x65\x0a\xed\x18\x01\xfd\x1e\x1d\xa9\x20\xaf\x9d\x4c\xcb\x85\x0f\x7a\xf3\xba\x45\x74\x23\x86\x8f\xb5\x8d\xab\xdf\x0b\xcd\x9f\x44\xe1\xcd\xd6\x75\x33\x2b\x68\xfa\x3c\x14\x6a\x6b\x20\x72\x8c\xeb\xfc\xc6\x65\x21\x55\x14\xae\x68\xc9\x56\x2f\x2e\x78\xb8\x6c\x18\x5b\xc4\xb2\x4a\x12\xa4\x3e\xea\x70\x52\xaa\xa8\x8d\x35\xe5\xa1\x96\xed\xbf\xca\x75\xa7\x74\x5d\xc4\xdd\xb3\x49\xaf\x8b\xbf\x44\x6e\x53\x18\xb1\x32\x28\x07\x2d\x6f\x03\x37\xd4\xcd\x51\x13\x2d\x1a\x09\x9d\x22\x59\x22\x50\xe4\x2d\x8c\xef\xdf\x49\xb8\xaa\x3f\x85\x0b\x17\xb4\xe2\xaf\xbc\x38\xf1\x0e\xf7\xf9\x52\xc2\x33\xe4\x65\x46\x15\x3a\xd6\xb9\x84\xe0\xbf\x90\x60\x55\x52\xa1\x18\xcd\xe4\x8a\x72\x9a\x5d\x24\x93\xab\x9e\x98\xd5\x1e\x38\x08\x96\xc4\x07\x95\x67\xc1\x48\xf1\xd9\xf0\x9a\xdc\x9e\x9c\x40\xc0\x1e\xce\x65\xf0\xdb\x5d\xb6\x6a\xe1\xda\x54\xdf\xe3\x01\x9c\x13\x28\x75\x06\xee\x84\xe9\xe4\x6b\x24\x1f\xeb\x8e\xeb\x7f\xc0\x8e\x56\x99\x1a\xf3\xdc\x5b\xa7\xfa\x27\x40\x55\x82\x0f\x3e\xba\xba\x41\xe0\x2c\x5e\xad\x72\x18\x09\xf0\x1d\xd6\x3a\x75\x89\xfa\x9b\xed\xed\xee\x18\x74\xe1\x6a\x97\x2a\xce\x74\x0d\x8f\x7b\x36\x4b\x98\xd3\xe2\x55\x89\x75\x0e\xcf\xc3\xf5\x89\xee\xde\xc3\x6d\x73\x1b\xb5\xf0\x9d\x4d\xdd\xda\x74\x9b\xfa\x45\xe9\xcf\x3f\xa1\xb3\x7d\x8c\x74\x4d\xcd\x76\x24\x7a\x1c\x06\x10\x6b\x57\x6d\xd3\x69\x5d\x92\x5a\x55\x9f\x1e\x4d\x3d\xf5\x26\x35\xca\x54\x29\x6f\x2c\x80\xed\x1c\x7d\x68\xe1\x6e\xac\x68\x31\x2c\x14\x43\x67\x26\x61\xde\xc8\xdb\x4d\x91\xf9\x04\x0d\x17\x9a\xe3\xde\x6a\x7b\xe6\x58\xe2\xd6\xd9\x3a\xb9\x1b\x6d\xbc\xf0\xdb\x89\xe2\xfe\x7a\xa0\xdc\x24\xd9\x5b\xc1\x1c\x4e\x4d\x52\xbc\xc0\x3f\x90\x21\xbf\x63\x1f\xcd\x95\x1f\xd5\xc9\xda\xff\x92\xad\x86\x97\xf9\xf8\xe7\x32\x33\x42\xc0\x87\xf3\x7d\x4f\xf8\xb7\x46\xa6\x0e\xd2\x99\x1d\x93\xa6\xe9\x9f\xed\xc6\x6c\x57\x93\x59\xb5\xa3\xd4\x4c\x35\x63\x26\x9c\xea\x4e\x9f\xab\x82\xb8\xdf\xf2\xe3\xb2\x92\x87\x1b\xfd\xb5\xa3\x3e\x58\xb5\xe6\xd1\x51\xef\x05\xe4\xc5\x11\xbc\x01\x30\x9e\xc2\x79\x6a\x60\xb4\xbd\x93\x65\xc6\x12\xa8\x75\x96\xe4\x57\xff\x0c\x94\xe8\xd9\x3e\xb3\x6c\x10\xf7\xd4\x70\xee\x00\x71\xca\x64\xce\xf0\x88\x08\x6b\xb5\xd0\x8f\xf9\xad\x62\x59\x3a\xd6\xc5\x38\x22\xe7\x95\x54\xe4\x40\x8f\x40\xa8\x99\xeb\x9d\x74\x3c\x5a\x73\xff\x7d\x27\x42\x60\xae\x0e\x4c\xe2\x31\xfd\x4f\xc5\x04\xa4\xc1\xda\x73\x7a\xdb\xa4\xdb\xce\x98\xfb\x85\xf1\x88\x17\x8a\xd0\x4c\x00\x4d\x2f\xe4\x1b\x90\x4a\x42\xea\x6b\x29\xa3\xf0\xf8\xe5\xe6\xee\xf2\xf9\xb3\xcf\xd7\x66\x64\x8e\xdb\x61\xc9\x1a\x7c\x37\x16\xe0\x58\xef\x0d\x43\xed\xba\xc1\xf8\x9d\x92\x30\xc0\x99\xcc\x76\x0c\x27\xb4\xb0\x8b\x02\xce\x4c\x2a\xf9\x43\x74\x00\x97\x95\x00\xa2\x0e\x54\xe1\x1f\x24\x15\x4b\xb7\xbd\x29\xe1\x29\x9d\x97\x05\x07\xae\x34\xdb\x78\x2b\x61\x3d\x41\x7d\x58\x83\xfd\x6b\x24\x5e\xcf\x66\xb2\xb6\xfd\xc0\x16\xd6\x37\x24\x9a\x65\xe8\x06\xd4\x91\x68\x17\x7a\x38\xbc\x52\x32\x2c\x42\x72\xc2\xf4\xb1\xfd\x41\xe9\x9c\xe1\x74\x0e\x02\x78\x62\x24\x0f\x90\x77\x88\xdd\xbd\x4b\x69\xd4\xf9\xdc\x0c\xd3\x61\x45\xa1\x2c\xdf\xa7\xb2\xab\xb6\x5e\x8e\x71\xa3\x54\x4f\xdd\x1d\xd4\xb5\x12\xb4\x38\x38\x2b\x7a\x86\xcd\x1e\x1c\xd7\xfb\x17\x77\x98\xec\x6d\xae\x1f\x26\xae\x76\x26\x7b\xb8\x93\x36\xae\x84\x4b\xcb\xaf\x3b\x47\x41\xcc\x12\xb6\x05\x53\x4d\x29\xb4\x53\x32\x53\x83\x72\x93\x78\x3a\x0e\x8a\xa2\x5f\xb8\xbf\x28\x4c\x1c\xee\x76\x94\x64\x85\x84\xa8\x06\x5a\x7c\x70\xda\xc4\x68\x0a\x2c\x19\x71\x62\x78\x44\xe1\x3e\x87\xe7\xcc\xa5\xd6\x7e\xd7\x50\xda\xee\x8b\xd7\xf5\x7f\x01\x00\x00\xff\xff\xfa\xf5\x47\x01\x70\x11\x00\x00")

func mapping_static_js_mapping_analysis_tokenizer_js_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_js_mapping_analysis_tokenizer_js,
		"mapping_static/js/mapping/analysis-tokenizer.js",
	)
}

func mapping_static_js_mapping_analysis_tokenizer_js() (*asset, error) {
	bytes, err := mapping_static_js_mapping_analysis_tokenizer_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/js/mapping/analysis-tokenizer.js", size: 4464, mode: os.FileMode(420), modTime: time.Unix(1445359234, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_js_mapping_analysis_wordlist_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x54\xc1\x6e\xdb\x30\x0c\xbd\xe7\x2b\x58\xa3\x68\x1c\xd4\x73\xb7\xeb\x8c\x5e\xb6\xd3\x80\x75\xd7\x1e\x8a\xa2\x50\x2c\xa6\xd1\x26\x4b\x9e\x28\x37\x0d\x8a\xfc\xfb\x28\x39\x49\x2d\x27\xe9\x92\x43\x9c\x88\x7c\xcf\x8f\x8f\xa4\x16\x9d\xa9\xbd\xb2\x06\xbe\x69\x7c\xc1\x7b\xeb\xe4\x4f\x45\xfe\xce\x4a\xa1\xbf\x7b\xa7\xf3\x4b\xaa\x6d\x8b\x05\x5c\x36\xe1\xe8\x87\x21\x2f\x4c\x8d\xc5\x04\xfe\xf3\x31\xa2\x61\xd4\x8a\xf9\xa8\x80\x46\xb4\xad\x32\xcf\x05\x30\xda\xab\xfa\xa9\x75\xb8\x50\xaf\x33\x78\x8b\x34\xfd\x2b\xca\x80\x80\xdb\x08\xac\x86\xe7\xd6\xa9\xe7\x5f\x27\x62\xe8\x9c\x75\x77\x48\x24\x9e\x43\x3c\xcb\x92\xa8\xc1\x55\x28\xe8\x30\x10\x65\xf1\x71\x7c\x96\xa4\x55\x8d\xf9\xe7\x59\x05\x37\x37\x50\x3b\x14\x1e\x81\xd3\xd6\x43\x04\xa1\xc6\xda\xa3\xbc\xdf\x22\x1f\x1e\x13\xc2\x6d\x81\x1c\xd8\xfe\x4a\xa2\x49\xd5\x9c\x93\xfc\xaf\x26\xc3\xd4\x3a\xb8\xab\x39\x67\xdf\x97\x7c\x67\x53\xcc\x4a\xba\x50\x4a\x45\x8d\x22\xca\xa7\x3d\x6c\x3a\xeb\x5f\xbb\x49\x39\x85\x94\x5b\x1b\x76\xa4\x09\xa7\x5a\x40\x9e\x1a\x36\x8c\x8e\x5d\x2b\xdb\x8e\x96\xe3\xfc\xea\x58\xfa\xa1\xfb\x51\xdb\x31\x85\x0e\x1b\xdb\x0f\xdf\x29\x91\xdc\x19\xb2\xce\x83\x5f\x22\xec\x7a\x11\xdb\x07\xca\x48\x7c\x45\xe2\xa7\xb7\x20\x91\x6a\x34\x32\xb4\x82\x63\xe8\x52\x3c\xac\xb8\xb1\xc2\x70\x96\x46\xee\xb1\xf2\xd8\x10\xac\x94\x5f\xda\xce\xc3\x52\xbc\x04\x18\x93\x08\xf9\xbb\x23\xbf\x23\x9e\x8c\xca\x4a\x26\xa1\x0c\xa2\xf2\xbd\x62\x51\xcc\x67\x6f\xe0\xd0\x77\xce\xc0\x1c\x3e\x81\xa8\x60\x33\x70\x67\x61\x1d\xe4\x2f\xc2\xf5\xdc\xfc\x7d\x94\xf4\x43\xfb\xa9\x8d\xd3\x7a\x0c\xf7\x10\x59\x1f\x0b\xf8\x32\x1b\xfb\x7d\xc6\x24\x8f\x5a\x32\xef\x94\xfe\xa8\x1b\x4d\xb0\x88\x3d\x43\x10\x71\x2d\x93\x71\xba\x18\xac\xf4\x89\x6a\xc6\x9b\x1b\x37\x5c\x11\x9b\xf7\xb7\x53\x0e\x65\x96\xce\x54\xef\xe9\xb0\xac\xa1\x98\x78\x75\x44\x45\xc6\x7a\x10\x9a\x77\x58\xae\x61\x8e\xd0\x11\xca\xa3\x83\x1e\x00\x17\xb7\x07\x57\xcc\xd5\xd5\x68\xa3\x4b\x61\x84\x5e\x93\xa2\xd2\xdb\x3f\x68\x9e\xf8\x98\x1e\x06\x24\x8f\x67\x96\x17\x67\x5b\xab\xa0\x90\x51\x12\xa6\x19\x5c\x27\x17\xdf\x35\x64\xd3\xbd\x72\x7c\xe5\x4c\x3a\xdf\x02\x87\xd4\x69\xcf\xef\x79\xdb\x54\xa3\xc3\x44\x6c\xc8\x48\x38\x33\xbf\x6e\x31\xfb\x0a\x59\xcd\xe6\xd9\x26\x2b\x46\xd1\x50\x33\x71\x7c\x38\x82\xef\x02\xaa\xc9\xa9\x8b\xa9\xd6\x96\x30\xef\x15\xbc\x5f\x4a\x9b\xea\x5f\x00\x00\x00\xff\xff\xd3\xa0\x01\xf2\x6e\x06\x00\x00")

func mapping_static_js_mapping_analysis_wordlist_js_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_js_mapping_analysis_wordlist_js,
		"mapping_static/js/mapping/analysis-wordlist.js",
	)
}

func mapping_static_js_mapping_analysis_wordlist_js() (*asset, error) {
	bytes, err := mapping_static_js_mapping_analysis_wordlist_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/js/mapping/analysis-wordlist.js", size: 1646, mode: os.FileMode(420), modTime: time.Unix(1445359196, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_js_mapping_analysis_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5a\x4f\x6f\xdb\x3a\x12\x3f\x6f\x3e\x05\x2b\x14\xb5\xdd\x04\xce\x3d\x41\xb0\xe8\xb6\xbb\x40\xb1\xdb\x3d\xa5\xd8\x83\x11\x04\xb4\x44\xd7\x44\x65\xd1\x10\xa9\xa4\xee\x36\xdf\x7d\x67\x48\x89\x22\xa9\x3f\xa6\xd3\xc5\x7b\x70\x62\x1d\xde\x8b\x45\xce\x70\xe6\x37\xc3\xe1\x6f\xa8\x5e\x5e\x92\x54\x14\xaa\x14\x79\xce\x4a\x52\x32\xb9\x15\x85\xe4\xcb\x9c\x91\x95\x28\xc9\xb2\xe2\x79\xc6\x8b\x6f\x84\x92\xb4\x92\x4a\x6c\x08\x2d\x68\xbe\x93\x5c\x82\xd4\x06\xa6\xb2\x42\xc9\xb3\xb3\x55\x55\xa4\x8a\x8b\x82\xfc\x2d\x67\x0f\xec\x43\x3d\xe5\xa3\x2a\xf3\xe9\x5b\x99\x8a\x2d\xbb\x20\x6f\xd7\x4a\x6d\xe1\x7f\xb9\xf8\x06\xff\xdd\x88\x8c\xe6\x33\xf2\xdf\x33\x02\x0f\x98\xa0\xb5\xfe\x64\x25\xe8\xc2\x37\x46\x68\x5e\xb0\xc7\x0f\xf5\x00\xb9\x21\xcd\x22\xd3\x46\x0e\x9f\x92\xa9\xaa\x2c\x1a\x01\x96\x71\xd5\x48\x4c\x93\xe4\xc2\x99\x88\x4f\xa2\x76\x5b\x96\x5c\x91\xc4\xf8\x92\x5c\xf8\xa3\xe9\x9a\x96\xf7\x2b\x9e\x2b\xb0\x03\x66\x2d\xee\x82\x71\x25\xbe\xb3\x82\x83\x6a\x54\x51\x15\x3c\x15\x19\x0b\x75\xe8\x39\x9e\x12\x3b\xfe\x34\xbb\xd6\x7f\x3f\x5d\x7b\x4e\x66\x2c\x67\x8a\xf5\xf9\x59\xd0\x0d\x73\x7d\xad\x24\xcb\x60\xbc\x96\xe3\xb2\x91\xf9\x0a\xef\xcd\xe4\x6b\x3b\x97\xaf\xc8\x14\xe7\xcf\x02\x08\x28\x44\x59\x4d\x93\xdb\x35\x44\xb0\x01\x9d\xa4\xb4\x28\x84\x22\x4b\x46\x8c\x31\x59\x72\xee\x09\xd5\xbe\xc1\x84\x94\x82\x52\xc2\x15\x01\xf1\x25\xc3\xc4\xd0\x46\x2d\x77\x44\xad\x19\xcc\x38\x37\xbf\xcf\x49\x32\x4f\x1c\x6b\xda\x48\xb5\xef\x9e\x3c\x5b\x21\x07\x57\xbc\xdc\x4c\x93\x0f\x25\x23\x3b\x51\x11\x59\xd5\x7f\x3c\xd2\x42\x11\x25\x6a\xd3\xc8\x04\x17\x41\x67\x71\x91\xc9\x5f\x93\x59\xe8\x61\x3d\xaf\x41\xa9\xc8\xd8\x8f\x2f\x74\xbb\x05\x5b\xe7\x4d\xee\xce\x6d\xba\x2d\x50\xd3\x5d\x68\x54\x10\x21\x1f\xe9\xb1\x08\xb9\x99\x4c\x28\x38\xa0\xd1\xe0\x05\xd9\x18\x0b\x24\x99\xc2\x8f\x07\x5a\x72\x51\x49\xb2\xcd\x69\xca\xe4\xec\xcc\x15\x07\x10\xa4\x22\xe9\x9a\xa5\xdf\x89\xb6\x9d\xe0\x8e\xca\xc1\xab\x15\xad\x72\x65\xd5\x7b\xe0\xf5\xf9\x5a\x0b\xdc\xdb\x20\xdf\xdc\x90\xd0\xdc\x36\x2c\x24\x31\x8b\xd5\x76\x76\x96\x4b\x5c\x88\x5c\x7b\x21\xec\x45\x6d\x2e\x66\x40\x23\x97\x89\xb4\xda\x40\xdc\x6a\x7d\x56\x02\x5c\x27\xd9\xc6\x49\xe2\x3e\x93\x6b\xa1\xeb\xa8\xc4\xff\x5c\x7c\x12\x69\xad\x41\xc7\xe3\x02\x16\xb8\x20\x49\x12\xb1\x19\x1a\xdf\x3d\xab\x59\x6b\xb6\x4d\xe8\x58\xef\x43\x79\x2c\xa1\x8c\xa6\x6b\x82\x85\xc7\x0a\xe2\xdb\xa9\x46\x42\xa4\xb7\x30\x80\x09\xd2\x87\x07\x0a\xc9\x4e\x7a\x5b\x6f\x07\x50\xd4\x52\x8b\x5a\xf5\x9d\xbf\x07\x0f\x05\xd2\xbe\x08\x00\x1d\x03\xd5\x03\x36\x04\x04\x8d\x33\x5b\xb8\xf1\x1d\x77\x31\x49\x7c\xd5\x4f\x7d\x70\xd7\x3a\x8b\x2a\xcf\xfd\x3a\x8a\x9b\x0e\x46\xd3\xaa\x94\xfc\x81\x91\x35\xcb\xb7\xf5\xfe\xd8\xeb\x67\xb8\x97\x7d\x97\xb7\x54\xad\x83\xdd\xed\x6e\x4f\x2f\xe2\x11\xbb\xb4\x55\x1d\xbd\x39\x51\x2c\xb4\x62\x28\x79\xad\x2e\xaa\x74\xde\xa2\x5c\x00\x2b\x61\x39\x54\xef\x78\x55\x31\x61\x01\x50\x0a\xf1\x58\x43\xb2\xe2\x2c\xcf\x24\x5a\xa0\xf0\x80\xd1\xa0\x74\xd3\x5e\xcf\xfa\xac\xeb\x0d\x64\xbe\x03\x8b\x11\x0f\x9d\xd5\x6f\x21\x52\x9d\x89\x8b\x56\xd1\x5d\x37\x37\xf5\xe0\x7c\x1f\xc2\xfe\xec\xa1\x19\x2e\x48\x60\x32\x46\xde\x58\x85\x02\x99\x86\xbb\x55\x70\xdd\x11\x7f\x1a\x44\xdc\x53\x06\xb0\x61\xd0\x86\xa2\xb7\x17\x7d\x5d\x69\x0a\x26\xe1\x00\x27\xdb\x12\x32\xbf\x54\xbb\x2e\xfa\xcd\xc8\xbf\xf1\x0c\xf5\xf1\xaf\x87\x78\xb7\xea\xc8\x6a\x09\xbb\xc6\x0f\x42\x3b\x7b\xe1\xea\xec\x09\xc5\x9e\x14\x8e\x2d\x47\xc6\x08\xb3\x2f\xcf\x81\x60\x9c\xbb\xcb\xce\x0e\xcb\xf5\x83\xd7\x1c\x59\xea\xa0\x6a\xd5\xc3\x54\xbb\x55\xe8\x81\xe6\x95\x97\x88\x18\x38\xcd\x99\x3f\x17\x52\xd1\x22\x65\x58\xc5\xf5\x8b\x39\x68\x2b\xa6\xae\x9f\xb4\xe0\x1b\x8a\xca\xae\x9a\xc5\xec\x1b\xf9\xf7\x82\x02\xb5\xcf\x5c\xd2\xaa\xd8\x06\x88\x88\x62\x5f\xcb\xfc\xca\x52\x09\x58\x44\xf1\xf4\x7e\x5b\xb2\x15\xff\x41\x7e\xfd\x22\x93\x4b\xf3\x6a\x32\x23\x5d\x6e\x38\xb9\xdc\x52\x48\x04\x9a\xcb\xcb\x86\x62\x5d\x36\x1b\x6f\xbe\x56\x9b\x7c\xe2\x2e\xd8\xb6\x1b\x57\x64\xd2\x36\x0c\x30\xf7\x0b\x3a\x84\x5d\x83\x37\x1f\x7a\x12\x91\x3f\xb0\xab\x20\x98\x88\xd4\x55\x7f\x53\xe0\x87\xa0\xb3\x25\x9f\x7c\xce\xae\xc1\x1e\xd5\x64\x75\xe9\xa9\xa3\xca\xea\x83\x2e\x4e\x5d\xcf\xf1\x3d\xaa\xdc\x8b\xca\x41\x4b\x78\x92\x43\xe9\xeb\xa5\xf2\xec\xba\x4d\x66\x2f\xf3\xe6\x10\x0f\x38\x24\xe6\xc8\x7d\xa6\xd6\x04\xf3\x32\x34\x04\x8f\xe6\x2c\x33\x87\x81\x99\x81\x4c\x1e\x2b\x5e\x48\x0c\xf1\xb1\x25\xca\x4c\xfd\x27\xdb\x61\x7d\xea\xd7\x8c\x0f\x96\x16\xdd\x09\xbc\x81\xe2\x9e\x24\xe4\xdd\x3b\x47\xf2\xcd\x70\xbd\xaf\x2d\x2b\xd9\x46\x00\x5f\x40\x6b\x44\x5d\xca\x7b\xa7\xfe\x56\x43\xd1\x87\xb2\x79\x22\xf5\x59\x8f\xee\xc8\xcd\xc0\xb9\x84\x13\x9c\x79\x4e\xe0\x3c\x6f\x73\x41\xe1\x5c\x80\xae\x04\xe8\x0a\x7d\xa0\x3c\xc7\x52\xe0\x74\xde\x03\x06\xbe\x35\x22\x73\x14\x6f\x36\x2a\x56\x41\x39\x1d\xae\x83\x17\x43\xb9\x89\xed\x3f\xb8\xbc\x12\xd3\x89\xde\xec\x24\xe3\x72\xc3\x25\xd2\x52\xaa\xa0\x1c\x60\x6f\xc7\x1e\xc9\x27\xa8\x47\xd3\x99\xa3\x3f\xec\x9d\xc1\xa1\x47\x51\x66\x24\xe7\x52\x75\xee\x0c\xfe\x03\x23\xff\x82\x81\xf8\x3b\x83\x46\xc2\xdc\x19\xe8\x1e\x5e\x5e\x2d\xee\x46\x3b\xf6\xbe\x55\xf6\x75\xec\x8d\xcc\x73\x3b\x76\xeb\xf3\xeb\x6b\xd9\xcd\xc5\x0a\x94\x8d\xd8\x9e\xdd\xc5\x7a\x4f\xcf\xde\xa6\x92\x6e\xda\x45\x91\xef\x5a\x90\x70\x5d\x52\x5f\xe8\x74\xd9\x94\x1e\xfe\x87\x1e\x6d\x08\x55\x84\x1b\xb5\xba\x10\x07\x47\xd9\x40\x73\xd7\xaf\x67\x11\x58\x11\xd4\x9f\xae\x87\x6c\xb3\x64\x99\xb9\x99\xa0\xfa\x3a\x82\xa9\x1d\x11\x2b\xd8\x8d\xab\x15\xd3\x05\xa2\xa5\xb7\xb2\x43\xe7\x9c\xd5\xe6\x19\x4f\xd5\xbd\x8d\x4d\xc3\xb2\x81\x31\x74\xb2\xd1\x95\x42\xb6\x90\xe6\x4c\x1e\x2e\xf9\x9d\xed\xd0\x97\x67\x48\x4a\x25\xb6\x5d\xa9\xb1\xce\xca\x0d\x7d\xcd\xf4\x75\x2a\x87\x31\xc7\xac\x1e\x69\x95\x02\xb5\x3e\x25\xfc\x4b\x4f\x15\x7a\x91\x7c\x10\xa3\x86\x09\x18\xc3\x07\x1b\x20\xfe\x1c\x3e\xa8\xf3\xeb\x00\x3e\x68\xf6\xa2\x3c\xd1\xc2\x13\x2d\x8c\x3f\xb4\xfa\x60\x36\x4f\xac\xc2\xe7\x10\xc3\xfe\x95\xff\x10\xba\x86\x1f\x57\x68\x8a\x95\xb4\x39\x4b\x03\xd6\xf6\x11\x26\xd8\xb3\x2f\x92\xb7\xb5\x32\x86\xb9\x8d\x12\xb6\xfe\x05\xf6\x51\xb6\x56\xea\xb9\xa4\x2d\xf4\xfc\xf5\x71\x37\xf7\xc3\x5a\x24\x7b\xf3\x61\xdf\xc3\xdf\x3a\xb9\x85\x10\x1b\x1a\xb7\x64\x16\xb2\x6e\xa7\x63\x2b\x0b\x75\xfa\x9a\xbd\x14\xce\xea\xe9\x04\xbd\xbd\xcf\x89\x6c\xee\xdc\x75\x83\xed\x69\x6d\x4b\x2d\x12\xf6\xca\xd4\xde\xad\xb8\xc0\xf6\x95\xb4\x56\x56\x7b\x76\xd3\x2f\xb9\x08\x96\xe8\x29\x53\x3a\x67\x02\x65\xe3\x95\xb4\x21\x51\x16\x14\x87\x40\x79\x70\xf7\xb0\x27\x3f\x5f\xfd\x5f\x7b\xf8\x94\x93\x44\x7e\x81\x78\x91\xa4\x0a\x43\x62\x82\x18\x43\xab\x5a\x30\x4e\x17\x6d\x27\x46\x75\x9c\x8c\x6a\xec\x28\xe9\x03\xda\x3c\xf1\x2a\x8f\x8c\x55\xd9\x7f\x92\xd2\xa1\x53\xb7\xcd\x48\x3c\x9b\xb2\x22\x11\x64\xaa\x57\xfd\x3e\x2e\x65\x85\x9e\x4b\xa5\xac\xbb\xaf\x8f\x43\xb5\x91\x8e\x64\x50\x1e\xd8\x7b\x08\x54\xab\x5c\x33\x27\x87\x34\xbd\x17\x80\x52\xf9\xde\x4d\xb4\x46\xce\xbf\x03\xe3\xb1\xf4\xa9\xd5\xd4\x7b\xfd\xc5\x23\x08\x94\x83\x85\xb7\x76\xcf\xa7\x47\x3b\x3e\x77\xb4\x47\x5e\xfd\xf0\x9f\x3d\xf7\x3e\x7c\x84\xb7\x0c\x7d\xa2\x1d\x86\xf7\xb8\x38\x29\x02\x6a\x19\xe4\x41\x78\x3e\x87\x05\x3e\x97\xf3\x0d\x96\xa6\x17\x41\xf9\xda\x84\x8e\x60\x7c\x16\x8a\x13\xe1\x3b\x11\xbe\xe3\x24\x7c\xc3\xe7\x5e\x1f\xcc\xe6\x89\x55\x78\x8c\x64\x6f\xe8\xfa\xec\xd6\xfb\x76\x74\x08\xe3\x8b\xbe\x40\x1b\x58\x22\x8a\xf5\xfd\xde\x15\x9a\xf7\x25\xe6\x75\x52\xbf\x03\xef\xcf\x02\xd0\x63\xf8\xdf\x4b\xbc\x3c\x73\x3e\xd5\x75\x6f\xcf\x46\xbf\xc5\xe2\x13\x7e\xe8\xbb\x19\x90\x5d\x84\xcb\x0c\xdc\xa0\x75\xf4\x1d\xc3\x15\xda\xc8\xae\x7f\x39\x84\x2a\xfe\x12\xcd\x81\xe3\x44\xaa\x4e\xa4\xea\x88\x49\xd5\xff\xf9\x1a\xcd\xd7\x79\x24\xd4\xea\xe9\xec\x7f\x01\x00\x00\xff\xff\xf8\x14\xff\x7b\x00\x37\x00\x00")

func mapping_static_js_mapping_analysis_js_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_js_mapping_analysis_js,
		"mapping_static/js/mapping/analysis.js",
	)
}

func mapping_static_js_mapping_analysis_js() (*asset, error) {
	bytes, err := mapping_static_js_mapping_analysis_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/js/mapping/analysis.js", size: 14080, mode: os.FileMode(420), modTime: time.Unix(1445359266, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_js_mapping_index_mapping_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x56\x4d\x8f\xdb\x36\x10\x3d\xaf\x7f\x05\x6b\x2c\x62\x09\x10\xec\x9e\x63\xec\xc1\xdd\x5c\xd2\x62\x93\xa2\x0d\x7a\x59\x04\x06\x2d\x8d\x6d\xc6\x14\x29\x90\xd4\x6e\xdc\xac\xff\x7b\x87\xd4\x87\x49\x99\xfe\x38\x14\xd1\xc1\xbb\xe2\x0c\xdf\xbc\x99\x79\x1c\x71\x5d\x8b\xdc\x30\x29\x08\x13\xcc\xfc\xc6\xe1\x05\x3e\x8a\x02\xbe\x3f\xd1\xaa\x62\x62\xf3\x28\x85\x51\x92\x73\x50\xc9\x88\xe0\x73\xaf\x73\x59\x41\x46\xee\xb7\xc6\x54\xf8\x87\xcb\x0d\xfe\xd6\x6c\xf5\x24\x0b\xca\x33\xe7\x43\x05\xe5\xfb\x7f\x41\x7d\xa2\x25\xe8\x8c\x14\xd4\xc0\x17\x56\xc2\x9f\x54\xe9\x7e\x71\xb5\x37\xb0\x50\x8a\xee\x31\xc0\x0b\x28\xd3\x19\x1c\x00\xf3\x08\x7c\x14\x29\xf9\xe1\x85\x9e\x6a\x43\x0d\xcb\x97\x95\x82\x35\xfb\x4e\x1e\xe2\xcb\x6f\x6f\x64\x52\x36\x00\xcb\xc6\x32\x99\x8f\x7c\x94\x80\x23\xa2\x04\xef\x73\xdf\x33\x42\x1f\xfd\x23\xab\xc1\xae\x33\xf9\xe1\xce\x33\x16\xa4\x77\xf7\x42\x55\x90\x3b\x79\x70\x90\x1e\x6c\x68\x25\xbf\xff\xfd\xf9\xd3\xb4\xb2\x14\x12\xf7\xaf\x36\x0a\x0d\x6c\xbd\x4f\x06\x25\x4c\xdb\xec\xfd\xe5\xa9\xd9\x57\x96\x51\x1f\x23\x62\xc4\x3a\xfe\x38\xcc\x4f\xb7\xba\x72\x69\x76\x76\x77\x6f\x6f\x01\xee\xa2\xd6\xbe\x0b\x57\x71\x3c\xcf\xcb\x88\xf9\x96\xaa\xe5\x9a\x71\x73\x0b\x68\xe0\x7c\x19\xd7\xc8\x1d\x08\x76\x13\x55\xcf\xf5\xed\xed\x1a\xe4\xcd\x5c\x43\xef\x1b\xc8\x2e\x51\xff\xb7\xc2\x3a\xd7\x16\xb3\x69\xf6\x9a\x04\x12\x7a\x1e\x17\xb0\xa6\x35\x37\xcb\xf6\x54\x8d\xbf\x76\xc7\x32\xae\x9c\xe7\xf1\xf8\x2b\x0a\xf4\x0a\x46\xa3\xac\x43\x13\xd3\xaa\xdf\x94\xb9\xdb\xd5\x4e\xa2\x2f\x08\x75\x3a\x88\xba\x19\x74\x1a\x35\x0d\x0f\x39\xd3\xff\x50\xce\x0a\x44\xec\x86\x5c\xe2\xb3\x56\x60\x6a\x25\x6c\xcc\xce\x33\x49\x5b\x46\x2d\x8e\x23\xb1\x68\x6b\xf5\x68\x14\x4f\x2e\xcf\xbf\x2e\x7e\x8b\x7c\x0c\x35\x9b\x91\x05\xe7\xf2\x55\x13\xb3\x05\x92\x53\x9b\x07\x31\x92\x14\x80\xed\x2c\x99\x00\x5b\x71\x34\x29\x98\x68\x42\xb1\x14\x96\xb6\xcb\x8f\xb4\xc5\x9a\x1e\x8b\xdd\x70\x7d\x3f\xc8\x32\x1b\x5d\x8d\x86\xb4\x14\xc3\x8c\x9a\xe5\x5a\x29\x10\x26\x8c\x92\xf9\x18\x15\xa8\xad\x15\x06\x13\xb8\x53\x57\x52\x68\xb0\x28\x94\xd4\x38\xf2\x90\xe7\xa3\x02\x9c\x82\xb3\x0f\x52\xc0\xec\xf3\x1f\x64\x55\x1b\x83\x9f\x91\x9c\xb3\x7c\x37\xf7\x71\xa4\xca\x5c\x44\xbb\x8d\xbc\x52\x61\xec\xf0\x42\x20\x0d\x0d\x93\x80\x41\x33\xd3\xa2\xca\x7a\x1f\x6f\x63\xa7\xd7\x5f\xc2\x7a\x24\xe9\xd0\xc9\xeb\x8c\xa8\x39\x9f\x07\xc6\xc3\x28\x78\xb5\x62\x54\x17\x27\x6c\x64\x22\xf7\x63\xb6\x8f\xd6\xcd\x58\x27\x32\x73\x54\x73\x27\xb4\xa3\xe3\xe0\x6c\xe0\x16\x75\x3c\x49\xa1\x73\x01\x1c\x65\x13\xda\x47\x91\x24\xcf\x73\xd7\xb9\xaa\x57\x89\x4a\x53\x8f\xc6\xc1\x3f\x8b\xd8\xb5\xbf\x00\x15\xa2\xd9\x0b\xf0\x3d\x02\x96\x12\x65\x83\xd2\x51\x7b\x82\xa2\xc1\xdf\x57\x66\xb6\x64\x72\x3f\x21\xcd\x17\x37\x23\xaf\x5b\x96\x6f\x49\xc9\x36\x5b\x43\x56\xd0\xa1\x14\x75\xa3\x19\xb1\xa9\x39\x55\xdf\x34\x29\xc1\x50\xfc\x78\xd2\xa6\xc5\xfd\xe5\xa3\x61\x54\x06\x43\x05\x7b\x6a\x33\x94\x6b\xbb\xfe\xf0\x40\xc6\x72\xf5\x0d\x72\x33\x1e\xf6\x75\x2d\x15\x49\x6c\xc3\x76\x56\xaa\x65\xac\xed\x1e\xd6\xae\xc1\x6a\x8a\x31\x26\xef\xde\x91\x9d\xfb\x10\x2c\x4c\xf2\x6b\x63\xba\x3f\x89\x30\xa8\x7c\xf9\xbc\x1b\xb4\xa4\x7b\x72\x69\xd5\x5d\xc3\xa9\x75\xa0\x2f\xfb\x58\x18\xec\x73\x9b\x3a\xbe\xa4\x43\x49\x46\x36\xb7\xbd\x2d\xbb\xd1\x89\xa6\xbe\x88\x67\x2e\x6e\xc1\xcc\xb2\xa9\xdd\x9d\xb9\x04\x3d\x5b\x21\x75\x46\x2e\x69\xb1\x18\x38\x44\xcf\x9f\x83\x9d\x56\x52\x9b\x64\x32\xa3\x15\x9b\x2d\x03\xdc\x49\xd6\x0d\xaa\x56\xda\xe9\xf1\x74\xeb\x3a\xcf\x41\xeb\xa4\xc7\xb5\xca\x18\x16\xff\x0c\x59\x27\xa2\xfe\x5a\xe0\xe9\xd8\xc3\x07\xa5\xa4\x0a\xd1\x33\xec\x51\x01\xae\x0a\x77\x5d\xaa\xce\xed\x09\x89\xd0\x0d\xb4\xc8\x3e\x1e\x7e\x67\x0f\x97\x0a\x63\x0f\x73\x6f\xb5\x17\x43\x73\x72\x5d\x3c\xa9\xec\x87\xa8\xdb\x8d\xf5\x8d\xc4\xf8\xbf\xaa\x1c\xa7\xef\x6a\xdd\x99\x96\x6e\xa4\xfc\xf4\x92\x47\x2a\x66\x0b\x7f\x18\xfd\x17\x00\x00\xff\xff\xc1\xb8\x3a\x2d\xc1\x0c\x00\x00")

func mapping_static_js_mapping_index_mapping_js_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_js_mapping_index_mapping_js,
		"mapping_static/js/mapping/index-mapping.js",
	)
}

func mapping_static_js_mapping_index_mapping_js() (*asset, error) {
	bytes, err := mapping_static_js_mapping_index_mapping_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/js/mapping/index-mapping.js", size: 3265, mode: os.FileMode(420), modTime: time.Unix(1445367297, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_js_mapping_type_mapping_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x59\xeb\x8f\xdb\xb8\x11\xff\xbe\x7f\x05\x4f\x08\xce\x32\xd6\xab\x4b\xbf\xda\xb7\x2d\x72\xb9\x1c\x90\x02\xed\x05\xb9\xf4\xbe\x18\x0b\x83\x2b\xd1\x59\xd6\x7a\xb8\x14\xb5\x8d\x7b\xb7\xff\x7b\x67\xf8\x12\x49\x51\x5e\x6f\x80\x08\x01\x22\x6b\x86\xc3\x79\xfc\xe6\x41\xee\x7e\x68\x4b\xc9\xbb\x96\xf0\x96\xcb\x9f\x6a\xf6\xc8\x3e\x9d\x8e\xec\x1f\xf4\x78\xe4\xed\xe7\xb7\x5d\x2b\x45\x57\xd7\x4c\xe4\xaf\xfa\xb2\x3b\xb2\x15\x91\x23\xf5\x7d\xbb\x24\x7f\x5c\x11\x78\x1a\xfd\xa1\x27\xb7\xe4\x1e\x45\xc0\xba\x47\x26\xe4\x2f\xa2\x6b\x3c\x69\x79\xb8\xf6\x4a\x2d\xd5\x72\x8b\x3d\x67\x75\x85\xbc\x28\x63\xbb\x90\xec\x8b\x5c\xac\xc8\xa2\x1d\x9a\x7b\x26\xf0\xad\xa2\x92\x49\xde\x30\xf5\xce\x7b\x0a\xfb\x54\x8b\xbb\x8d\x16\xf2\x48\x05\x39\xf0\xb6\x7a\x23\xa5\x40\x01\x5a\x2b\x7c\x32\x25\x38\x5b\x7b\x9f\xf0\x59\x1c\x05\xec\x2a\xe4\x69\xb1\x26\xed\x50\xd7\xab\x90\xda\x52\xd8\x68\x0d\x62\x6b\x8e\xfb\xfe\x26\x05\xa8\x1c\xf1\xa0\x31\xe9\xd5\xb4\xa5\xf5\xe9\x7f\xa0\x76\x92\xda\xcb\x4e\xcc\x2c\x04\x0b\xd8\x97\x39\x52\x59\x0f\x15\xdb\x49\x26\x9a\xdd\x23\x2b\x41\x48\x7f\x9e\x93\xb7\x3b\x5a\xd7\x69\x1e\x34\x6a\xb7\xef\x44\x43\xe5\x84\xe1\x69\x7c\xcd\x4c\x5c\xa7\xee\xbb\xc4\x41\xac\xd5\x41\x4a\x6b\x70\x02\x11\xbc\x9c\x21\xb2\x3d\x1d\x6a\xb9\x8b\x1c\x39\xaa\xa8\xde\x9e\x4c\xf0\x5d\xe0\xb7\x0b\xa3\x2f\xe2\x68\x71\x07\x38\x98\x92\x1c\x64\x7e\xf8\x81\xdc\x7c\xdd\x13\xe0\xd6\x43\xbe\x7d\xdd\x04\x0c\xac\xe2\x12\xbe\x02\x1d\x4d\x08\x69\xc7\xee\x38\x1c\xe7\x29\x9f\xba\xcf\x9f\x6b\x06\x74\x9b\xa3\x79\x77\xff\xef\xa5\x17\x8a\x48\x4c\x1e\xfe\xbe\x25\x8a\xfd\x6f\x4a\x3c\x59\xe3\xaf\x8d\x76\x5c\xb0\x95\x60\x4d\xf7\xc8\x30\x55\x3f\x50\xc1\x5a\x19\xed\xb7\x22\x8a\x2d\xb1\x2d\x5a\xa6\x9c\xfb\x73\xd7\x32\xcd\xba\xa7\x75\xcf\x96\x1b\x74\xee\x5b\xda\x96\xac\x26\xb4\x3d\x11\x64\xec\x8b\x2b\xb7\xde\xdf\x37\x5f\xa6\x74\xa2\x55\xf5\xf6\x81\xd7\xd5\x2f\x98\xbc\xbe\x42\xc6\xc7\xbe\x36\x7c\xef\x0c\x37\xbe\x5e\x46\x68\x15\x4c\x0e\xa2\xdd\x78\xf0\x71\xaf\x58\x38\xf6\x41\xc1\xc0\x67\x87\xb8\x59\x93\x85\xaa\x1d\x8b\x10\x9c\xb6\x70\xac\x49\x96\x85\x14\xcc\x89\xe9\x57\x2c\x13\xf0\x15\x0b\x5a\x44\xb1\xe8\x9e\xae\x51\x25\x62\x4d\xa4\x18\x58\x48\x50\x05\x22\x4d\x98\x96\x87\x73\x7c\xba\x38\xa4\x38\xbc\xd2\x30\xa9\x0c\xa3\x0b\xf7\xc5\x6e\x04\xb6\x8b\x0e\x38\x9e\xe8\xb0\xbe\x83\xbe\x71\xb2\xd1\xd2\xc5\xbd\x07\x78\x00\x34\x3c\x21\x21\xb9\x18\xda\xfe\x81\xef\x65\x0e\x5c\x57\x29\xac\x99\xcd\x36\x73\xf0\xd7\x59\xa4\x14\x4d\x82\xc9\x74\x9e\x6f\x09\x27\x5c\xdc\xd8\x6d\xb4\x46\xf1\x6a\x47\x36\xea\xcd\xc2\xb2\x99\x83\xa5\xb7\x81\x16\x01\x29\x1e\x54\x3e\xc8\x75\x57\xee\x2e\x81\xa8\x29\xd4\x49\x34\xe8\x32\x9d\x22\xe9\xa8\xad\xc9\xf6\x6e\x95\x32\x50\x51\x52\xd0\x69\x5e\x04\x1d\x2b\x6d\x45\x9a\x34\x78\x2c\x83\x83\x4f\x73\x16\x3e\xcd\x8b\xe1\xe3\xca\xdc\x99\x42\x8c\xf1\xa2\x86\x67\xec\x39\xc0\x54\xa8\x98\xdd\x79\x89\xd3\x09\x92\x5b\x76\x48\x47\xbd\x2c\x06\x09\xac\xdc\x66\xbb\x8c\x5c\x6b\xb6\x6b\x92\xed\xde\x7d\xfc\x98\xdd\x05\x6a\x9e\x61\xfe\xf0\xf1\xdd\xef\x8a\x1b\x69\xf8\xf5\x2e\x09\x33\xa5\xe0\xe8\x1b\x8c\xf1\xc4\x3d\x23\x79\xa6\x7f\x04\x6d\x60\xd2\x3c\xba\x43\xec\x27\x35\x33\xb8\xdd\xbe\x99\x0b\x2d\xc3\xef\x7a\x44\x81\x35\xb7\x9a\xd1\xfa\x23\xac\x8b\x90\xb8\xa1\xaa\x3e\x25\x90\x93\x62\xd2\x1b\x6a\xbb\x02\x66\xed\x04\xfc\xb4\x24\xdf\x7f\xaf\x79\x36\x93\xe5\x4f\xc1\x97\x27\xc2\xa0\x8b\x42\x3e\xb8\x2e\x0a\xc9\x59\x4c\x16\xb9\xd0\x9a\x30\x27\x21\x10\xee\xf5\x34\x57\xb3\xbe\x53\x8a\xbd\xa0\xd0\x5d\x16\x83\x8a\xd5\x4c\xb2\x59\x34\x6f\x2e\x64\x8e\x4d\x89\x95\xef\x0e\xe8\x5b\x6c\xb4\xdd\x3e\xf7\x31\xbd\xc4\x1a\xb9\xb0\x80\x5c\x24\xb2\xcc\xb1\xe6\x7a\x6a\x79\xdf\x3e\x76\x07\x46\x2c\xe8\x4b\xed\x7e\xaa\x0e\x48\x25\x74\xcc\x7b\x5a\x1e\x8a\x94\x22\xa3\xf6\x4e\xe4\x99\x54\x9a\xab\x35\xdd\x11\x77\x0a\x4f\x30\xb4\x2c\xd9\x11\x7a\xb1\xcb\xab\xbe\x1b\x44\xc9\xde\xa8\xcf\x2b\xd8\xb8\x97\xfe\xfb\x7b\x1c\x11\x62\x4b\x9f\x6f\x6a\x63\xbc\xf5\x10\x17\x03\x67\x92\x5b\x5a\x8b\x9f\xa9\xa4\xa0\xad\xaf\x52\xf1\xaa\xe9\xc0\x1b\x90\x02\x43\x24\x05\x97\xa1\x8a\xd8\xa4\x60\xd1\xa8\x79\xf1\x0a\xbc\xd7\xc0\xec\x59\x60\xcc\x73\x3c\x9e\xd0\x1b\x75\xbe\x5a\x46\x79\x6a\x54\xcc\xc7\xdd\x75\x79\xb8\xce\xf0\xa8\x4a\x79\xcb\x44\xa6\xa2\x6e\xf7\xd9\xc4\x87\x06\x2d\xcf\x9d\x7a\xc3\x13\x8c\x9f\xae\xe1\x48\x30\x66\xdb\x77\x3a\x7c\x08\x39\xf7\xb1\xa8\x59\xfb\x59\x3e\x90\x1f\x6f\xc9\xeb\x17\xd4\x72\xfb\x01\xcc\xfa\xcf\xc0\x05\xab\xb2\x4d\xca\xda\x28\x20\x63\x16\x1b\xfa\x58\xb7\x63\xeb\xfc\x8e\x4a\x85\x58\x41\xab\x87\x57\x5f\x43\x97\xc8\x1c\xf4\x79\xbd\x81\xff\x7e\x24\xc0\x69\x0c\x82\xdf\xd7\xd7\x29\x30\x01\xcb\x96\x83\x09\xe0\xe9\x89\x48\xfb\xa0\x98\xfe\x58\xf3\x92\xe5\x7c\x45\xfe\xb2\x9c\xaf\x45\x9e\xea\xc6\x24\xcf\xf9\xbd\x2a\xa6\xeb\x60\x54\x48\x79\x29\xec\x5e\xde\x29\xd6\xbb\x75\x78\x5e\x8a\x7f\x7d\xf1\xa9\xf3\x2f\x2f\xa2\x03\xdf\x72\x8a\x2c\x30\x01\x4b\xb6\x5e\x4c\xf6\x70\xa2\x22\x94\xb4\x8c\x8a\x1b\x25\xf5\x66\x2f\x38\x6b\xab\xfa\x44\x3c\xb1\x38\x6f\x53\x18\xf8\xc5\x50\xc2\xfe\x8c\xc8\x8e\x50\x94\xf2\xaf\xf7\x23\x7b\xc8\x52\x10\xf2\xd3\x89\x64\x28\x37\x03\xac\xb6\x3a\x00\xe4\xbf\x1c\xf0\x97\x65\xe4\xc0\x4e\xb8\x5e\xb0\xa3\x60\x3d\x90\x7a\x22\x1f\x18\x31\x27\x6a\xe5\x0b\x37\x3a\x5d\x39\x9c\x5c\x78\x69\x63\x7d\xa6\xc6\xd3\xf1\xe0\xbb\xb5\xdd\xd4\x63\x85\xcf\x7f\xff\xed\xd7\x7f\x16\x47\x2a\x7a\x96\xab\xd7\x5e\xa5\x18\xdf\x9f\x02\x91\xc6\x8f\x0e\x87\x4a\x43\x68\x28\x89\x6d\xa3\xad\x71\x86\x18\x99\xb6\xf8\xee\xb7\x75\x37\x18\x1e\x87\xfe\xc1\x4d\xfa\xd3\x01\x52\xd5\x0f\x90\x15\x8c\xd0\x9b\x49\x65\x37\xd4\x6d\x86\x33\xb4\xdf\x8d\x30\x1d\x70\xef\x99\x41\xbf\x40\x7e\xa3\x6a\xb2\x85\x95\xda\xed\x91\x86\x86\xc1\x19\xd1\x77\xc0\x52\x71\xc8\x27\x7a\xfa\x55\x54\x4c\xbc\xed\x1a\xf0\xad\x1a\x48\x36\x41\xea\x44\xd7\x10\x2e\xc6\xe9\xc5\x39\x5d\x91\x7b\x5f\x75\x5b\x61\x69\x61\x16\xec\x3a\x5c\x41\xfe\xfc\x13\x4b\xdb\x0d\xc9\xef\x53\x84\x74\xf9\xe1\xfd\xbb\xe6\x28\x4f\xf1\xb4\xec\x62\x7d\xc0\x40\x47\x44\x4f\x87\xaf\xaf\x7b\xb1\x4f\xd3\x00\xb2\xd8\xf5\x49\xfa\x54\x33\xde\xe6\x98\xc3\x29\x5a\xb9\xf5\xd1\xe5\x6c\xb0\xf7\x01\x68\x8a\x5d\x63\xbe\x71\x96\x9c\x4a\x1b\x4f\xfa\xc8\xb9\xb5\x82\xa2\xb1\x08\xe1\x65\xfd\xd8\xf8\x92\x53\x25\x17\x12\xff\x03\xa4\x6f\x87\x78\x5d\xf4\xd6\x18\xde\x42\x55\x81\x7f\x6e\x71\x65\x28\xd3\xa1\xd2\x6b\x07\x68\x8f\xb1\x7e\x7e\xe4\x35\x0e\x43\x8b\x0c\x2f\xb4\x85\xe9\x80\xab\x44\x23\xb9\x70\xee\xba\x75\x9e\x3b\xc3\x6e\x92\x57\xbd\x2f\x2f\x9d\x9b\x27\x6c\xcd\x24\xc7\x17\x53\x59\x8d\x4d\xd4\x79\xb5\xa2\x8a\x12\xcf\x26\xf8\x38\xe0\x9d\xe9\x76\xa9\xde\x0b\xce\x4e\xbb\xda\x39\x75\xb4\x41\xdf\x4a\x25\x6b\x49\x5c\xab\x46\xb8\x64\xc9\xd2\x78\xbe\xaa\x84\x3a\x5c\x52\x82\x3c\xe1\xe9\x9b\xd1\x98\xc9\xa5\x9b\x7e\xd9\xcc\x76\x52\x7a\xa6\x23\xaa\xa6\x99\x6a\xb4\x28\x64\xbe\xd7\x7e\xeb\x46\x1a\x8e\x0f\x6e\x6e\xf0\x7a\x68\xd8\x2f\xff\xb0\x17\xda\x9e\xe7\xfa\x52\x0c\xf7\xf9\x7c\x27\x75\x52\x27\x7d\x94\x7b\x05\xa9\x9f\xef\xa0\x96\x43\xa5\x6d\x6a\x64\xda\x06\x7d\x0c\xca\x60\xa6\x46\x57\xf3\xf5\x82\x3e\x19\x37\xba\x0f\xae\x0a\xa9\xdb\xdd\xde\x6b\x7c\x13\x78\x84\x9d\xe6\x96\xf0\x4d\x62\x56\xf4\x94\x1d\xef\xf6\x3f\xb2\x72\x10\x3d\x7f\x64\x80\x16\x3d\x05\x13\x88\x0c\x84\xd7\x0b\xf2\x62\xb7\x80\x6c\x67\x7b\xfe\xa5\x08\xdb\x87\xf6\x7a\x13\x9f\x01\xcc\x09\xb3\x51\x07\x8c\x0c\xfa\x16\x2b\x65\x36\x49\xd8\xa0\xb9\x35\x73\x57\x0a\x46\xd6\x41\xcb\xd2\x01\xcd\xf0\x4c\x71\x28\xca\x07\x2a\xde\xc8\xfc\xb5\x26\xed\x26\x3b\xc4\x0e\xdf\x1e\x66\x2a\x2e\x38\x1c\x8e\x7a\xf1\x29\xcc\x73\xa0\xff\xa0\x18\x07\x38\xfc\x71\x49\x05\xb3\x23\x47\x10\x96\xc8\xfb\xa5\xcd\x62\x9d\xea\x3a\xbd\x6c\x91\xcd\xd4\x19\x88\xdf\x0f\x92\xe9\x36\x45\xad\x88\xaa\x2b\x07\x3c\x12\x3a\xac\xe2\x4c\x08\x09\x38\x96\x34\xa4\x14\xc9\xbe\x3f\x85\x58\x9c\x00\x9e\x14\x9d\x78\x3e\xd1\x15\xa5\x74\xc7\x3f\xdb\x1a\x2f\x6a\x89\x08\x80\xa8\x1d\x42\xe4\xc3\x2f\xf6\x48\xf9\xd7\xe9\x89\x32\x32\xc2\xeb\xa5\x38\x47\x84\x62\x12\xd0\xc0\xdd\xc7\xa5\xe9\x5b\x6a\xfb\x5c\xb4\xc5\xe4\xa2\xda\x7f\xce\x5c\x2e\xfb\x8f\xbb\x68\x56\x43\xdf\x3c\xdf\xa8\xc5\x1a\xe2\x36\xcf\x37\xde\x4e\x27\x59\x9e\x2e\xca\x09\x17\x8b\xe7\x86\x91\xd9\xd1\xe3\xd9\x85\xe1\xa6\x26\xa5\x15\xe7\x76\x4c\x92\x28\x88\xda\xfd\x33\xb5\x31\x92\x1a\xa3\x36\xd5\x11\xf0\x89\xba\x42\x91\xee\x0b\x9e\x53\x10\x07\x7e\x6b\x48\x37\x05\xcf\xa8\xd9\x03\x14\x3e\x67\x0a\x7e\xc0\xf7\x7c\x0f\x49\xf8\xc0\x15\x4a\xfb\xf7\xec\x68\x1a\x2a\x82\x6a\x30\xfe\xf0\xff\x66\x31\x3b\xa8\xfc\x3f\x00\x00\xff\xff\xc3\xc2\xed\xa7\x40\x21\x00\x00")

func mapping_static_js_mapping_type_mapping_js_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_js_mapping_type_mapping_js,
		"mapping_static/js/mapping/type-mapping.js",
	)
}

func mapping_static_js_mapping_type_mapping_js() (*asset, error) {
	bytes, err := mapping_static_js_mapping_type_mapping_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/js/mapping/type-mapping.js", size: 8512, mode: os.FileMode(420), modTime: time.Unix(1445360320, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_analyzer_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xe4\x57\x4d\x6f\xa3\x30\x10\xbd\xe7\x57\x58\x68\x0f\xed\x81\xd2\x6e\xaf\x04\xa9\x8a\xb4\xb7\xed\x65\xf7\xbe\x72\x60\x12\xac\x18\x1b\x19\xd3\x6d\x1a\xe5\xbf\xaf\x3f\x08\xd8\xe0\xa4\x6c\xdb\x95\x2a\x6d\xa4\xa6\x8e\x99\x79\x33\xf3\xe6\xd9\x23\xd2\x82\x3c\xa1\x9c\xe2\xa6\x59\x46\x15\x2f\x30\x8d\x4b\xc0\x05\x88\x28\x5b\x20\xf5\x49\xcb\x7b\xff\xa9\x24\x92\x42\x94\xad\xda\x46\xf2\x0a\x3d\x30\x4c\xf7\x2f\x20\xd2\xa4\xbc\xcf\x16\x69\xa2\xc0\xb2\xc5\x62\x8a\xb9\xe6\xc5\xfe\x84\xa8\x1f\xb2\x6d\xdc\x94\xfc\xf7\x32\x02\x21\xb8\xf8\x0e\x4d\x83\xb7\x10\x99\xe7\xe6\xd3\x39\x63\x0a\x42\x22\xf3\x1d\x17\x98\x6d\x41\x68\xcf\x9c\x72\xbc\x73\x8c\x05\xa7\xd0\xd9\x46\x19\x3a\x1c\x5c\xcc\xe3\xd1\x06\xed\x32\x33\xeb\x0d\x17\xd5\x29\x82\x5e\x47\x1d\x82\x59\x67\x3d\xae\x5b\x85\x7e\x14\x6f\x05\x6f\x6b\xc7\xc0\x18\x51\xbc\x06\x8a\xd4\x73\x95\x01\xc3\x95\xa2\xe6\x51\x7d\xa7\x89\xd9\x1f\xd9\x12\x56\xb7\x52\x57\xa0\x48\x01\xba\x8c\x8c\x3d\x92\xfb\x5a\x05\x97\xf0\x2c\x23\xcf\xdc\xa7\xc2\x64\x90\x73\x26\x55\xae\x11\x22\x85\xf2\xb0\xee\x35\xc5\x39\x94\x9c\xaa\x9e\x2d\xa3\x47\x93\xc1\x50\x82\x53\xf6\xcc\x92\x6c\x41\xd9\xaa\xc4\x02\xe7\x52\x11\xfe\x8d\x50\xf5\xaf\x09\x54\x94\xb6\xf4\x04\x46\x49\x23\x3b\xb0\x51\x0d\x7d\xa7\x71\x27\x95\x9b\x5c\x41\xff\xda\x58\xd4\x1b\x0a\x6c\x2b\x4b\x94\xa2\xbb\x09\xb1\x64\x0a\x1e\x13\x09\xaa\x45\x8f\x9c\x69\x86\x89\x97\x4c\xd2\xfe\xab\xe4\x32\x74\x3b\x76\x6c\x49\xdc\x70\x21\xf1\x9a\xc2\x14\xb2\xeb\x6e\x10\x73\x7e\x95\x13\x2d\x28\x64\x01\x35\x60\x39\x40\xeb\x2e\xd9\xfe\x20\xc2\x50\x30\x20\x92\xaa\x8f\x3b\xb4\xde\xa3\x2f\x84\x15\xf0\x3c\x4a\x40\xa5\xd0\xd4\x98\x9d\x92\xd8\xd2\x7d\x5d\x12\x25\x33\xd4\xaf\xe2\x8a\xb0\x56\xe5\x9d\x26\xda\x50\x9f\x2f\x14\x08\xdf\x9d\xb3\x31\xac\x39\xad\x24\xdf\x2d\x23\x01\x15\x7f\x82\xc1\xe3\xca\xa6\x73\x1d\xd4\xfc\xa5\x74\x2c\x10\xaa\x5b\x4a\x63\x41\xb6\xa5\xec\x53\xf3\x99\x0d\xea\xc3\xdd\x98\x7f\xbc\xb3\xf0\x71\x76\x00\x72\x4e\xe3\xa6\x8a\xef\x6e\x03\xf4\x02\x85\xdc\x9c\x7a\xd5\x16\x75\x85\xa9\xee\x15\xc5\xc0\xc3\xca\x6c\x16\x57\x67\x88\xf0\x04\x65\xfd\xcc\xb1\xb4\xce\xe6\xb8\x9f\xf1\x0b\xdd\x1b\x61\x53\x7d\x99\x4c\xb1\xc7\x52\x35\xc5\xf0\x5a\x12\xce\x5c\x29\xe6\x9e\x04\x87\x5f\x3a\x35\x05\x71\x38\x0c\x5b\xc7\x63\x9a\x58\x80\x09\x49\x89\x65\x69\xdc\x42\xff\xf6\x3a\x43\xfa\xd7\x29\xe7\xeb\x56\x4a\xee\xaa\xcf\xa3\xfc\x4a\x96\xa4\xb9\x3e\x5d\xbc\xd6\xf6\x15\x16\xd7\x92\x21\xf5\x17\x17\xb0\xc1\x2d\x95\x9e\xfa\x1e\x8a\x22\x4d\x2c\x4a\x30\xff\xb3\x1b\x6f\xbe\x9d\xfb\x71\x63\x4e\xe1\x4f\xbe\x03\x46\x5e\xf4\xc8\xee\x97\xa1\xdb\x7a\x2a\x44\x79\x32\xbf\x28\xc2\xc0\x8d\xd6\x3b\x86\xec\x67\x0a\xcf\xa8\x6e\x5a\x82\xcf\xe0\x54\x6f\x7d\x68\x2d\xb7\xfe\x47\xaf\xb6\x7e\x27\x2c\xb6\xa9\xd0\xde\x3e\x22\x4d\xd2\x1f\x3f\x1e\x4d\x05\x9f\x76\x3e\x06\xb3\x7b\xef\x80\xf4\x40\x3f\x76\x42\x9a\x26\x05\x46\xe4\xa5\x90\xef\x9a\x89\x6e\xc0\x99\x43\xd1\x71\xf9\xbf\xa7\xa2\x43\xc4\xdf\x8d\x45\xc7\xf1\x63\x46\xe2\x69\x26\x3a\xc0\x33\xe7\xa1\xf4\x05\x27\xfd\xcc\x86\x3b\xea\x5d\x23\xf1\x15\xc2\x67\x4e\x44\x57\x77\x9f\x6b\x24\xda\xa5\xee\xd3\xa5\x97\xca\x0d\xe7\x72\x78\x51\xed\x2a\x0c\x67\x17\x39\x95\xe7\x98\xe5\x40\x95\xb2\xb2\x95\x59\xf9\x99\x4e\x99\x5a\xb7\x84\x6a\x21\x5e\x20\x67\x14\xb4\x16\xa4\xc2\x62\xef\x51\xf2\x03\x3f\xc1\x10\xa9\x2b\xea\x4f\x00\x00\x00\xff\xff\x05\x8f\x6c\x6f\x7d\x0f\x00\x00")

func mapping_static_partials_analysis_analyzer_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_analyzer_html,
		"mapping_static/partials/analysis/analyzer.html",
	)
}

func mapping_static_partials_analysis_analyzer_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_analyzer_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/analyzer.html", size: 3965, mode: os.FileMode(420), modTime: time.Unix(1445126916, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_analyzers_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x54\x4d\x6f\xdb\x30\x0c\xbd\xfb\x57\x08\x3a\xb5\xc0\x9c\x60\x3b\xdb\x06\x06\x6c\xc7\xf5\xb6\x1f\x20\x5b\xac\x2d\x54\x95\x04\x89\x6e\xe2\x15\xfd\xef\xa3\xe4\xef\x2c\x4b\x6e\x0d\x82\xe4\x51\x12\xc9\xf7\xfc\x28\x17\x28\x6a\x0d\xac\xd1\x22\x84\x92\x8f\x41\xfa\xcd\x03\x7a\xe5\x40\xf2\x2a\x63\xac\xc0\x0e\x84\x8c\x28\x62\x3f\x82\xb4\x5c\x3d\x89\x57\x28\x8e\x04\x36\x6b\x6b\x4c\x28\x9d\x8e\x2b\x53\x85\x02\x6b\x2b\x87\xa5\x16\x33\x6d\xee\xc1\x81\xc0\x92\x3f\x08\x43\xd5\xbe\x88\x37\xa1\x1f\x99\x32\xf4\x95\x70\xfe\x25\x9c\x53\xa6\x3d\xd0\x9e\x1e\x82\x0a\x23\xf8\x03\x3e\xf0\xb5\xa7\xac\xde\xdf\x53\xf2\xc7\x07\xb5\x92\xdb\x8d\x09\x52\x20\xd5\xdb\x2c\xb4\x46\x93\xb7\xde\xf6\x8e\x2d\x28\x3f\x07\xce\xbc\xd5\x50\xf2\x14\xf3\x35\x93\x72\xeb\x1e\xd1\x9a\x48\xb6\xd1\xaa\x79\x29\x39\x48\x85\xdf\x27\x26\x13\x6f\x96\x88\x73\x86\x83\xa3\x22\x63\x06\xdf\x14\x99\x3f\x2b\x87\xd4\x5d\xc2\xb3\xe8\x35\x26\x7c\x0e\xbb\xb6\xd4\x38\x38\x61\xe6\x8c\x56\x0f\xae\x53\x0d\xf1\x58\x50\x1e\x79\x70\x26\xbc\x12\x79\xa7\xa4\x04\x43\x2e\xfa\x1e\x38\x99\x10\x53\x2b\xf6\x93\x0e\x6c\x95\x1c\x47\x62\xb7\xd5\x49\xd0\x80\xb0\xd7\xf7\xd9\xca\xd0\x8b\xd0\xdd\x94\xf6\x23\xb1\xbc\x29\xae\x38\x92\xeb\xcb\x38\x2c\xa3\x31\xcf\xe5\x32\x82\xa1\xb3\xa7\x92\xff\x46\xa5\xc3\xe1\x05\x86\xf0\x70\x67\xf6\x1e\x0f\x1a\x4c\x8b\x1d\x2b\xd8\xd7\xed\x1c\xb2\xc6\xea\x48\xae\xe4\xdf\x78\xf5\x64\x0d\xfc\xdb\x93\xfe\xe7\x1b\x50\xe0\xb3\xb5\x78\xe5\x5e\xed\xeb\x64\xff\x37\xca\xc0\x69\x71\xe9\xae\x41\x17\xf6\x84\xd7\x9d\x4b\xae\xd7\x3a\xf7\xaa\xed\x90\x98\xc3\x89\xcd\x75\x2f\x1f\xea\x55\x45\xa3\x0e\x02\xf1\xdd\x51\x65\xd9\xdf\x00\x00\x00\xff\xff\x00\x4d\x8c\x58\x58\x04\x00\x00")

func mapping_static_partials_analysis_analyzers_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_analyzers_html,
		"mapping_static/partials/analysis/analyzers.html",
	)
}

func mapping_static_partials_analysis_analyzers_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_analyzers_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/analyzers.html", size: 1112, mode: os.FileMode(420), modTime: time.Unix(1445123563, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_charfilter_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x54\x4d\x8f\x9b\x30\x10\xbd\xe7\x57\x58\x3e\xb5\x07\x8a\xda\xbd\x02\x97\x48\xbd\x75\x2f\xed\x1f\x30\x66\x02\xd6\x0e\x18\xd9\xc3\xb6\x51\x94\xff\xde\xb1\x4d\x96\x8f\xa0\x1e\x8a\x14\xcb\xf1\x3c\xcf\xbc\xf7\x86\xa1\x68\xcc\xbb\xd0\xa8\xbc\x2f\x65\x6f\x1b\x85\x59\x07\xaa\x01\x27\xab\x93\xe0\xa7\xe8\x5e\xb6\x51\x32\x84\x20\xab\xf3\xe4\xc9\xf6\xe2\xdc\x29\x27\xbe\x1b\x24\x70\x45\xde\xbd\x54\xa7\x22\xe7\x7c\xd5\xe9\xf4\x9c\xb6\xb6\xcd\xf5\x91\x34\x04\x87\x36\xf3\x9d\xfd\x5d\x4a\x70\xce\xba\x1f\xe0\xbd\x6a\x41\xc6\x78\x7c\xe6\xcb\x0a\xc1\x91\x88\x6b\xd6\xa8\xa1\x05\x17\x6e\x6a\xb4\xea\x6d\x05\x76\x16\x61\xc6\xca\x4a\xdc\x6e\xeb\x9c\xf7\x7b\x2a\x3a\x33\x8b\xfb\x8b\x75\xfd\xa3\x42\xd8\xcb\x39\x43\xdc\x57\x1f\x79\xd7\x2a\x42\x28\x6b\x9d\x9d\xc6\x15\x20\x82\x50\xd5\x80\x82\xe3\xa5\xa4\x41\xf5\xec\xce\x2b\xaf\x45\x1e\xcf\x77\x58\x33\x8c\x13\x05\x05\x6c\x0a\x60\x29\x23\x5e\xd0\x75\xe4\xe2\x04\x7f\x48\x6e\xe0\x5b\x2b\x22\x03\x6d\x07\x62\xae\x52\x98\xe6\x51\x4e\x8c\xa8\x34\x74\x16\xb9\x6d\xa5\x7c\x8d\x0c\x16\x09\x2b\xd9\xff\x25\x49\x73\x8b\x2f\xb1\xc3\x81\xa5\xac\x7e\xf1\x7a\xac\x6d\x95\x59\x5b\xcc\x7c\x9f\x7d\xfd\x26\xa2\xe0\xe3\x22\x1e\x10\x74\x34\x83\x6b\x70\x67\x53\xad\xf4\x36\x85\x2a\xe7\x78\xfa\xe9\xf3\xa1\x27\x2b\x0f\x17\x86\x5f\x22\xc5\x43\xf8\x91\x87\x87\xc0\xe0\xeb\x5e\xf3\x13\xb0\xb0\x23\x19\x3b\x04\x12\x0e\x46\x50\xb4\xe3\xce\xb2\xc5\x56\x8c\x97\xd5\xed\xb6\x39\xba\xdf\x8b\x3c\xa5\xd9\xf9\x92\x27\x63\xf6\xa7\xb1\x8f\xbb\xbf\xdb\xb6\x7e\x8c\xd4\xde\x91\x10\x31\x83\xc6\xa9\x01\xe1\x9d\x4e\x36\x8c\x8a\x3a\x99\xcf\x13\x99\x87\x93\x7f\x8d\xef\xc5\x5a\x5a\xbe\x0a\xf5\x44\xc4\xf2\x67\x44\x4d\x83\xe0\x5f\xd6\xc0\x45\x4d\x48\x32\x4d\xa8\xd1\x6f\xcc\x44\x0d\x1a\x90\x7b\x58\x9d\xe3\xae\xc8\xd3\xd5\x6d\x9e\x05\x5f\x4f\x06\x1b\x86\xcf\x23\x91\xe2\xdb\x46\xed\x8a\x8e\xce\xf4\xca\x5d\xc5\x38\x21\x66\xce\xb4\x1d\x7f\x01\x7e\xaa\x77\x58\x2a\xcd\xa2\xfe\x06\x00\x00\xff\xff\x83\x23\xbc\x09\xea\x04\x00\x00")

func mapping_static_partials_analysis_charfilter_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_charfilter_html,
		"mapping_static/partials/analysis/charfilter.html",
	)
}

func mapping_static_partials_analysis_charfilter_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_charfilter_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/charfilter.html", size: 1258, mode: os.FileMode(420), modTime: time.Unix(1445125832, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_charfilters_generic_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func mapping_static_partials_analysis_charfilters_generic_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_charfilters_generic_html,
		"mapping_static/partials/analysis/charfilters/generic.html",
	)
}

func mapping_static_partials_analysis_charfilters_generic_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_charfilters_generic_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/charfilters/generic.html", size: 0, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_charfilters_regexp_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x8f\x41\x8e\x83\x30\x0c\x45\xd7\xe1\x14\x51\xf6\x0c\x17\x08\xec\xe6\x02\x73\x83\x4c\x62\x20\x92\x89\x23\xc7\x8c\x98\xdb\x37\x40\x17\xad\xd4\x4a\x6d\x57\x89\x2c\xbf\xef\xff\x94\x0d\xf1\x4f\x7b\x74\xa5\xf4\x66\x24\x5e\xda\x89\x69\xcd\x66\x68\x94\xb2\xe8\x7e\x01\x75\x9d\xf6\xc6\xcf\x8e\xc7\x88\x02\xfc\x03\x13\x6c\x75\xa1\xbe\x2b\x3a\xd6\xdf\x5b\x66\x28\x25\x52\xb2\xdd\x01\xec\xa8\xb2\x31\xe5\x55\x74\x9a\xda\x85\x02\xe0\x6d\xc0\x17\x9f\x09\x5a\xfe\x33\xf4\x46\x60\x13\x73\xd7\xc0\x53\x12\x26\x34\x3a\x86\x07\x87\x75\x46\xe7\x61\x26\x0c\x50\x7b\xed\x45\x6d\x57\x1d\x86\xa6\xf9\xc4\xe5\x08\xdb\x65\x8e\xcf\x02\x49\x5e\xb7\x38\xd9\xf7\x35\xae\xdc\x13\x8f\x4b\x00\x00\x00\xff\xff\x7e\x49\xa0\xae\x92\x01\x00\x00")

func mapping_static_partials_analysis_charfilters_regexp_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_charfilters_regexp_html,
		"mapping_static/partials/analysis/charfilters/regexp.html",
	)
}

func mapping_static_partials_analysis_charfilters_regexp_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_charfilters_regexp_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/charfilters/regexp.html", size: 402, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_charfilters_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x54\x4d\x6f\xdb\x30\x0c\xbd\xe7\x57\x08\x3a\xb5\xc0\xec\x60\xd8\xd5\xf6\x65\x1f\xb7\xf5\xb4\x9d\x07\x45\xa2\x6d\xa1\xaa\x24\x48\x74\x13\xa3\xe8\x7f\x1f\x25\xd7\x8e\x13\x77\xe9\x6d\x41\x90\x3c\xd2\xe1\xe3\x7b\x22\x95\x0a\xc5\xc1\x00\x93\x46\xc4\x58\xf3\x29\xc8\x9f\x45\xc4\xa0\x3d\x28\xde\xec\x18\xab\xb0\x07\xa1\x12\x4a\x38\x4c\x20\xa7\x9b\x07\xf1\x04\xd5\x9e\xc0\x2a\xf7\x6b\xf4\x9b\xdc\x39\x26\x94\x19\x52\xe6\x8d\xb5\xc2\x83\x53\xe3\xc2\xcf\x6c\x57\x04\xf0\x20\xb0\xe6\x77\xb2\xb5\xd4\xe2\x93\x6c\x9f\x85\xb9\x67\xda\xd2\x5b\xc1\xe9\xa7\xf0\x5e\xdb\xae\x14\x56\x98\x31\xea\x58\xca\x5e\x84\x3f\xad\x36\x08\x21\xf2\x73\x63\xd5\xbc\xbc\x4c\x0c\xaf\xaf\xd4\x50\x5d\x3f\x21\xd2\x12\x49\xee\xf6\xe9\x1b\xa4\x40\xe9\xe7\xf9\x80\x0e\x68\x8b\x2e\xb8\xc1\xb3\x05\x15\xa7\xc8\x59\x70\x06\x6a\x9e\x63\x7e\xae\xa4\xda\xc3\x80\xe8\x6c\x32\x24\x8d\x96\x8f\x35\x07\xa5\xf1\x2b\x69\xfd\x91\xa5\xce\xee\xd8\x64\x8f\xb3\xa4\x85\xda\xe4\x2a\xbe\x22\x9a\x5f\x67\x1d\x59\x81\x82\x56\x0c\x06\x33\x3e\xc5\x8b\xd6\xd4\x3c\x7a\x61\xe7\x8a\xce\x8c\xbe\xd7\x92\xb4\x2c\xa8\x48\x5a\x38\x13\x41\x8b\xa2\xd7\x4a\x81\xa5\x0d\x08\x03\x70\x1a\x56\x2a\x6d\xd8\x77\xfa\xc1\xda\xcd\x7e\x12\x76\xdb\xa1\x02\x03\x08\x1b\x8f\xff\xdb\x1c\x06\x11\xfb\x9b\xee\xbe\x65\xa1\x37\xfd\x55\x7b\x1a\xfe\xb2\x15\xcb\x86\xcc\x2b\xbc\x6c\x6b\xec\xdd\xb1\xe6\xbf\x51\x9b\x58\x3e\xc2\x18\xef\x3e\x5e\xd2\xfb\xd2\x80\xed\xb0\x67\x15\xfb\xbc\x5e\x58\x26\x9d\x49\xfa\x6a\xfe\x85\x37\x0f\xce\xc2\xb6\x2d\x7d\xcf\xf7\xa5\xc2\xd6\x39\x7c\xe7\x66\x5e\xf2\xec\xfe\x3d\x2e\x0b\xc7\xd5\xac\x3e\x9c\xd2\xd5\x8c\xe2\xd3\xc5\xa8\xfc\x60\x4c\x11\x74\xd7\x23\x69\x87\x23\x4b\xcc\x42\x12\x31\x9b\xf8\xaf\x4f\xf8\x5d\x6f\x93\x23\x02\xe9\x7f\xa8\xd9\xfd\x0d\x00\x00\xff\xff\x7a\x9f\xc4\x9d\xa3\x04\x00\x00")

func mapping_static_partials_analysis_charfilters_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_charfilters_html,
		"mapping_static/partials/analysis/charfilters.html",
	)
}

func mapping_static_partials_analysis_charfilters_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_charfilters_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/charfilters.html", size: 1187, mode: os.FileMode(420), modTime: time.Unix(1445123661, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_tokenfilter_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x54\x4d\x8f\x9b\x30\x10\xbd\xe7\x57\x58\x3e\xb5\x07\x8a\xda\xbd\x12\x2e\x91\x7a\xeb\x5e\xba\x7f\xc0\x98\x09\x58\x19\x6c\xcb\x1e\xb6\x8d\xa2\xfc\xf7\xfa\x2b\x1b\x20\x51\x55\x15\x29\x96\xe3\x79\x9e\x37\xef\x0d\x43\xd3\xab\x77\x26\x51\x78\xbf\xe7\x93\xe9\x05\x56\x23\x88\x1e\x1c\x6f\x77\x2c\x3c\xcd\xf8\xb2\x8e\x92\x22\x04\xde\x1e\x66\x4f\x66\x62\x6f\xe6\x04\x9a\x7d\x57\x48\xe0\x9a\x7a\x7c\x69\x77\x4d\x1d\x12\xb6\xbb\xdd\x63\xde\xce\xf4\xe7\x5b\xd6\x18\xd4\x43\xe5\x47\xf3\x6b\xcf\xc1\x39\xe3\x7e\x80\xf7\x62\x00\x9e\xe2\xe9\x29\x97\x05\x82\x23\x96\xd6\xaa\x17\x7a\x00\x17\x6f\x4a\x34\xe2\xb4\x00\x3b\x83\x50\xb0\xbc\x65\x97\xcb\x32\xe7\xf5\x9a\x49\x4b\x65\x69\x7f\x34\x6e\xba\x31\xc4\x3d\x2f\x19\xd2\xbe\xfd\xc8\xbb\x54\x11\x43\xd5\xe0\xcc\x6c\x17\x80\x04\x42\xd1\x01\xb2\x10\xdf\x73\xd2\x62\x0a\xf6\xbc\x86\xb5\xa9\xd3\xf9\x06\xab\xb4\x9d\x29\x2a\x08\xa6\x00\xee\x79\xc2\x33\x3a\xdb\x40\x4e\xf0\x9b\xf8\x8a\x4e\x1a\x4d\xa1\x30\xbe\xca\x51\x1e\xd5\xdf\xe8\x98\x45\x21\x61\x34\x18\xfa\xb6\xe7\xaf\xa9\x82\xbb\x84\x85\xec\xff\x93\x14\x7b\x7c\x4c\x2d\x8e\x65\xf2\xf6\x2d\xac\xcf\xc5\x2d\x52\x4b\x83\x95\x9f\xaa\xaf\xdf\x58\x52\xfc\x9c\xc5\x03\x82\x4c\x6e\xc8\x31\xb6\xb6\x90\xe5\xf7\x29\xd2\x1c\xd2\xf1\xa7\xcf\x4f\x0d\x58\xb8\xb8\xa8\xf1\x4b\x2a\xf2\x29\xfe\x5f\x9d\xcd\xd6\x6e\x65\x3f\x20\x1b\x63\x49\x19\x1d\xcb\x70\x60\x41\xd0\xb6\xfc\x20\x9d\x6d\x04\x79\xde\x5e\x2e\xeb\xb3\xeb\xb5\xa9\x73\xa6\x8d\x3b\x75\xb6\x67\x7b\x9a\xda\xb9\xf9\xbb\xee\xee\xc7\x64\x3d\xd8\x12\x43\x4a\x4b\x9c\x7b\x60\xde\xc9\xec\x85\x15\x34\xf2\xba\x4c\x66\x1d\x4f\xfe\x36\xc6\x47\x63\xe8\xfe\x79\xe8\x66\xa2\x60\x41\x41\x74\xa4\x59\xf8\x55\x3d\x1c\xc5\x8c\xc4\xf3\xa4\x2a\x79\x0a\xef\x83\xd0\x12\x30\x74\xb2\x3d\xa4\x5d\x53\xe7\xab\xeb\x3c\x77\x7c\x37\x2b\xec\x03\xbc\x8c\x46\x8e\xaf\xbb\xb5\x21\xb5\x4e\x4d\xc2\x9d\x99\x9d\x11\x2b\xa7\x86\x31\x7c\x09\x7e\x8a\x77\xb8\x33\x15\x51\x7f\x02\x00\x00\xff\xff\x9d\xa8\x1e\x32\xf3\x04\x00\x00")

func mapping_static_partials_analysis_tokenfilter_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_tokenfilter_html,
		"mapping_static/partials/analysis/tokenfilter.html",
	)
}

func mapping_static_partials_analysis_tokenfilter_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_tokenfilter_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/tokenfilter.html", size: 1267, mode: os.FileMode(420), modTime: time.Unix(1445125849, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_tokenfilters_dict_compound_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x90\xbd\xae\x84\x20\x10\x85\x6b\x7d\x8a\x09\xbd\x97\x17\x40\xdf\xe0\xde\xe6\x6e\xb2\xa5\x41\x18\x0d\x59\x60\x08\xe0\x36\xc6\x77\x5f\xfc\x2b\x2c\x96\x6a\x72\x72\x3e\xbe\xc9\x54\x42\x9b\x37\x28\x2b\x53\x6a\xd9\x48\xd1\x35\x53\xa4\x39\xb0\xae\xae\x2a\x61\xe5\x80\x16\x4a\xda\xb2\x4c\x2f\xf4\xa3\xb1\x19\xe3\x63\x1b\x7f\x65\x48\xac\xfb\x9f\x07\x78\x52\xd4\x49\xf0\xbd\xbb\x53\x09\x2d\xaa\x0c\x7e\x6a\x1c\x69\xb4\x37\xf6\x47\x1b\x95\xfb\x3d\xe8\x9d\x0c\xec\x66\x56\xe4\x73\x24\xcb\xc0\xe8\x6f\xc2\x1a\xca\x2b\x0e\x0a\xd9\x90\xdf\x1c\x11\x03\xca\x7c\xf6\x4b\x09\x8c\x87\x6b\xfe\x93\x0e\x0b\xb4\x2c\x57\xb0\xae\x82\x1f\xe8\xf9\x93\xe0\xc7\xb6\x65\x71\xc1\xcb\x25\xba\x4f\x00\x00\x00\xff\xff\x61\x16\x44\xb1\x10\x01\x00\x00")

func mapping_static_partials_analysis_tokenfilters_dict_compound_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_tokenfilters_dict_compound_html,
		"mapping_static/partials/analysis/tokenfilters/dict_compound.html",
	)
}

func mapping_static_partials_analysis_tokenfilters_dict_compound_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_tokenfilters_dict_compound_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/tokenfilters/dict_compound.html", size: 272, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_tokenfilters_edge_ngram_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x90\x41\x6e\xc4\x20\x0c\x45\xd7\xe4\x14\xc8\xfb\x69\x2e\x40\xd8\x75\xd9\x43\x10\x70\x52\x34\x0e\x46\x84\x54\xd3\xdb\xd7\x4c\xbb\x41\xd5\x48\xa3\xcc\xc6\x92\xf3\xfd\x7f\xde\x47\x99\x10\xbf\xb4\x27\xb7\xef\x13\x2c\x5c\xb6\xcb\x5a\xf8\xc8\x60\x07\xa5\x0c\xb9\x19\x49\xcb\xd7\x09\x2a\x5f\x31\x2d\x91\x2a\x96\xf7\xb0\x22\xd8\x36\xcd\x78\xbf\x68\xb7\xca\xec\x48\xe8\x6b\x17\xe5\x39\xd5\xc2\x04\x3a\x86\xff\x09\x3a\xad\x97\x8d\x03\x52\x27\xbd\xe1\x3d\xbd\x25\x2a\xc3\xb9\x46\x4e\x76\x29\x92\x63\xc6\xbf\xad\x93\x66\xe7\xaf\x9d\x62\xc6\x5f\x0e\x59\xcc\x28\xd5\xec\x30\x9c\xa8\xf8\x11\x13\x58\x19\x5d\xc1\x98\xf2\x51\x1f\x50\x6f\x62\xd0\xf5\x3b\xe3\x04\xe9\xd8\x66\x2c\xf0\xd4\x43\xb4\xff\xe8\x4c\xce\xe3\x27\x53\x40\x81\x80\x17\xc1\xdd\x4d\xc0\xdd\xed\x79\x70\x31\x9c\x01\x6f\xb6\x07\xe0\x3f\x01\x00\x00\xff\xff\xa6\xc2\x37\x43\x53\x02\x00\x00")

func mapping_static_partials_analysis_tokenfilters_edge_ngram_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_tokenfilters_edge_ngram_html,
		"mapping_static/partials/analysis/tokenfilters/edge_ngram.html",
	)
}

func mapping_static_partials_analysis_tokenfilters_edge_ngram_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_tokenfilters_edge_ngram_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/tokenfilters/edge_ngram.html", size: 595, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_tokenfilters_elision_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x90\x3d\xce\xc3\x20\x0c\x86\xe7\xe4\x14\x88\x3d\x1f\x17\x20\x91\xbe\x03\xb4\x53\xf7\x88\x12\x27\x42\x35\x18\x01\xed\x12\xe5\xee\x75\xfe\x86\x0c\x65\xb2\x5e\xbd\x0f\x8f\xe5\x4a\x0f\xee\x23\x2c\x9a\x9c\x5b\x39\x52\xf2\xcd\x94\xe8\x1d\x65\x57\x57\x95\x46\xf3\x04\x14\x9c\xb6\xb2\xd0\x0b\xc2\xe8\xb0\x40\x7a\xac\xe3\xcd\xc4\x2c\xbb\xff\x54\x9c\x45\xc8\x5a\x6d\xd5\x0d\xca\x80\x60\x8b\x08\x53\xe3\x69\x00\xbc\xa0\x7f\xe6\x00\xfa\x2d\xec\xbd\x89\xf2\x22\xb7\x14\x4a\x22\x94\xc2\x0d\xbf\x9c\xb5\xe0\xc7\x1e\x8a\xc5\x51\x58\x3d\x09\x22\x98\x72\xf4\xb9\x24\x5c\x10\xe7\x7c\x37\x1e\x18\x9a\xe7\x33\x58\x16\xad\x76\xf4\xf8\x49\xab\x7d\x63\x5e\x5e\x2b\x3e\x46\xf7\x0d\x00\x00\xff\xff\x97\x76\x02\xbd\x13\x01\x00\x00")

func mapping_static_partials_analysis_tokenfilters_elision_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_tokenfilters_elision_html,
		"mapping_static/partials/analysis/tokenfilters/elision.html",
	)
}

func mapping_static_partials_analysis_tokenfilters_elision_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_tokenfilters_elision_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/tokenfilters/elision.html", size: 275, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_tokenfilters_generic_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func mapping_static_partials_analysis_tokenfilters_generic_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_tokenfilters_generic_html,
		"mapping_static/partials/analysis/tokenfilters/generic.html",
	)
}

func mapping_static_partials_analysis_tokenfilters_generic_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_tokenfilters_generic_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/tokenfilters/generic.html", size: 0, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_tokenfilters_keyword_marker_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x90\x4d\x0e\x83\x20\x10\x85\xd7\x7a\x0a\xc2\xde\x72\x01\xf4\x02\x4d\xbb\xea\xde\x50\x19\x0d\x11\x18\x02\xb4\x4d\x63\xbc\x7b\xc7\xbf\x85\x8b\xb2\x9a\xbc\xbc\x8f\x6f\x32\x85\xd4\xe6\xcd\x3a\xab\x52\xaa\x79\x8f\xd1\x55\x43\xc4\x57\xe0\x4d\x59\x14\xd2\xaa\x27\x58\x46\x69\xcd\x33\x8e\xe0\x7b\x63\x33\xc4\xc7\x32\xde\x54\x48\xbc\xb9\xc2\xf7\x83\x51\x27\x29\xd6\xea\x0a\x25\xb0\xd0\x65\xe6\x87\xca\xa1\x06\x7b\x42\x2f\xe3\x0e\xb4\x6b\xd8\x3a\x15\xf8\x49\xde\xa1\xcf\x11\x2d\x67\x46\xff\x73\x96\x8c\x1e\x79\x30\x64\x83\x7e\xf1\x44\x08\xa0\xf2\xde\xa7\x12\x33\x9e\x1d\xf3\x5d\x39\x20\x68\x9a\x8e\x60\x9e\xa5\xd8\xd0\xfd\x27\x29\xb6\x8d\x69\x79\x29\xe8\x18\xcd\x2f\x00\x00\xff\xff\x4f\xfe\x32\xc4\x13\x01\x00\x00")

func mapping_static_partials_analysis_tokenfilters_keyword_marker_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_tokenfilters_keyword_marker_html,
		"mapping_static/partials/analysis/tokenfilters/keyword_marker.html",
	)
}

func mapping_static_partials_analysis_tokenfilters_keyword_marker_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_tokenfilters_keyword_marker_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/tokenfilters/keyword_marker.html", size: 275, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_tokenfilters_length_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\xce\x41\xae\x83\x30\x0c\x04\xd0\x75\x38\x45\xe4\x3d\x9f\x0b\x04\x6e\xf0\x0f\x11\x88\xa1\x51\x1d\x3b\x0a\xa1\xa2\xb7\xaf\xe9\x0e\x55\x95\x2a\x36\x59\xc4\x33\x9a\x67\x5c\x88\x0f\x3b\x91\x5f\xd7\x1e\x66\x29\xa9\x5d\x8a\x6c\x19\x86\xc6\x18\x47\x7e\x44\xb2\xfa\xdb\x43\x95\x3b\xf2\x1c\xa9\x62\xf9\x8f\x0c\x83\x3e\xae\x7b\xdf\x8f\xa4\x71\x91\xf3\x56\x2d\x2f\x6d\x92\x80\x74\xca\xff\x25\x2d\xd8\xfa\xcc\xd8\x03\x6f\x69\xc4\x02\xa7\xc1\x49\xb8\x16\x21\xb0\x31\x7c\xec\xd8\x4c\x7e\xc2\x9b\x50\x40\x45\x1c\x2a\xd7\x29\x78\x68\x9a\x2b\x70\xbf\x2b\xdc\xef\xbf\xc3\xb5\x70\x05\x7e\xd4\xbe\xc0\x5f\x01\x00\x00\xff\xff\xc5\x81\x9e\x7b\x70\x01\x00\x00")

func mapping_static_partials_analysis_tokenfilters_length_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_tokenfilters_length_html,
		"mapping_static/partials/analysis/tokenfilters/length.html",
	)
}

func mapping_static_partials_analysis_tokenfilters_length_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_tokenfilters_length_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/tokenfilters/length.html", size: 368, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_tokenfilters_ngram_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\xce\x41\xae\x83\x30\x0c\x04\xd0\x75\x38\x45\xe4\x3d\x9f\x0b\x04\x6e\xf0\x0f\x11\x88\xa1\x51\x1d\x3b\x0a\xa1\xa2\xb7\xaf\xe9\x0e\x55\x95\x2a\x36\x59\xc4\x33\x9a\x67\x5c\x88\x0f\x3b\x91\x5f\xd7\x1e\x66\x29\xa9\x5d\x8a\x6c\x19\x86\xc6\x18\x47\x7e\x44\xb2\xfa\xdb\x43\x95\x3b\xf2\x1c\xa9\x62\xf9\x8f\x0c\x83\x3e\xae\x7b\xdf\x8f\xa4\x71\x91\xf3\x56\x2d\x2f\x6d\x92\x80\x74\xca\xff\x25\x2d\xd8\xfa\xcc\xd8\x03\x6f\x69\xc4\x02\xa7\xc1\x49\xb8\x16\x21\xb0\x31\x7c\xec\xd8\x4c\x7e\xc2\x9b\x50\x40\x45\x1c\x2a\xd7\x29\x78\x68\x9a\x2b\x70\xbf\x2b\xdc\xef\xbf\xc3\xb5\x70\x05\x7e\xd4\xbe\xc0\x5f\x01\x00\x00\xff\xff\xc5\x81\x9e\x7b\x70\x01\x00\x00")

func mapping_static_partials_analysis_tokenfilters_ngram_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_tokenfilters_ngram_html,
		"mapping_static/partials/analysis/tokenfilters/ngram.html",
	)
}

func mapping_static_partials_analysis_tokenfilters_ngram_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_tokenfilters_ngram_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/tokenfilters/ngram.html", size: 368, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_tokenfilters_normalize_unicode_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x90\x3d\x12\xc2\x20\x10\x85\x6b\x3c\x05\x43\x1f\xb9\xc0\x86\xd2\xd2\xce\x03\x44\xd8\x64\x98\x6c\x76\x33\x04\x2d\x3c\xbd\x9b\x68\x13\x67\x62\xf7\x78\x3f\xdf\x00\x06\x52\x7e\xda\x48\xdd\xb2\xb4\xae\x97\x32\x35\x43\x91\xc7\xec\xc2\xc9\x18\xa0\xee\x8e\x64\xd5\x6d\x5d\x95\x11\xb9\xcf\x54\xb1\x5c\xb5\xd5\x51\x7e\xe1\x8d\x73\x94\x84\x2e\x5c\xd4\x01\xbf\xb5\xd7\x9d\x81\x05\x09\x63\xdd\x61\xa3\x70\x2d\x42\xce\xe6\xf4\x9f\x66\x79\x68\x26\x15\xb4\xab\x9d\x57\xc8\x76\x2b\xc5\xcb\x5c\xb3\x70\xe0\x3e\x82\xff\xea\x9f\x20\x1d\x05\xe3\xe1\x64\xdc\x6f\xc0\x7f\x1e\xa1\x07\xf0\xfa\x47\xe1\x1d\x00\x00\xff\xff\xd1\xd9\xe9\x1f\x2a\x01\x00\x00")

func mapping_static_partials_analysis_tokenfilters_normalize_unicode_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_tokenfilters_normalize_unicode_html,
		"mapping_static/partials/analysis/tokenfilters/normalize_unicode.html",
	)
}

func mapping_static_partials_analysis_tokenfilters_normalize_unicode_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_tokenfilters_normalize_unicode_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/tokenfilters/normalize_unicode.html", size: 298, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_tokenfilters_shingle_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x92\xc1\x6e\xc3\x20\x0c\x86\xcf\xc9\x53\x20\xee\x5d\x5f\x20\xe1\x38\x69\x87\x69\x87\xed\x3e\x11\x70\x52\x54\x07\x47\x04\xa6\xec\xed\x67\xd6\x64\x52\xb5\x55\x62\x6d\x2f\x06\x61\xff\xfa\xbf\x5f\xa6\x6a\xac\xfb\x10\x06\xf5\x3c\xb7\xb2\xa7\x30\xee\x86\x40\x69\x92\xaa\xae\xaa\x06\x75\x07\x28\xf8\xb5\x95\x91\x8e\xe0\x7b\x87\x11\xc2\xb3\xf3\x52\x71\x69\xf6\xdf\xfd\x3c\x59\x35\xce\x4f\x29\x0a\x3f\xec\x46\xb2\x80\x67\xf3\x0f\x23\x0b\x44\xfc\x9c\xa0\x95\x3e\x8d\x1d\x04\x79\x66\x68\xc8\xc7\x40\x28\x85\xb3\xbf\x7c\xc4\x84\xda\xc0\x81\xd0\x02\x43\x64\xaa\x66\xcf\xc0\xaa\xae\xaf\x01\xd7\x0b\x83\xeb\xa5\x1c\x9c\x05\xd7\x80\x67\xd9\x3d\xc1\x9f\xbc\xc1\x64\x41\xaa\xf5\x22\x5e\x82\x1b\x9c\xd7\x28\xde\xf2\xd0\x1f\x79\xc4\x85\x44\x94\x22\xb7\xdf\x69\xd5\x6f\xe9\xcc\x01\xcc\xb1\xa3\xa5\x2c\xdf\x0f\xce\x4d\xa1\x5e\x81\xdb\x5c\x74\xd0\x91\x42\xf1\x4e\xe6\x4d\xb1\xb1\x47\x58\x62\x19\x77\x76\xbc\xeb\x5e\x1e\x1d\x22\x7f\x0a\x75\x3a\x8b\x23\xf4\x27\xd9\xbf\xf9\x57\xbb\x4b\x11\xbe\x02\x00\x00\xff\xff\x4a\x38\x26\x08\xcb\x03\x00\x00")

func mapping_static_partials_analysis_tokenfilters_shingle_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_tokenfilters_shingle_html,
		"mapping_static/partials/analysis/tokenfilters/shingle.html",
	)
}

func mapping_static_partials_analysis_tokenfilters_shingle_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_tokenfilters_shingle_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/tokenfilters/shingle.html", size: 971, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_tokenfilters_stop_tokens_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x90\x3d\x8e\xc3\x20\x10\x85\x6b\xfb\x14\x23\x7a\x2f\x17\xc0\xbe\xc1\x6e\xb3\x91\x52\x5a\xc4\x8c\x2d\x14\x60\x10\x90\x34\x96\xef\x9e\xf1\x5f\xe1\x22\x54\xa3\xa7\xf7\xf1\x8d\xa6\x52\xc6\xbe\x61\x70\x3a\xe7\x56\x8c\x94\x7c\x33\x25\x7a\x45\xd1\xd5\x55\xa5\x9c\x7e\xa0\x03\x4e\x5b\x51\xe8\x89\x61\xb4\xae\x60\xba\xad\xe3\xaf\x8e\x59\x74\xff\x85\x22\xdc\x29\x99\xac\xe4\x56\xde\xb0\x8c\x0e\x87\x02\x61\x6a\x3c\x19\x74\x17\xf8\x27\x33\xd2\x6f\x41\xef\x75\x14\x17\xf5\x40\xa1\x24\x72\x02\xac\xf9\x66\xac\x81\x1f\x3b\x28\x16\x4b\x61\x75\x24\x8c\xa8\xcb\xd1\xe7\x12\xd8\x00\xe7\xfc\xa7\x3d\x32\x34\xcf\x67\xb0\x2c\x4a\xee\xe8\xf1\x93\x92\xfb\xb6\xbc\xb8\x92\x7c\x8a\xee\x13\x00\x00\xff\xff\x16\x19\x03\x3e\x11\x01\x00\x00")

func mapping_static_partials_analysis_tokenfilters_stop_tokens_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_tokenfilters_stop_tokens_html,
		"mapping_static/partials/analysis/tokenfilters/stop_tokens.html",
	)
}

func mapping_static_partials_analysis_tokenfilters_stop_tokens_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_tokenfilters_stop_tokens_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/tokenfilters/stop_tokens.html", size: 273, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_tokenfilters_truncate_token_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8e\xc1\x0d\x83\x30\x0c\x45\xcf\xe9\x14\x96\xef\x94\x05\x02\x13\x74\x09\x20\x06\xa2\x3a\x76\x14\x9c\x4a\xdd\xbe\x81\x1b\xea\xc5\x07\xeb\x7d\xbd\xe7\x7c\x88\x1f\x58\x78\x3a\x8e\x01\x57\x2d\xa9\xdb\x8a\xd6\x8c\xe3\xc3\x39\xcf\xd3\x4c\x0c\xed\x3b\xa0\xe9\x9b\x64\x8d\x6c\x54\x5e\x24\x38\xb6\xb3\xd9\xee\xfb\x0b\x39\x61\xe7\xa3\xe4\x6a\x20\x5b\x97\x34\x10\xdf\x26\x4f\xbe\x70\x04\xfb\x66\x1a\x50\x6a\x9a\xa9\xe0\x4d\xbb\xa8\x58\x51\x46\x88\xe1\xcf\x06\x99\xa7\x85\x76\xe5\x40\x2d\xe5\x6c\xf3\x7d\xcb\x1e\x7f\x01\x00\x00\xff\xff\x0a\x91\xf6\x26\xbd\x00\x00\x00")

func mapping_static_partials_analysis_tokenfilters_truncate_token_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_tokenfilters_truncate_token_html,
		"mapping_static/partials/analysis/tokenfilters/truncate_token.html",
	)
}

func mapping_static_partials_analysis_tokenfilters_truncate_token_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_tokenfilters_truncate_token_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/tokenfilters/truncate_token.html", size: 189, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_tokenfilters_wordmap_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8e\x31\x0a\xc3\x30\x0c\x45\x67\xf7\x14\xc2\x7b\x9a\x0b\x24\xb9\x41\x3b\x75\x2f\xc6\x56\x8a\xa9\x2d\x19\x59\xd0\x21\xe4\xee\x75\x48\x3d\x54\xd3\x47\xfc\xf7\xf8\xc6\x98\xa9\x62\x42\xaf\x40\xaf\x21\x73\xc0\x34\x5b\xe5\x37\xd2\x1a\x93\xa2\x5c\x3f\x2c\xe1\x99\x5d\xb1\xe0\x93\xab\x75\xb6\x2b\x4b\x1e\x3c\x93\x0a\x27\x0b\x31\xfc\xd5\x1f\x47\xbc\xb9\x52\xed\x72\x31\xd0\xae\xe9\xb9\x68\x64\x3a\xf4\x82\x05\x9d\xfe\x80\xd6\x82\x48\xd0\xf3\xdd\x65\x6c\xd4\xb6\xf5\xc7\xbe\x4f\xe3\x89\x76\xd5\x34\x9e\x4b\x97\x6f\x00\x00\x00\xff\xff\x38\x1c\x9d\x3b\xb5\x00\x00\x00")

func mapping_static_partials_analysis_tokenfilters_wordmap_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_tokenfilters_wordmap_html,
		"mapping_static/partials/analysis/tokenfilters/wordmap.html",
	)
}

func mapping_static_partials_analysis_tokenfilters_wordmap_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_tokenfilters_wordmap_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/tokenfilters/wordmap.html", size: 181, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_tokenfilters_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x54\x4d\x6f\xdb\x30\x0c\xbd\xe7\x57\x08\x3a\xb5\xc0\xec\x60\xd8\xd5\xf6\x69\xdb\x6d\x3d\x75\xe7\x41\xb1\x68\x5b\x88\x2a\x09\x12\xdd\xc4\x28\xfa\xdf\x47\xc9\xf5\x47\xe2\x2c\xdb\x69\x41\x90\x3c\xd2\xe1\xe3\x7b\x22\x95\x02\xc5\x41\x03\xab\xb5\x08\xa1\xe4\x63\x90\x3e\xb3\x80\x5e\x39\x90\xbc\xda\x31\x56\x60\x07\x42\x46\x14\xb1\x1f\x41\x4a\x57\x4f\xe2\x05\x8a\x3d\x81\x55\xee\x79\x70\x9b\xdc\x12\x13\x4a\x0c\x31\xf3\xc1\x5a\xe0\xc1\xca\x61\xe6\x67\xa6\xcd\x3c\x38\x10\x58\xf2\x07\x6c\x0c\xb5\xf8\x84\xcd\xab\xd0\x8f\x4c\x19\x7a\x4b\x38\xff\x10\xce\x29\xd3\xe6\xc2\x08\x3d\x04\x15\x72\xb4\x47\x30\xbf\x1a\xa5\x11\x7c\xe0\x4b\x67\x59\xbd\xbd\x8d\x14\xef\xef\xd4\x51\x5e\x3f\x21\xd6\x1c\x49\xef\xf6\xe9\x07\xa4\x40\xaa\xd7\xe9\x84\x0e\x68\xb2\xd6\xdb\xde\xb1\x19\x65\xe7\xc0\x99\xb7\x1a\x4a\x9e\x62\xbe\x54\x52\xed\xa1\x47\xb4\x26\x3a\xaa\xb5\xaa\x8f\x25\x07\xa9\xf0\x39\x8a\xfd\x9e\xb4\x4e\xfe\xd8\x68\x90\xb3\x28\x86\xfa\xa4\x32\xbe\x62\x9a\x5e\x8b\x90\x24\x41\x42\x23\x7a\x8d\x09\x9f\xc3\x45\x6f\xea\x1e\x9c\x30\x53\x45\xab\x07\xd7\xa9\x9a\xc4\xcc\x28\x8b\x62\x38\x13\x5e\x89\xac\x53\x52\x82\xa1\x1d\xf0\x3d\x70\x1a\x57\x2c\xad\xd8\x37\xfa\xc1\xda\xce\x7e\x14\x76\xdf\xa2\x04\x0d\x08\x5b\x93\xff\xdb\x1d\x7a\x11\xba\xbb\xf6\xbe\x26\xa5\x77\x0d\x16\x7b\x1a\xff\xbc\x17\xf3\x8e\x4c\x5b\x3c\x2f\x6c\xe8\xec\xa9\xe4\x3f\x51\xe9\x90\x1f\x61\x08\x0f\xff\xb0\xa7\x8f\xb9\x06\xd3\x62\xc7\x0a\xf6\x79\xbd\xb3\xac\xb6\x3a\x0a\x2c\xf9\x17\x5e\x3d\x59\x03\xdb\xbe\xf4\x3d\xdd\x99\x02\x1b\x6b\xf1\xc6\xed\xbc\xe4\xd9\xfd\x79\x60\x06\x4e\xeb\x69\xfd\x75\x4e\x57\x53\x0a\x2f\x17\xc3\x72\xbd\xd6\x99\x57\x6d\x87\x24\x1e\x4e\x2c\x51\xb3\x91\xfb\xfa\x7c\x6f\x1a\x1b\xed\x10\x88\x7f\x44\xd5\x6e\xf7\x3b\x00\x00\xff\xff\xe2\xc9\xaa\x53\xa5\x04\x00\x00")

func mapping_static_partials_analysis_tokenfilters_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_tokenfilters_html,
		"mapping_static/partials/analysis/tokenfilters.html",
	)
}

func mapping_static_partials_analysis_tokenfilters_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_tokenfilters_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/tokenfilters.html", size: 1189, mode: os.FileMode(420), modTime: time.Unix(1445123724, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_tokenizer_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x54\xc1\x8e\xdb\x20\x10\xbd\xe7\x2b\x10\xa7\xf6\xe0\x5a\xed\x5e\x6d\x5f\x72\xee\x5e\xba\x3f\x80\xf1\xc4\x46\x19\x83\x05\xe3\x6d\xd3\x28\xff\x5e\xc0\x4e\x02\x5e\xab\xaa\x8a\xb4\x88\x65\x1e\x33\xef\xbd\xc9\xb8\xea\xd4\x3b\x93\x28\x9c\xab\xf9\x68\x3a\x81\xc5\x00\xa2\x03\xcb\x9b\x03\xf3\xab\x1a\x5e\xf2\x28\x29\x42\xe0\xcd\x71\x76\x64\x46\xf6\x66\xce\xa0\xd5\x6f\xb0\x55\x39\xbc\x34\x87\xaa\xf4\xd9\x9a\xc3\xe1\x63\xd2\xd6\x74\x97\x7b\xca\x10\xd4\x7d\xe1\x06\xf3\xb3\xe6\x60\xad\xb1\xdf\xc1\x39\xd1\x03\x8f\xf1\xb8\xd6\xc7\x02\xc1\x12\x8b\x7b\xd1\x09\xdd\x83\x0d\x2f\x25\x1a\x71\x4e\xc0\xd6\x20\xac\x58\xde\xb0\xeb\x35\xcd\x79\xbb\x2d\x45\x57\x66\xf1\x7c\x32\x76\xbc\x57\x08\x67\xbe\x66\x88\xe7\xe6\x91\x37\x55\x11\x42\x45\x6f\xcd\x3c\x25\x80\x08\x42\xd1\x02\x32\x1f\xaf\x39\x69\x31\x7a\x6f\x5e\xfd\x5e\x95\xf1\x7e\x83\x55\x7a\x9a\x29\x28\xf0\xa6\x00\xd6\x3c\xe2\x33\xc8\xba\xe8\x32\x79\x3e\x04\xbf\x88\x67\x0c\xa4\xd1\xe4\xb9\xee\xbe\x51\xdd\x9d\x01\x9b\x50\x48\x18\x0c\xfa\x3e\xd6\xfc\x35\x92\x7a\xaa\x4a\x9c\xf8\x3f\x95\xf7\x9e\x07\x92\xbc\x79\xf3\xfb\xbe\xda\x24\xb1\x34\x58\xb8\xb1\xf8\xfa\x8d\x45\x0b\xf6\x6b\x38\x40\x90\xd1\x1e\x39\x84\x5e\x27\xa5\x42\x91\x63\xbc\xfc\xf4\x79\x57\x7c\x62\xea\xe3\xd1\x97\x48\x70\x17\xfd\xaf\x9e\x2e\xa6\xe6\x82\x3f\xe0\x2a\x33\x91\x32\x3a\x50\xb0\x30\x81\xa0\x9c\xb8\x97\xcc\x32\x21\x8e\x37\xd7\x6b\x7a\x73\xbb\x55\xe5\x92\x63\xe3\x48\xb9\x58\xb2\xbd\x8d\x0d\xdc\xfc\x9b\xf7\xf3\x31\x5e\x1b\x33\x42\x40\x69\x89\x73\x07\xcc\x59\xb9\x38\x30\x09\x1a\x78\xb9\x0e\x67\x19\x6e\xfe\x36\xc9\x27\x63\xe8\xf9\x79\x68\x67\x22\x2f\x7d\x45\xb4\xa4\x99\xff\x2b\x3a\x38\x89\x19\x89\x2f\xc3\xaa\xe4\xd9\xff\x02\x84\x96\x80\xbe\x7b\xcd\x31\x9e\xaa\x72\x79\x9a\xe7\x79\xe2\xdb\x59\x61\xe7\xe1\xeb\x28\x2c\xf1\xbc\x47\x9b\xa2\x93\x55\xa3\xb0\x17\x36\xcd\x88\x85\x55\xfd\xe0\x3f\x06\x3f\xc4\x3b\x3c\x2b\xad\xa2\xfe\x04\x00\x00\xff\xff\xb9\x87\xee\xfe\xf3\x04\x00\x00")

func mapping_static_partials_analysis_tokenizer_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_tokenizer_html,
		"mapping_static/partials/analysis/tokenizer.html",
	)
}

func mapping_static_partials_analysis_tokenizer_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_tokenizer_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/tokenizer.html", size: 1267, mode: os.FileMode(420), modTime: time.Unix(1445125860, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_tokenizers_exception_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x54\xc1\x6e\xdb\x30\x0c\xbd\xf7\x2b\x08\x63\x87\xf6\xe0\xba\xdd\xd9\x31\x30\x0c\x3b\xec\x52\x0c\xc5\x7e\x40\xb6\x58\x9b\x88\x2c\x19\x12\xdd\x26\x0b\xf2\xef\x93\x2d\x5b\xb6\xb3\xb4\x5d\x81\x22\x84\x42\xbe\xf7\xc8\x47\x26\x97\xf4\x0a\x95\x12\xce\xed\x92\x17\x63\xdb\xb4\xb6\xa6\xef\x92\xe2\x06\x20\x57\xa2\x44\x55\xfc\x38\x54\xd8\x31\x19\x0d\xbf\x04\x33\x5a\xed\xf2\x2c\x7c\x33\xe4\xf4\x6a\xae\x56\xe4\x78\xaa\x06\x5d\xa7\xae\x31\x6f\xbb\x84\xcd\x1e\x35\xfd\x41\x7b\x8f\x33\x8c\xbb\x57\xa8\x6b\x6e\x20\x87\xc7\x91\x67\x60\xa2\x7f\x51\x52\x62\x6c\x93\xe2\xc9\x68\xf4\x84\x34\xb2\x65\xfd\x07\xac\x23\x14\xfc\x1f\x77\x01\x0f\x73\x7e\x4f\xa9\x33\x96\x45\xa9\x70\x41\x68\x8d\x44\x75\x1d\xe2\x73\xcd\x13\xcc\x08\x64\xb1\x43\xc1\xbb\x04\x81\x34\x5c\x83\x03\xb6\xa2\xda\x43\x79\x84\x2f\xa4\x25\x1e\x26\x78\x4f\xe0\x3a\xa1\x67\x8a\x5a\x1d\xbb\x86\x2a\x6f\x42\x8c\xd2\x96\x74\xef\xd5\xe4\xd9\x90\x58\xc0\xe9\x04\x08\xe7\xf3\xa6\xda\x0b\xa8\x14\x55\xfb\x5d\x62\xb1\x35\xaf\x18\xbd\xbc\x0d\x64\x77\x8b\xd6\xe1\xef\x03\xb2\x50\x0f\x5d\xaf\x54\x6a\xa9\x6e\x38\x12\x87\x69\x6c\x1c\x1a\x82\xf7\xf7\x2a\x6e\xd6\x6a\x8f\xb6\x05\x95\x51\xa9\x6b\xd3\xc7\x87\x65\x18\xa4\xbb\x9e\x57\xce\x68\x7c\xb3\x58\xe3\xc1\x2f\x1b\x1f\x3b\xf4\x56\xe1\x81\xb7\xdd\x6c\xe8\x7d\x0f\x6c\x8d\xba\xc8\x20\xe9\x9d\x99\x67\xf2\x1c\xf0\xb2\xb9\x23\x2f\xe8\x5d\x69\x5f\x17\x65\x65\xcf\x6c\xd6\xa3\x16\x52\x2e\x73\xe6\x86\xdc\xdd\xac\x31\xa4\x5e\x68\x98\x91\x4b\xd6\xe0\xff\x53\x89\x2f\xa2\x57\xbc\x19\xf5\x37\x29\xf3\x2c\x54\x5f\xa8\x9b\x82\xe9\xe3\xe6\xd3\x73\x06\xff\xea\x25\x6a\xa1\x8e\x7e\x0f\x7f\xcf\x0b\x99\x14\x31\x1c\x32\xe0\x19\x5b\x41\x9a\x74\x0d\x3f\x87\xc1\xaf\x2f\xde\xa1\xc2\x6a\xb4\xa2\x6a\x84\xae\x71\x75\x25\xdf\xc7\x07\x79\xbb\x59\xab\x6b\xd7\x14\xa3\xe4\xaa\x49\xa3\x2f\x4b\xce\xd4\xb2\x09\xbf\x42\xab\xa3\x8a\x29\x9b\xe3\x7a\x12\x2d\xfa\xbb\x38\x9d\xe2\xcb\xf9\x9c\x67\xa1\x3a\x8c\x2c\xb4\x10\xa7\xf6\x37\x00\x00\xff\xff\x7a\x35\x23\x73\x04\x05\x00\x00")

func mapping_static_partials_analysis_tokenizers_exception_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_tokenizers_exception_html,
		"mapping_static/partials/analysis/tokenizers/exception.html",
	)
}

func mapping_static_partials_analysis_tokenizers_exception_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_tokenizers_exception_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/tokenizers/exception.html", size: 1284, mode: os.FileMode(420), modTime: time.Unix(1445281388, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_tokenizers_generic_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func mapping_static_partials_analysis_tokenizers_generic_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_tokenizers_generic_html,
		"mapping_static/partials/analysis/tokenizers/generic.html",
	)
}

func mapping_static_partials_analysis_tokenizers_generic_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_tokenizers_generic_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/tokenizers/generic.html", size: 0, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_tokenizers_regexp_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8f\x41\xae\xc2\x30\x0c\x44\xd7\xf9\xa7\xb0\xb2\xef\xef\x05\xd2\xee\xb8\x00\x37\x08\x8d\x29\x11\x6e\x1c\x39\x09\x0a\x9c\x1e\x17\x36\x20\x56\x96\xc6\x1e\xcf\x1b\xe3\x42\xbc\xc1\x42\xbe\x94\xc9\x9e\x59\xb6\x61\x15\x6e\xd9\xce\x7f\xc6\x38\xf2\x27\x24\x50\x75\xb2\x95\xaf\x98\xe2\x03\xe5\x88\x2b\x76\xdd\xeb\x6c\xe4\x05\x0e\x3d\x0b\x96\x12\x39\xb9\xf1\x75\xbf\x3b\x8d\x8b\x29\xb7\x0a\x69\x1d\x36\x0e\x48\x1f\xfe\x7f\x79\x3f\x80\x7a\xcf\xa8\x3a\xf6\x6a\xbf\xf2\x17\x4e\x55\x98\x2c\xc4\xf0\x1b\x0b\x99\xfc\x82\x17\xa6\x80\x0a\xb5\x53\xba\x51\x0b\xcc\xcf\x00\x00\x00\xff\xff\xfd\x95\x57\x19\xc7\x00\x00\x00")

func mapping_static_partials_analysis_tokenizers_regexp_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_tokenizers_regexp_html,
		"mapping_static/partials/analysis/tokenizers/regexp.html",
	)
}

func mapping_static_partials_analysis_tokenizers_regexp_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_tokenizers_regexp_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/tokenizers/regexp.html", size: 199, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_tokenizers_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x54\xcb\x6e\xdb\x30\x10\xbc\xfb\x2b\x08\x9e\x12\xa0\x92\x51\xf4\x2a\xe9\xd4\x1e\x9b\x53\xfa\x01\x94\xb8\x91\x08\x33\x24\x41\xae\x62\xab\x41\xfe\xbd\x4b\xca\x7a\x58\x4e\xed\x5b\x0c\xc3\x1e\xae\xbc\x3b\x33\x9a\x95\x0b\x14\xb5\x06\xd6\x68\x11\x42\xc9\xc7\x43\xfa\xcc\x02\x7a\xe5\x40\xf2\x6a\xc7\x58\x81\x1d\x08\x19\x51\xc4\x7e\x04\xa9\x5c\x3d\x89\x57\x28\xf6\x04\x56\xb5\xe7\xc1\x5d\xd5\x96\x33\xa1\x34\x21\x56\xce\x53\x0b\xac\xad\x1c\xe6\xf9\xcc\xb4\x99\x07\x07\x02\x4b\xfe\x80\x86\x18\xbe\xe1\x9b\xd0\x8f\x4c\x19\x7a\x4b\x38\xfd\x16\xce\x29\xd3\xe6\xc2\x08\x3d\x04\x15\x72\xb4\x07\x30\xea\x2f\xf8\xc0\x17\x52\x59\xbd\xbf\xa7\xee\x8f\x0f\xe2\x92\x9b\x0b\x34\x30\x47\x12\x7a\x7d\xf1\x0c\xe9\x20\xd5\xdb\x74\x6b\x6a\x34\x59\xeb\x6d\xef\xd8\x8c\xb2\x53\xe0\xcc\x5b\x0d\x25\x4f\x67\xbe\x74\x52\x6f\xdd\x23\x5a\x13\xad\x34\x5a\x35\x87\x92\x83\x54\xf8\x3c\xe9\x3c\xdb\x62\xc9\x17\x67\x51\x08\x71\xa4\x16\xbe\x9a\x32\xbd\x16\x11\x89\x5e\xc2\x8b\xe8\x35\x26\x7c\x0a\x17\xbc\xc4\x1c\x9c\x30\x53\x47\xab\x07\xd7\xa9\x86\x84\xcc\x28\x8b\x42\x38\x13\x5e\x89\xac\x53\x52\x82\xa1\xe0\x7d\x0f\x9c\x32\x8a\xad\x15\xfb\x45\x3f\x58\x5b\xd9\x8f\xc2\x6e\xdb\x93\xa0\x01\x61\x63\xf0\xab\xad\xa1\x17\xa1\xbb\xe9\xed\x67\x92\x79\xd3\x5d\xb1\xa7\xdc\xe7\x85\x98\x97\x63\xda\xdb\x79\x45\x43\x67\x8f\x25\xff\x83\x4a\x87\xfc\x00\x43\x78\xb8\xb7\x9b\x8f\xb9\x06\xd3\x62\xc7\x0a\xf6\x7d\xbd\xa7\xac\xb1\x3a\xaa\x2b\xf9\x0f\x5e\x3d\x59\x03\xd7\xa4\xf4\x3d\x3d\x22\x05\xbe\x58\x8b\x9f\x3c\x8c\x97\x73\x76\xff\x8f\xca\xc0\x71\xc9\xe9\x6e\x44\x9b\x80\xc2\xeb\x45\x4e\xae\xd7\x3a\xf3\xaa\xed\x90\xa4\xc3\x91\xcd\x83\xb7\xf7\xf5\x53\x4f\xa3\x13\x02\xf1\x2f\xa7\xda\xed\xfe\x05\x00\x00\xff\xff\xde\x85\x6e\x79\x8f\x04\x00\x00")

func mapping_static_partials_analysis_tokenizers_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_tokenizers_html,
		"mapping_static/partials/analysis/tokenizers.html",
	)
}

func mapping_static_partials_analysis_tokenizers_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_tokenizers_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/tokenizers.html", size: 1167, mode: os.FileMode(420), modTime: time.Unix(1445123752, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_wordlist_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x54\xc1\x6e\x9c\x30\x10\xbd\xef\x57\x8c\x7c\x4a\xa4\x52\x54\xad\x7a\xa8\xc4\x22\x55\xb9\xb6\x39\xb4\x87\x9e\x0d\x9e\x05\x2b\x03\x46\xb6\xc9\x66\x1b\xe5\xdf\x3b\x36\x6c\x02\x2c\xc9\x56\x55\x83\xb4\xac\xb1\x9f\xdf\xbc\xf7\x3c\x90\x29\x7d\x0f\x25\x49\xe7\x76\xa2\x31\x4a\x52\x52\xa3\x54\x68\x45\xbe\x01\xbe\xb2\x7a\x3b\x5f\xf5\xda\x13\x8a\xfc\xa6\x77\xde\x34\xf0\xcb\x58\x05\xdf\xb4\xf3\x59\x5a\x6f\xf3\x4d\x96\x32\x5b\xbe\xd9\x9c\x93\x16\x46\x1d\x4f\x94\x61\xb1\xad\x12\x57\x9b\xc3\x4e\xa0\xb5\xc6\x7e\x47\xe7\x64\x85\x22\xae\xc7\x6b\xdc\x2c\x09\xad\x87\x78\x4f\x94\x6c\x2b\xb4\x61\x67\x49\x46\xde\x4d\xc0\xd6\x10\x8e\x58\x91\xc3\xe3\xe3\x94\xf3\xe9\x69\x28\x3a\x2a\x8b\xe3\xbd\xb1\xcd\xa9\x42\x18\x8b\x91\x21\x8e\xf3\x67\xde\xa9\x8b\xb0\x94\x54\xd6\xf4\xdd\x04\x10\x41\x24\x0b\x24\xe0\xf5\x9d\xf0\xad\x6c\x38\x9b\x5b\xbe\x67\x69\x9c\x5f\x60\x75\xdb\xf5\x3e\x38\xe0\x50\x90\x76\x22\xe2\xc1\x1f\x3b\x2e\xee\xf1\xc1\x8b\x19\x7c\x1e\x45\x54\x50\x9a\xd6\xb3\x56\x01\x5a\x9d\xca\x41\x47\xb2\xc4\xda\x10\x1f\xda\x4e\xdc\x46\x05\x2f\x16\x26\xb6\xff\xc9\xd2\x81\x0f\xd8\x89\x3c\x9c\xb3\x5b\xf7\xe4\x90\xb0\x9c\x9a\x1a\x26\x50\xc5\x3d\x02\x9a\x9e\xbc\xee\x08\x23\x62\x1c\xb3\x76\xdb\xe3\xaa\xdb\xe8\x6c\xa8\x0a\x4e\xff\x66\xe8\x67\xb1\x1a\xc1\xea\x66\xae\x61\x3a\xaf\x4d\xcb\x68\xad\x1e\x40\x3a\x08\x5c\xc1\x0b\x5c\xf1\xc4\x87\xf8\x78\x0d\xba\x85\xd1\xd9\xdc\x4c\x3a\x88\xff\x9f\x01\xd6\x92\x9b\x72\x3d\xba\x09\x57\x69\x28\x71\x4d\xf2\x65\xc1\xb4\xd6\x33\x78\x08\xc9\x5e\x6c\x9b\x37\x1a\xe7\x99\x62\xd6\x3a\x21\x90\xb3\x3c\xa2\xfb\x0b\xa2\xb7\x67\xa2\x19\x56\xf4\xde\x9b\x76\x78\x5b\x75\x79\xc7\xaf\xa7\x8a\x1d\x71\x75\xfd\x8a\x5a\xbe\x06\x47\xc3\xce\xd7\x51\x63\xf1\xc2\xb7\xc0\x3f\x16\x10\xff\x14\xee\x25\x77\x97\xc8\xbf\x2a\x95\xa5\x03\xc7\xdf\xc8\xb2\xd8\x98\x7b\xbc\xa4\x8c\xf1\x4a\x3b\x59\x10\xaa\x45\x83\x7f\x24\x6c\x2b\x5f\x43\x06\x9f\xde\xd5\x18\x74\x3d\x51\x62\x75\x55\xb3\xc7\x1f\x51\xf4\xba\xcd\xc5\x99\x4d\x1e\xb3\x34\xb4\xc2\x5b\x5f\xe9\xbd\x31\xfe\xe5\xd3\x3f\x66\xb5\x90\x75\x0a\x7a\x92\x61\x29\xdb\x12\x89\xf3\xcb\x6f\xe2\x68\x2e\xec\x3c\xf3\xa2\xd7\x14\xe2\x9e\xe7\xb2\x2c\xd4\x59\xdd\x48\x7b\x9c\x19\xff\x29\xa7\xb6\x47\x23\x7f\x02\x00\x00\xff\xff\x64\x3a\x8f\xe9\xc3\x06\x00\x00")

func mapping_static_partials_analysis_wordlist_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_wordlist_html,
		"mapping_static/partials/analysis/wordlist.html",
	)
}

func mapping_static_partials_analysis_wordlist_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_wordlist_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/wordlist.html", size: 1731, mode: os.FileMode(420), modTime: time.Unix(1445126958, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_wordlists_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x54\x4d\x8f\x9b\x30\x10\xbd\xe7\x57\x8c\x7c\xda\x95\x4a\xa2\xf6\x0c\x9c\xda\x5b\xbb\xb7\xaa\xc7\xca\xe0\x59\xb0\x62\x6c\xcb\x1e\x36\x41\xab\xfd\xef\x1d\xc3\xf2\x91\x74\x9b\xdc\x1a\x45\xc9\x1b\x87\x79\xf3\x5e\xde\x40\x4e\xb2\x32\x08\xb5\x91\x31\x16\x62\x2a\xc6\xcf\x2c\x52\xd0\x1e\x95\x28\x77\x00\x39\xb5\x28\x55\x42\x09\x87\x09\x8c\xc7\xe5\x93\xec\x30\x3f\x30\xd8\x9c\xad\x35\xa3\xf1\xea\x74\xf2\xce\x90\x53\xe5\xd4\xb0\x70\x81\x6d\xb2\x80\x1e\x25\x15\xe2\x81\x3a\xcb\x74\x9f\xa8\x7b\x91\xe6\x11\xb4\xe5\xb7\xc2\xf3\x0f\xe9\xbd\xb6\xcd\x5e\x5a\x69\x86\xa8\xe3\x9e\xdc\x11\xed\xef\x4e\xfa\x28\xd6\xb1\xaa\x7c\x7d\x9d\xfa\xdf\xde\x78\x9c\xda\xfe\xf2\x0e\xb9\x50\xfa\x65\x36\x5b\x91\xcd\x9a\xe0\x7a\x0f\x0b\xca\xce\x51\x40\x70\x06\x0b\x31\xd6\x62\xed\xe4\xde\xaa\x27\x72\x36\x09\xae\x8d\xae\x8f\x85\x40\xa5\xe9\x97\x0b\xea\xbb\x8e\x34\x6b\x87\x49\xbc\x00\x1a\x3c\xd3\x4c\x3d\x62\x43\x33\xbf\x56\x15\xe3\x7c\x85\xcf\xb2\x37\x34\xe2\x73\xbc\x18\xcc\xa3\xa3\x97\x76\xee\x68\xcc\xe0\x5b\x5d\xb3\x92\x05\x65\x49\x89\x00\x19\xb4\xcc\x5a\xad\x14\x5a\xce\x32\xf4\x28\x38\x8a\xd4\x5a\xc2\x37\xbe\x60\xeb\xe5\x30\x09\xbb\xed\x4f\xa1\x41\xc2\x2b\x87\xff\xdb\x1a\x05\x19\xdb\x9b\xde\xbe\x8e\x32\x6f\xba\xcb\x0f\x1c\xfc\xb2\x11\xcb\x76\xcc\xeb\xb9\x6c\x62\x6c\xdd\xa9\x10\x3f\x49\x9b\xb8\x3f\xe2\x10\x1f\xee\x2d\xe0\xe3\xde\xa0\x6d\xa8\x85\x1c\x3e\x6f\x97\x11\x6a\x67\x92\xba\x42\x7c\x11\xe5\x93\xb3\xf8\xf7\x50\xfe\x9e\xef\x84\x9c\x9e\x9d\xa3\x0f\xee\xaf\x4b\x9e\xdd\xbf\xa3\xb2\x78\x5a\x72\xba\x9b\xd0\x55\x3e\xb1\xbb\x88\xc9\xf7\xc6\x64\x41\x37\x2d\xb1\x72\x3c\x41\xe2\x85\x44\x7c\xfd\xb7\x7e\x68\x69\x32\xc2\x20\x3d\x44\xca\xdd\x9f\x00\x00\x00\xff\xff\x4c\x21\x1b\x1a\x60\x04\x00\x00")

func mapping_static_partials_analysis_wordlists_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_wordlists_html,
		"mapping_static/partials/analysis/wordlists.html",
	)
}

func mapping_static_partials_analysis_wordlists_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_wordlists_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/wordlists.html", size: 1120, mode: os.FileMode(420), modTime: time.Unix(1445123824, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_mapping_index_mapping_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x58\x5f\x6f\x9b\x3e\x14\x7d\xef\xa7\x70\x79\xe9\xef\xa7\x89\xa2\xed\x39\x89\xd4\xa6\xaa\xf6\xb0\x4d\x95\x56\x69\x8f\x91\x63\x3b\xc1\xaa\xc1\x96\x6d\x92\xa6\x9f\x7e\xd7\x60\x18\x29\xe4\x0f\x81\xa4\x5b\x1e\x0a\x31\xf6\xb9\xe7\xdc\x7b\x8f\x6b\x32\xa2\x7c\x85\x88\xc0\xc6\x8c\x03\x9e\x52\xf6\xfa\x1d\x2b\xc5\xd3\x65\x30\xb9\xba\x1a\x5d\x87\x21\x1a\x9f\xf6\x41\x61\xe8\x10\x6a\xe8\x86\x11\xcb\x65\x1a\xb4\x0f\x7f\x65\x98\x32\x8d\x4c\x2c\xd7\xcf\x1b\xc5\x3c\x0b\xf3\xb3\x5a\x84\x50\x7d\x95\x96\xeb\x7c\x6c\x7b\x94\x48\x11\x9a\x24\xfc\xfc\xc5\x3f\x83\xa7\x18\xa5\xcb\xd0\xa1\x8e\x83\xeb\x5d\xe0\x7e\x2e\x7c\x60\x2e\x11\x9c\xbc\x00\xad\xf6\xb9\x68\x8c\xac\xce\x58\x85\x0f\x11\x78\x19\x7d\x29\x36\x2a\xe6\x04\x26\x55\x77\x21\x89\xd9\x4a\xc3\x55\xf3\x65\x6c\x83\xc9\x28\xe2\xb5\x95\x02\xcf\x99\x98\xb8\x28\xa8\x0c\x33\x8a\x8a\xc1\x92\x7e\x84\xdb\x94\x0c\x23\x64\x81\x85\xe9\xae\x84\xca\x75\xda\x43\xc8\x28\x82\x7a\xe5\xd5\x2c\x6e\xfc\xa5\xad\x25\xee\x25\xdd\x20\xbb\x43\xe6\xc1\x5c\xf4\xeb\x18\x9f\x3c\x4c\xe9\x34\xe6\x82\x7a\xf0\xff\xd2\x4c\x88\xff\x83\xc9\x1d\xa5\xa8\xae\x76\xa7\xba\x53\x39\xb8\xa7\xc0\x82\xa7\x44\x64\x94\x81\x48\x8b\x2d\x27\x33\xa5\xd9\x82\xbf\xa2\x4f\xe8\x26\x52\x58\x5b\x0e\x05\x8c\x92\x82\x42\xe4\x12\x15\xfa\x2f\xb7\xb1\x4d\xc4\x8d\xab\x92\xa7\xb3\x27\xef\xe5\xf5\x63\xbc\x7e\x97\x62\xb1\x79\x63\x7a\x78\xa3\x37\x90\x77\x99\xe3\xfd\xc4\x33\x58\xbc\x0a\x71\xbc\xbd\xfb\xd0\x1f\xda\xd8\x07\xe9\x77\x35\x35\x6e\x13\xb7\x5f\xfe\xc9\x7d\xb1\x6d\x25\x64\x34\xd9\x6b\xa7\x9c\x9a\xe1\xfe\xc6\x31\xf8\x77\xcc\xf4\xc8\x85\x3d\x87\x95\xde\xe1\xee\xea\xc4\xed\x69\x67\xb0\xd1\x34\x33\x56\x26\xc8\xc7\x39\xde\x4b\xa7\xf2\x1f\xda\x47\xc7\xf1\xef\x6a\xa6\x45\x53\xdd\x3e\xf5\x27\x77\x45\xc6\xe7\xa1\xc5\x73\xc3\x6c\x4d\x98\x1f\x44\x31\x74\x21\xfc\xe3\x19\x07\xd3\x18\x6b\x4c\x20\x60\x29\xb3\x96\xbf\x1e\x6e\x24\x00\xeb\x85\xb6\xf8\xb1\x48\x9b\xe7\xb2\x8f\xdd\xb3\x7c\x61\x29\x7f\x1b\x8c\x96\xad\xf0\x7a\xb3\x1a\x36\x5f\x39\xb1\x01\x12\xf6\x4b\x6a\x8a\xbe\x71\x63\x07\xe2\xb5\x06\x3c\xe1\xe0\x8e\x25\x55\x0d\x54\x7d\xf7\x97\x6e\xbe\x4f\x5a\x2a\x06\x72\xd9\xf0\xfb\x6f\x13\x7a\xd7\x16\xd6\x98\x79\x8e\xc3\x0c\x5d\xe1\x94\x30\x7a\xfc\xfe\xdb\x8f\xff\xe0\xa7\x99\x03\xfc\xbb\xee\xbf\xaa\x55\xdd\x81\x04\xf4\x3a\xce\xf8\xa7\x0b\xa9\x93\x70\xa9\x65\xa6\x82\xf6\x77\xb1\x47\xce\xc4\x7b\x99\x2e\x7f\xa9\xca\x6c\xfe\x62\x35\x0e\x2c\x7b\xb5\xc1\x16\x20\x24\xd1\x6a\x29\x6a\x25\xaa\x0a\x95\x48\xca\xc4\xf6\xcf\x04\xb7\x0e\x66\xb6\x70\x81\x1a\x2b\x94\xc0\x84\xc5\x52\x80\x43\xc6\x41\xed\x4b\x10\xfd\xc9\x79\xcd\xfc\xc7\x4a\x7b\x60\x0b\x9c\x09\x9b\xbf\x80\x9d\x59\x1c\x2d\x42\xcd\x1c\xdc\xa5\xe5\x95\x27\xe0\xa6\x44\xc3\x04\x74\xd1\x21\xce\xe5\xf9\xb5\xc1\xdb\x2d\x94\xca\x75\x21\x30\xb1\x08\x1b\x64\x11\x10\x82\xbf\x3c\xad\x4e\xe6\x3f\x70\xc2\x4c\x73\x69\x5b\x2e\xeb\x9b\x77\x41\x6d\x10\xfd\x0f\xd8\xb2\xe8\x99\x27\x0c\x3d\x61\x6d\x4e\xcf\x03\x05\x1c\x0b\x30\x33\x95\xc3\x74\x4b\x87\x5b\xec\x38\x14\x14\x3e\x3e\x29\x97\x70\x74\x99\xb8\x8b\x9a\xfa\x7e\x63\x19\xba\xd3\x1a\x6f\xd0\x54\xa6\x2b\xd8\x2c\xbb\x57\x7c\x0e\x18\x33\xec\x30\x66\xa4\xc4\xe8\x56\x6e\x87\x90\x93\xa8\x38\x0c\x5d\xf2\x0b\x1c\x5e\x0a\xa4\xdf\x01\x00\x00\xff\xff\x57\xb6\xbd\xb5\xd8\x15\x00\x00")

func mapping_static_partials_mapping_index_mapping_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_mapping_index_mapping_html,
		"mapping_static/partials/mapping/index-mapping.html",
	)
}

func mapping_static_partials_mapping_index_mapping_html() (*asset, error) {
	bytes, err := mapping_static_partials_mapping_index_mapping_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/mapping/index-mapping.html", size: 5592, mode: os.FileMode(420), modTime: time.Unix(1445119850, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_mapping_type_mapping_tree_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x58\x4d\x6f\xe3\x36\x13\xbe\xe7\x57\x30\x3a\xac\xdf\x17\xad\xd7\xf7\x22\x36\x50\x6c\xb1\xe8\xa5\xc5\x1e\x72\x37\x18\x89\xb6\xd8\xd0\xa4\x40\xd1\x69\xd2\xd4\xff\xbd\x1c\x7e\xc8\x24\x45\x7d\x79\xb7\x8b\x0a\x48\x2c\x51\x9c\xaf\x47\xc3\xe1\x33\x7c\xa8\xe8\xcb\xee\x0e\x21\xf8\x45\x67\xba\x56\x92\x90\x75\x8d\x79\xc5\x88\x1e\x35\x57\xc9\x70\xdb\x6e\x8b\x13\x6e\x1a\xca\x8f\xbf\x9a\x77\xc5\xce\xbc\x7d\x68\x1b\xcc\x11\x3f\xae\xe9\xa1\x9b\xf0\x71\xff\x4c\x79\x85\xb6\x5b\xb4\x72\x23\x8f\x6f\x0d\x59\x39\x09\x2d\x43\xbd\xc6\x23\x7b\x6b\x6a\x5a\x0a\x8e\xba\xbb\xf5\x81\x82\xf2\x87\x0d\xd5\x7f\xa0\x7c\xd2\xce\xfd\x90\x9d\xf7\x8b\x15\x75\x6a\x86\xf5\x70\x7c\x22\xe0\x2e\x3f\x33\x16\x78\xb9\xab\xc8\x01\x9f\x99\x02\x5f\x26\x34\xdd\x77\x2e\x91\x8a\x2a\x7d\x73\x55\x33\x64\xb0\x9b\xa1\x1d\x7d\x0f\x5f\x5c\x2e\x5e\x34\x34\xe7\x35\x39\xe4\xb0\x52\xb2\x0d\x54\xe4\xbd\x21\x1c\x3f\x31\x52\x15\xbb\xbf\x51\x45\x5b\x73\x1f\x82\x3a\xe8\x9f\x93\x43\x1f\x3e\x20\x3f\x54\xbd\x69\xdf\x68\x19\x98\x44\x48\x6b\xb5\xa3\x37\x2b\xb5\x00\xef\x31\xc7\xec\xed\x2f\x22\x13\xed\x57\x5c\xd2\x89\x97\x4b\x6c\x32\x4a\x95\xc9\xb4\x71\xdf\x28\xf4\xc4\xa4\xc0\xbd\x4b\x81\xc0\x89\x0a\x2b\xbc\xe6\xa2\x92\xf8\x78\x4d\x0c\xde\x9c\xd5\xcc\x9c\x0f\x54\xe9\x4b\xe9\xb1\x6d\xa1\xc8\xab\x2a\x50\xc3\x70\x49\x6a\xc1\x2a\x22\xb7\x45\xc3\x08\x6e\x09\x22\x5c\x11\x89\xb0\x99\x87\x4c\x92\xc4\xf2\xda\xe6\x49\x54\x84\x25\x99\xb4\x59\xe8\xda\xad\x6e\x35\x52\x34\x44\xaa\xb7\xe5\xae\x8d\xac\x1c\xbf\x60\x02\x75\x41\x8e\x7f\x12\x5c\x49\xc1\xae\xa9\xfe\x80\xfd\xeb\x46\x7f\xaa\xb5\xa4\xc7\x5a\xa1\x27\xc5\xe1\x6f\xfd\xda\x06\x6a\x82\x4f\x77\x17\xba\x99\xc9\xc9\x22\x9a\x50\x32\x5a\x3e\x6b\xfd\xa2\x39\x37\x8f\xe2\x78\x64\xe4\x7f\x6e\xfe\xff\xc3\x04\x1d\x2f\x63\x0d\x3b\xb7\xbe\x8c\xe1\xce\x79\xa8\xb1\x7d\xf7\x8d\x25\x88\x14\x53\xae\x17\x41\x08\x6c\x36\x88\xc1\x30\x82\x15\x08\x96\xf4\xac\xb6\x16\x7f\xba\x50\x20\x03\x9c\x40\xf2\xed\xbc\x47\x30\x2b\x5a\x82\x7e\x6f\x08\x46\x70\x80\x10\xae\xaa\x4f\x35\x65\xd5\x6f\x56\x6b\x16\x25\x7b\x51\xde\xea\xc4\x41\x25\xcc\xf6\x4e\x04\xb8\xd8\x14\x49\x8c\xcd\x34\xfe\x99\x12\x56\xcd\x35\x7d\x80\xc9\xe3\x86\xa3\xc7\xf8\x61\x3c\xf5\xcc\x0f\x64\xf3\x8c\x1c\x74\x31\xc0\xec\x9f\xa1\x92\xdf\x92\x60\x84\x97\x94\x25\x29\x36\x58\xfb\x7c\xc9\xcb\xe7\x40\x6e\xc1\x4d\x14\xc1\xaf\x5e\x86\x29\x04\xbf\x08\xde\xad\xb3\x1f\xd1\x01\xb3\x96\x2c\x40\x43\x92\x93\x78\x21\xfd\x05\xf7\x2f\xbb\xa9\xe4\x79\x89\x97\xe2\x39\xe7\xe1\xd0\xf6\xb4\xd5\x1f\x0b\x0c\xcc\xd8\xa7\x26\xf3\x52\x49\xdc\xd6\xf3\xc3\xb5\x70\x7e\x96\xe2\xf4\x05\x4b\x5d\xfe\x83\x88\x6b\xda\x2e\x88\xd8\xda\xcd\x27\xa9\x7d\x70\x85\x2a\x87\x40\x3f\x40\xf3\x19\x24\xc1\xf9\x48\x3a\x4c\x19\x7e\x22\x6c\xe7\x76\x43\xbb\xbb\x95\x35\x29\x9f\x9f\xc4\x6b\x91\xd9\xa9\x7c\xf9\xdc\x24\xc5\xc3\x8d\x77\xb5\xc0\xaa\xbd\xd1\x88\x27\x50\xa9\x11\x37\x9e\x33\xd2\x55\x1f\x77\x03\x77\x82\x75\x24\x5d\x07\x4d\xda\xbb\xee\xd3\x8d\xec\x6b\x7d\x6f\x4c\x21\xec\xf2\xdf\x60\x68\x43\x30\x2f\xae\x7b\x91\x73\x84\x51\xd0\x21\x49\x43\xb0\x72\x73\x74\x61\x45\x79\x6d\x28\xf2\xf0\x2e\xf9\x84\x66\xee\x75\xaa\xc9\x39\xf3\xe2\x7d\xe5\x3e\xfb\xea\x27\x5b\xa7\xbb\x3c\xb8\x14\xd1\x06\x9a\x6f\x52\x52\x13\x51\x9b\x62\x64\x23\xda\x11\x5b\x88\xb6\x8d\xf7\x77\xfb\xd2\xd3\x9d\x8e\x90\x5f\xb5\x0c\xb0\xf0\x9e\x19\xab\x08\x90\x05\x0e\xee\x15\xc3\x73\xca\x60\x47\x85\x4d\x8f\xe3\x19\xfc\xaa\xb7\xc7\x65\xa4\x7c\x9d\x88\x23\xe9\xef\x8e\x9a\x65\xb7\x04\xcb\xb2\x06\xd5\x08\xb7\xd0\xf6\x78\x37\x6d\x33\xd2\x75\x3f\x81\xbd\x8c\xe7\x59\x2f\x3c\x5d\x87\x0a\x16\x44\x03\x54\x14\xd8\x66\x3f\x12\xcb\xfa\x63\xe1\x08\xfe\x45\xe6\x35\xed\x25\xaf\x00\xbc\xb9\x99\x2d\xd6\x2a\x21\xcd\xf7\x32\x37\x0b\xac\x95\xec\x5c\x91\x3d\xe5\x7b\x0c\x7d\x24\x98\x35\x23\xb0\x52\x34\xac\x30\x0a\x60\x7a\x12\xb2\x50\xad\xa6\xe0\xa7\xfd\x0b\x29\xb5\x4f\xed\x22\x3c\xbd\x17\xa0\x00\x39\x05\x33\x10\xed\x8f\xf5\xba\xbc\xb1\xae\x2f\x59\x5f\x89\xc1\x4c\xd1\x36\x1a\xa2\x0a\x1b\x68\xdd\x0d\x62\x16\xd5\x5f\xd3\xc2\xf4\x20\xd0\xd7\x58\x57\x63\xab\x59\xa6\xa5\xb1\xd7\xb5\x76\x26\x6b\x69\x13\x63\x93\xb8\x9e\x34\xef\x33\xba\x1e\xb8\xc6\x3a\x1f\xa3\x64\x39\x05\x4d\xe0\xee\x75\x6d\x3d\x2a\x6a\xc2\xec\x11\xe9\x1b\xc8\x68\x08\x43\x16\x85\x80\x94\x26\xbb\xc2\x30\x1a\x33\x13\x69\x36\xef\x5b\x0a\x8f\xe1\x7f\xc6\xdb\x1c\x49\x9d\x46\x6a\x80\xa8\x7e\x3f\xa7\x7b\x94\x75\xda\xe7\x0c\x6d\x75\xfe\x66\x17\x7b\x47\x5c\x07\xda\xcc\xd9\x24\x75\x66\x98\x3d\xb2\xea\x23\x4d\xa9\xea\x74\xa4\x39\xba\x6a\xa4\x7a\xab\x39\xa0\xad\xa3\xa5\x6e\x98\xb8\x26\xd1\x4d\xb4\xbe\x99\xca\xe8\x6b\x23\xd4\xbe\xa1\xed\x84\x30\x5d\xf0\x7b\x35\xcc\x10\x92\x5c\xb1\xb3\xb8\x8a\x46\x51\xc1\xb5\xd7\x0a\x18\x81\x42\x07\x21\xf5\x7f\xbd\x8b\x19\x69\x38\xd8\x4a\x49\x8f\x31\x66\xc5\xd0\x0b\x66\x67\x5d\x8b\x8b\x9d\x78\xfa\x43\x1b\x7f\xd8\xd8\xf1\x0c\x89\x30\xce\xa5\xbb\x4e\x2f\xd0\xec\xc1\xc0\x42\x8e\x34\x06\x5f\xc4\x7f\x06\x70\x9c\xb5\xc9\x8c\x6f\x33\x83\x1b\x4c\x7f\x8b\x89\x0f\xf5\xbe\x1a\x98\x21\x7a\x30\x06\x8a\x27\x5f\xcb\xf2\xaa\x3b\xc7\xbd\x21\xb7\xbc\xec\xef\x3a\xf8\x59\xe9\x45\x79\x4d\x24\xfd\x7e\xf9\x05\x30\xea\xf5\x4a\x14\x3d\x91\x25\x50\x7a\x19\xd4\x60\xd9\x2e\x45\xd4\x0b\xef\xad\xf0\x2d\xc0\x82\x8a\x47\xad\xe2\x8b\xd1\xf0\x9f\x85\x77\xc6\xf2\x9d\xec\xb5\x43\xda\x9f\xf6\xd9\xf6\x32\xef\xa6\x5c\x5e\x6a\xd0\x36\x0c\x79\x83\xe6\xdd\xb7\x36\x98\xb4\x1a\x43\xa1\x0e\x77\x1f\x73\x1d\x5a\x50\x4d\xbc\xdc\xb2\x08\xc2\xae\x66\x22\x8e\xc1\xfe\x65\x3a\xe9\x86\xce\x74\xb5\x24\xb5\xe7\x2b\x82\x7d\xd3\xe3\x15\xf7\x9b\x3b\x60\x71\xaf\x26\x8e\x58\xdc\xac\xf0\x90\x25\xd5\x39\x7e\xcc\xd2\x3b\xe5\xcd\x1f\xb4\xa4\x47\x6e\x97\x48\xc0\x41\xbf\x2d\x5a\x85\x15\x2d\xf7\x8d\x24\x07\xfa\x8a\x7e\x40\xab\x8d\xae\x47\x8a\x6a\xfe\xbb\x71\x1a\x36\x10\xdd\xda\x3d\x18\xb7\x3e\xd6\xea\xc4\x56\x40\xa6\x42\x90\x2d\xfa\xff\x04\x00\x00\xff\xff\x0c\xc8\xac\x3e\x75\x1e\x00\x00")

func mapping_static_partials_mapping_type_mapping_tree_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_mapping_type_mapping_tree_html,
		"mapping_static/partials/mapping/type-mapping-tree.html",
	)
}

func mapping_static_partials_mapping_type_mapping_tree_html() (*asset, error) {
	bytes, err := mapping_static_partials_mapping_type_mapping_tree_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/mapping/type-mapping-tree.html", size: 7797, mode: os.FileMode(420), modTime: time.Unix(1445103319, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_mapping_type_mapping_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x90\xb1\x4e\xc4\x30\x0c\x86\xf7\x3e\x45\x94\xa5\x03\xca\x65\x47\xbd\x2e\xbc\x02\xfb\xc9\x6a\xcc\x61\xc9\x75\xa2\xc4\x87\x40\x88\x77\xc7\xad\x72\x45\x47\xb6\xff\xff\xed\x2f\xb6\xa7\x44\x1f\xee\x46\x41\x2b\xe2\xd9\xe7\xa2\x94\xa5\xf9\x79\x70\x6e\xca\x7c\x0f\x82\xe4\x84\xcd\xbc\xed\xc9\x35\xac\x26\xf9\xec\x57\x28\x85\xe4\xda\x7c\x4f\x12\x28\x04\xfd\x2a\x78\x44\xaf\x26\x5e\xb2\x28\x90\x60\xdd\xa9\xc6\x65\xda\x18\x15\x0b\x82\x1e\x95\x8e\xc4\xfd\xe7\xb9\x87\xff\x0f\x73\x61\x68\xed\x68\xfc\x2b\x36\x68\x8f\xbe\x47\x4c\xa4\x16\x8e\xcf\x77\xe8\xe9\xd2\xad\x9f\x87\x06\x92\x85\x6f\xc9\x06\x6e\x0a\x4a\xcb\xa5\x54\x7c\xa3\x4f\xf7\xe4\xc6\x58\xa0\x2a\x01\xb7\xd8\x09\x71\xdb\x2c\x74\xb1\x8f\x75\x7a\xd7\x95\x47\x3f\x4f\x91\x69\xbf\x58\xcc\x3c\x0f\x53\xb4\x93\xce\xc3\x6f\x00\x00\x00\xff\xff\x6f\x9d\x14\xad\x59\x01\x00\x00")

func mapping_static_partials_mapping_type_mapping_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_mapping_type_mapping_html,
		"mapping_static/partials/mapping/type-mapping.html",
	)
}

func mapping_static_partials_mapping_type_mapping_html() (*asset, error) {
	bytes, err := mapping_static_partials_mapping_type_mapping_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/mapping/type-mapping.html", size: 345, mode: os.FileMode(420), modTime: time.Unix(1445103377, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"mapping_static/js/mapping/analysis-analyzer.js":                       mapping_static_js_mapping_analysis_analyzer_js,
	"mapping_static/js/mapping/analysis-charfilter.js":                     mapping_static_js_mapping_analysis_charfilter_js,
	"mapping_static/js/mapping/analysis-tokenfilter.js":                    mapping_static_js_mapping_analysis_tokenfilter_js,
	"mapping_static/js/mapping/analysis-tokenizer.js":                      mapping_static_js_mapping_analysis_tokenizer_js,
	"mapping_static/js/mapping/analysis-wordlist.js":                       mapping_static_js_mapping_analysis_wordlist_js,
	"mapping_static/js/mapping/analysis.js":                                mapping_static_js_mapping_analysis_js,
	"mapping_static/js/mapping/index-mapping.js":                           mapping_static_js_mapping_index_mapping_js,
	"mapping_static/js/mapping/type-mapping.js":                            mapping_static_js_mapping_type_mapping_js,
	"mapping_static/partials/analysis/analyzer.html":                       mapping_static_partials_analysis_analyzer_html,
	"mapping_static/partials/analysis/analyzers.html":                      mapping_static_partials_analysis_analyzers_html,
	"mapping_static/partials/analysis/charfilter.html":                     mapping_static_partials_analysis_charfilter_html,
	"mapping_static/partials/analysis/charfilters/generic.html":            mapping_static_partials_analysis_charfilters_generic_html,
	"mapping_static/partials/analysis/charfilters/regexp.html":             mapping_static_partials_analysis_charfilters_regexp_html,
	"mapping_static/partials/analysis/charfilters.html":                    mapping_static_partials_analysis_charfilters_html,
	"mapping_static/partials/analysis/tokenfilter.html":                    mapping_static_partials_analysis_tokenfilter_html,
	"mapping_static/partials/analysis/tokenfilters/dict_compound.html":     mapping_static_partials_analysis_tokenfilters_dict_compound_html,
	"mapping_static/partials/analysis/tokenfilters/edge_ngram.html":        mapping_static_partials_analysis_tokenfilters_edge_ngram_html,
	"mapping_static/partials/analysis/tokenfilters/elision.html":           mapping_static_partials_analysis_tokenfilters_elision_html,
	"mapping_static/partials/analysis/tokenfilters/generic.html":           mapping_static_partials_analysis_tokenfilters_generic_html,
	"mapping_static/partials/analysis/tokenfilters/keyword_marker.html":    mapping_static_partials_analysis_tokenfilters_keyword_marker_html,
	"mapping_static/partials/analysis/tokenfilters/length.html":            mapping_static_partials_analysis_tokenfilters_length_html,
	"mapping_static/partials/analysis/tokenfilters/ngram.html":             mapping_static_partials_analysis_tokenfilters_ngram_html,
	"mapping_static/partials/analysis/tokenfilters/normalize_unicode.html": mapping_static_partials_analysis_tokenfilters_normalize_unicode_html,
	"mapping_static/partials/analysis/tokenfilters/shingle.html":           mapping_static_partials_analysis_tokenfilters_shingle_html,
	"mapping_static/partials/analysis/tokenfilters/stop_tokens.html":       mapping_static_partials_analysis_tokenfilters_stop_tokens_html,
	"mapping_static/partials/analysis/tokenfilters/truncate_token.html":    mapping_static_partials_analysis_tokenfilters_truncate_token_html,
	"mapping_static/partials/analysis/tokenfilters/wordmap.html":           mapping_static_partials_analysis_tokenfilters_wordmap_html,
	"mapping_static/partials/analysis/tokenfilters.html":                   mapping_static_partials_analysis_tokenfilters_html,
	"mapping_static/partials/analysis/tokenizer.html":                      mapping_static_partials_analysis_tokenizer_html,
	"mapping_static/partials/analysis/tokenizers/exception.html":           mapping_static_partials_analysis_tokenizers_exception_html,
	"mapping_static/partials/analysis/tokenizers/generic.html":             mapping_static_partials_analysis_tokenizers_generic_html,
	"mapping_static/partials/analysis/tokenizers/regexp.html":              mapping_static_partials_analysis_tokenizers_regexp_html,
	"mapping_static/partials/analysis/tokenizers.html":                     mapping_static_partials_analysis_tokenizers_html,
	"mapping_static/partials/analysis/wordlist.html":                       mapping_static_partials_analysis_wordlist_html,
	"mapping_static/partials/analysis/wordlists.html":                      mapping_static_partials_analysis_wordlists_html,
	"mapping_static/partials/mapping/index-mapping.html":                   mapping_static_partials_mapping_index_mapping_html,
	"mapping_static/partials/mapping/type-mapping-tree.html":               mapping_static_partials_mapping_type_mapping_tree_html,
	"mapping_static/partials/mapping/type-mapping.html":                    mapping_static_partials_mapping_type_mapping_html,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func     func() (*asset, error)
	Children map[string]*_bintree_t
}

var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"mapping_static": &_bintree_t{nil, map[string]*_bintree_t{
		"js": &_bintree_t{nil, map[string]*_bintree_t{
			"mapping": &_bintree_t{nil, map[string]*_bintree_t{
				"analysis-analyzer.js":    &_bintree_t{mapping_static_js_mapping_analysis_analyzer_js, map[string]*_bintree_t{}},
				"analysis-charfilter.js":  &_bintree_t{mapping_static_js_mapping_analysis_charfilter_js, map[string]*_bintree_t{}},
				"analysis-tokenfilter.js": &_bintree_t{mapping_static_js_mapping_analysis_tokenfilter_js, map[string]*_bintree_t{}},
				"analysis-tokenizer.js":   &_bintree_t{mapping_static_js_mapping_analysis_tokenizer_js, map[string]*_bintree_t{}},
				"analysis-wordlist.js":    &_bintree_t{mapping_static_js_mapping_analysis_wordlist_js, map[string]*_bintree_t{}},
				"analysis.js":             &_bintree_t{mapping_static_js_mapping_analysis_js, map[string]*_bintree_t{}},
				"index-mapping.js":        &_bintree_t{mapping_static_js_mapping_index_mapping_js, map[string]*_bintree_t{}},
				"type-mapping.js":         &_bintree_t{mapping_static_js_mapping_type_mapping_js, map[string]*_bintree_t{}},
			}},
		}},
		"partials": &_bintree_t{nil, map[string]*_bintree_t{
			"analysis": &_bintree_t{nil, map[string]*_bintree_t{
				"analyzer.html":   &_bintree_t{mapping_static_partials_analysis_analyzer_html, map[string]*_bintree_t{}},
				"analyzers.html":  &_bintree_t{mapping_static_partials_analysis_analyzers_html, map[string]*_bintree_t{}},
				"charfilter.html": &_bintree_t{mapping_static_partials_analysis_charfilter_html, map[string]*_bintree_t{}},
				"charfilters": &_bintree_t{nil, map[string]*_bintree_t{
					"generic.html": &_bintree_t{mapping_static_partials_analysis_charfilters_generic_html, map[string]*_bintree_t{}},
					"regexp.html":  &_bintree_t{mapping_static_partials_analysis_charfilters_regexp_html, map[string]*_bintree_t{}},
				}},
				"charfilters.html": &_bintree_t{mapping_static_partials_analysis_charfilters_html, map[string]*_bintree_t{}},
				"tokenfilter.html": &_bintree_t{mapping_static_partials_analysis_tokenfilter_html, map[string]*_bintree_t{}},
				"tokenfilters": &_bintree_t{nil, map[string]*_bintree_t{
					"dict_compound.html":     &_bintree_t{mapping_static_partials_analysis_tokenfilters_dict_compound_html, map[string]*_bintree_t{}},
					"edge_ngram.html":        &_bintree_t{mapping_static_partials_analysis_tokenfilters_edge_ngram_html, map[string]*_bintree_t{}},
					"elision.html":           &_bintree_t{mapping_static_partials_analysis_tokenfilters_elision_html, map[string]*_bintree_t{}},
					"generic.html":           &_bintree_t{mapping_static_partials_analysis_tokenfilters_generic_html, map[string]*_bintree_t{}},
					"keyword_marker.html":    &_bintree_t{mapping_static_partials_analysis_tokenfilters_keyword_marker_html, map[string]*_bintree_t{}},
					"length.html":            &_bintree_t{mapping_static_partials_analysis_tokenfilters_length_html, map[string]*_bintree_t{}},
					"ngram.html":             &_bintree_t{mapping_static_partials_analysis_tokenfilters_ngram_html, map[string]*_bintree_t{}},
					"normalize_unicode.html": &_bintree_t{mapping_static_partials_analysis_tokenfilters_normalize_unicode_html, map[string]*_bintree_t{}},
					"shingle.html":           &_bintree_t{mapping_static_partials_analysis_tokenfilters_shingle_html, map[string]*_bintree_t{}},
					"stop_tokens.html":       &_bintree_t{mapping_static_partials_analysis_tokenfilters_stop_tokens_html, map[string]*_bintree_t{}},
					"truncate_token.html":    &_bintree_t{mapping_static_partials_analysis_tokenfilters_truncate_token_html, map[string]*_bintree_t{}},
					"wordmap.html":           &_bintree_t{mapping_static_partials_analysis_tokenfilters_wordmap_html, map[string]*_bintree_t{}},
				}},
				"tokenfilters.html": &_bintree_t{mapping_static_partials_analysis_tokenfilters_html, map[string]*_bintree_t{}},
				"tokenizer.html":    &_bintree_t{mapping_static_partials_analysis_tokenizer_html, map[string]*_bintree_t{}},
				"tokenizers": &_bintree_t{nil, map[string]*_bintree_t{
					"exception.html": &_bintree_t{mapping_static_partials_analysis_tokenizers_exception_html, map[string]*_bintree_t{}},
					"generic.html":   &_bintree_t{mapping_static_partials_analysis_tokenizers_generic_html, map[string]*_bintree_t{}},
					"regexp.html":    &_bintree_t{mapping_static_partials_analysis_tokenizers_regexp_html, map[string]*_bintree_t{}},
				}},
				"tokenizers.html": &_bintree_t{mapping_static_partials_analysis_tokenizers_html, map[string]*_bintree_t{}},
				"wordlist.html":   &_bintree_t{mapping_static_partials_analysis_wordlist_html, map[string]*_bintree_t{}},
				"wordlists.html":  &_bintree_t{mapping_static_partials_analysis_wordlists_html, map[string]*_bintree_t{}},
			}},
			"mapping": &_bintree_t{nil, map[string]*_bintree_t{
				"index-mapping.html":     &_bintree_t{mapping_static_partials_mapping_index_mapping_html, map[string]*_bintree_t{}},
				"type-mapping-tree.html": &_bintree_t{mapping_static_partials_mapping_type_mapping_tree_html, map[string]*_bintree_t{}},
				"type-mapping.html":      &_bintree_t{mapping_static_partials_mapping_type_mapping_html, map[string]*_bintree_t{}},
			}},
		}},
	}},
}}

// Restore an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// Restore assets under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	if err != nil { // File
		return RestoreAsset(dir, name)
	} else { // Dir
		for _, child := range children {
			err = RestoreAssets(dir, path.Join(name, child))
			if err != nil {
				return err
			}
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

func assetFS() *assetfs.AssetFS {
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, Prefix: k}
	}
	panic("unreachable")
}
