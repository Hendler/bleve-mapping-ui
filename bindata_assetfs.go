package mapping

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"github.com/elazarl/go-bindata-assetfs"
	"io"
	"io/ioutil"
	"os"
	"path"
	"path/filepath"
	"strings"
	"time"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindata_file_info struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindata_file_info) Name() string {
	return fi.name
}
func (fi bindata_file_info) Size() int64 {
	return fi.size
}
func (fi bindata_file_info) Mode() os.FileMode {
	return fi.mode
}
func (fi bindata_file_info) ModTime() time.Time {
	return fi.modTime
}
func (fi bindata_file_info) IsDir() bool {
	return false
}
func (fi bindata_file_info) Sys() interface{} {
	return nil
}

var _static_bleve_mapping_js_mapping_analysis_analyzer_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x57\xcd\x6e\xe3\x36\x10\xbe\xe7\x29\x18\x61\x11\xcb\x58\xc3\x41\xaf\x35\x72\xd8\x2e\x50\xa0\x87\xf4\xb4\x37\x23\x08\xb8\xe2\x28\x26\x42\x51\x2a\x49\x79\xe3\x0d\xfc\xee\x1d\x52\x7f\x24\x25\xc5\x76\x83\xa0\x6d\xb0\xf0\x8a\x9c\x99\x8f\x33\x1f\x67\x86\x64\x5e\xcb\xcc\xf0\x52\x92\xdf\x04\xec\xe1\x8b\xa4\xe2\xf0\x13\xd4\x7d\xc9\xa8\xf8\x6a\x94\x48\x3f\xe9\xac\xac\x60\x45\x3e\x15\x76\xea\x0f\xa9\x0d\x95\x99\x1d\xef\x8c\xa9\x56\x57\xe4\xc4\x9f\xa4\x05\x2a\xef\xa9\xa8\xf1\xbf\x82\x56\x15\x97\x4f\x2b\x82\x20\x86\x67\x8f\x95\x82\x9c\xbf\x2c\xc9\xab\x83\x69\x56\x5a\x97\x8a\x3f\xfd\x89\x56\xe4\xce\x19\x6f\x7c\x99\x9c\x99\x07\xa5\x4a\x75\x0f\x5a\xd3\x27\x2b\x4f\x92\x40\x9a\x97\xaa\xa8\xa8\xd9\x8d\x25\xad\x43\x28\x68\xbf\x02\x69\xe0\x25\xea\x04\xe3\xcd\x95\xaf\x4a\x5b\xde\x50\xeb\xf5\xd8\x80\xdc\xde\x12\x14\x1d\x08\x97\x4d\xf8\x04\xdd\x20\xc0\xb8\xc1\x65\x9c\x82\x1d\xa7\x7b\xaa\xc8\x73\xaf\xd3\x51\xd1\xda\x4b\x00\x46\x18\x40\x85\xc0\x0e\xab\xcc\x71\x4e\x1b\x9c\xa5\x4a\xd1\x83\xee\x95\x79\x4e\xd2\x67\x72\x87\x01\x66\x3b\xaa\x1e\x73\x2e\x0c\x28\x9d\xf8\x78\x6e\x37\xe0\x87\x95\xb7\x62\x74\x76\xfb\xb0\x09\x14\x7a\x9f\xb2\x9c\xf7\x5e\xad\x7d\xcc\x18\x72\x0c\xbb\xae\x6a\xbd\x4b\xc7\x96\x5b\xc4\x7c\x58\x86\xeb\x1d\x83\x51\x44\x66\x60\x6d\xb7\x3d\x58\x66\x00\x3a\x12\x10\x1a\x3c\x0e\x4c\xf9\x0c\xf2\x2d\x12\x9c\xc2\x19\x2c\x18\x9f\x85\x00\x75\x86\x06\x1f\xd8\xe7\x21\xb0\xdd\x9a\x4b\x89\x08\xcc\x1b\x26\xfc\x95\x46\x54\xbc\xbe\x85\xb6\x7d\x7e\x40\x08\xe7\x17\x7e\x7a\xb6\x57\xcd\xaf\x9f\xd7\x6e\x15\x8e\x46\xb6\x22\x3b\xaa\x7c\x05\x51\x52\xf6\x2d\x56\xea\x7a\x4a\xea\xb3\xe4\x1a\xc6\xba\x2a\xb5\x49\x17\xb7\xb4\xe2\xb7\x8f\x21\xf8\x62\xd5\xd6\xe0\x72\xad\xeb\x2c\xc3\x62\x4e\x7b\x1c\x46\x0d\x8d\x19\x9f\xf3\xd0\xea\x0e\xb3\x3e\x37\xcb\x75\xff\xed\x1a\x46\x88\xbf\xc2\x12\x63\x30\xb3\x4a\xd4\x60\xac\xbe\x0f\xdc\x7c\x1f\x4f\x51\x93\x2e\x43\x0d\x9b\xcd\xbf\xbb\x2d\x7c\x8b\xde\xaf\x23\xad\x33\xf9\x8d\xe0\xff\x21\xc1\x63\x27\x1d\xc3\x7e\x6d\xfe\xbb\x1c\x47\xfc\xc4\x24\x53\xe6\x69\xf8\xe4\x39\xb1\xef\x4b\xde\xa9\x04\x86\x34\xc3\xc9\x01\x7f\x13\xf4\xdc\xd6\xe4\x1a\xbb\x4e\x2d\x19\x9e\x0b\x12\x7b\xf3\xcd\x0d\xf1\xe6\x93\x51\x03\xea\x8e\x17\x10\x80\xd8\xec\xcb\x54\xbb\x6b\x9a\x47\x33\x58\x8e\x6a\x34\x8c\x50\x41\x51\xee\x61\x3a\x48\x8e\x5e\xbd\x04\x69\x72\xce\xe2\xba\x12\x3c\x83\xc6\x78\x45\x7e\x99\xe6\xde\xd5\xd8\xe9\xf4\xfd\x36\x56\xbb\xa4\x3f\xbc\x3f\x81\x27\xfc\x1c\x7a\xc4\x7f\x23\x85\x63\x8e\xfe\x37\x39\x3c\x79\x54\x7f\x74\xee\x4e\x2f\x7a\x56\xce\x22\x1f\x1e\xd7\x17\x32\x19\xed\xd2\x07\xb0\x18\xa4\xe4\xe5\x34\xce\x84\x76\x92\xc7\x70\xd9\xb3\x88\xcc\xec\x2b\x40\x78\xab\x90\xb0\x98\x83\xd7\xc2\x9a\x71\x5d\x70\x2c\xd7\x45\x63\xb6\x98\xc6\xfc\x5e\x73\xc1\x7c\xc7\xed\x3d\xdf\x47\xb5\x3c\x5f\xc7\x93\xf3\xe5\x97\xb8\x67\x04\xd7\x44\xc1\x5f\x35\x57\xc0\x92\xf0\xce\xa5\xc0\xd4\x4a\xfa\xcc\x06\x97\x6f\x6b\x5c\xd4\xda\x10\x59\x1a\x42\x85\x02\xca\x0e\xe4\x3b\x90\x5a\x03\x0b\x5c\x72\x9a\xd7\x77\xa3\x07\xcc\xcd\xcd\x94\x93\x6d\x0f\x6b\xd8\xd7\x5c\xf7\xdb\xa0\xb7\x16\xe8\xe1\xcc\xd8\xba\xc6\xed\xfc\x64\x64\x91\x90\xcf\x8d\xcb\x9f\x49\xb2\xe8\xdd\x85\x17\xae\x8d\xbe\x28\x6e\x90\xba\x56\x40\xcc\x8e\x1a\xfc\x41\xf6\xf0\xb2\xd9\x3d\x8f\xb0\xf7\x15\x55\x29\x41\x1a\x4b\x2b\x5e\x21\xf9\xc0\x44\x17\x8f\xf7\x04\xb2\x7f\xfd\x5d\x9a\xba\x67\xce\x0c\x09\x71\xd0\xdd\xfc\x96\xba\xcb\xea\x8c\x95\x95\xc6\x85\xd1\x5b\xff\x6c\xae\xca\xbe\x2f\x11\xd3\x03\x70\x27\xd8\x8c\xa2\xd9\x26\xbd\x51\x62\x0d\xfa\xd1\x66\x20\xcd\xe0\x93\xec\xbe\x7f\x49\x86\x81\x24\x1d\x50\xf2\x6b\x8f\x39\x78\xec\x81\x8c\x8f\x3f\x47\x2f\x35\xd0\x42\x2f\x56\xde\x3a\x67\x9e\x80\xb8\x9d\x98\xa0\xdc\xb4\x7b\xd5\xee\x3c\x4e\x44\xf9\xa0\x6b\x61\x22\xae\x06\xc1\x69\xb2\x9c\xff\x61\xc5\x67\xa2\xd4\x90\x36\x00\xcb\x77\x1e\xae\x18\x45\x69\x76\xa0\x7e\x70\x7c\xda\x60\x2b\xa9\x04\x3d\x34\xd6\xef\x39\x83\xf1\xdf\xdf\x01\x00\x00\xff\xff\x3e\x97\xcf\x5c\xfc\x10\x00\x00")

func static_bleve_mapping_js_mapping_analysis_analyzer_js_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_js_mapping_analysis_analyzer_js,
		"static-bleve-mapping/js/mapping/analysis-analyzer.js",
	)
}

func static_bleve_mapping_js_mapping_analysis_analyzer_js() (*asset, error) {
	bytes, err := static_bleve_mapping_js_mapping_analysis_analyzer_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/js/mapping/analysis-analyzer.js", size: 4348, mode: os.FileMode(420), modTime: time.Unix(1453267781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_js_mapping_analysis_charfilter_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x56\x4d\x4f\xe3\x3c\x10\xbe\xf3\x2b\x4c\x84\x48\xaa\xb7\x24\xf7\xb7\xe2\xb2\xac\x56\xda\x03\x7b\xe2\x56\x55\x95\x49\xa6\xad\x45\xe2\x64\x6d\x07\xa8\x80\xff\xbe\x63\x3b\x4d\xec\x7c\xb4\x45\xec\x46\x88\x26\x9e\xf1\xcc\xe3\x67\x3e\x3c\x9b\x9a\xa7\x8a\x95\x9c\x7c\xcb\xe1\x19\xee\x76\x54\xfc\x60\xb9\x02\x71\x5f\x66\x34\xbf\x53\x22\x8f\xae\x64\x5a\x56\x30\x27\x57\x85\x5e\xfa\xc9\xa5\xa2\x3c\xd5\xdf\x3b\xa5\xaa\xf9\x05\x39\xf9\x70\x5a\xa0\xfa\x33\xcd\x6b\xfc\x29\x68\x55\x31\xbe\x9d\x13\x34\xa3\x58\xba\xae\x04\x6c\xd8\xeb\x8c\xbc\x19\x43\xd6\x57\x5c\x0a\xb6\xfd\x85\xbb\xc8\xad\xd9\xbc\x70\x65\x7c\x62\x1d\x84\x28\xc5\x3d\x48\x49\xb7\x5a\x1e\x04\x9e\x74\x53\x8a\xa2\xa2\x6a\x37\x94\x34\x80\x50\xd0\xbc\x79\x52\x0f\x25\xea\x78\xdf\x8b\x0b\x57\x35\x45\xee\x36\x86\x3b\xd4\x7b\xfb\xb0\x66\x92\x84\xa0\x70\x4f\x18\xb7\x04\x10\x04\x42\x20\x63\x0a\x1d\x19\x05\xfd\x1d\x3d\x53\x41\x9e\x5a\x9d\x03\x19\xa3\xb6\x97\x4f\x2b\x34\x6f\xf4\xf0\xd5\x3a\xf9\xb0\x38\xb4\x15\x59\xa1\x34\x1a\x05\xff\xfe\x4e\xc2\xc4\x2e\xdd\x3c\xea\x60\xdf\x34\x07\x0e\x67\xfe\x41\x6a\xfe\xc4\xcb\x17\xde\xe5\xc2\xc3\xbe\x82\x07\x28\xaa\x9c\x2a\xa4\xb6\xc5\x86\xbe\xfe\x23\x41\x52\x51\xa1\x18\xcd\x65\x42\x39\xcd\xf7\x92\xc9\xa4\x43\x2b\x93\x2d\x70\x10\x2c\x8d\x77\xaa\xc8\x83\x21\x61\x43\x07\x52\xb3\xd7\xfa\x08\x04\x6c\xe1\xb5\x0a\xfe\x3f\xcf\x9b\xd5\xb6\xce\x6c\x6a\x7e\x1c\xf3\xf9\x1d\x36\xb4\xce\xd5\x94\xcb\x43\x6d\x44\x6e\x44\xf4\x23\x40\xd5\x82\xf7\x16\xfd\xbd\x41\x30\x2c\x0d\x94\xe2\x11\x53\x30\x62\x4f\xda\x64\x8b\x0d\xe6\x49\xd8\x1a\xef\x72\xd5\x68\xd4\x55\x86\xac\xdd\x0d\x14\x46\xc1\x9b\x9a\x8d\xb7\xa0\xa2\x30\xa1\x15\x4b\xd6\x3d\xc3\xe1\x2c\x96\x75\x9a\x62\x15\x45\xed\x7e\x34\x4f\xfb\x04\x4c\xc2\xd2\xca\x66\x79\x6d\x43\xb2\x56\x5a\xe0\x9c\x6e\x16\xb7\xef\xa6\x62\x7d\x3f\x73\xac\x96\x0c\x26\xbc\xf5\x2a\x5c\xeb\xbb\x86\x17\x1e\x71\xa3\xb4\x44\x87\x4c\x67\x1b\x12\x5d\x0e\x6a\x2b\xd6\x60\x5d\xe7\x99\xcd\x0f\xbd\x57\x37\x8e\x26\xb8\x9d\x53\x6d\xe6\x68\x62\x2d\x1d\x0b\xab\x23\x24\xb6\x7d\xe3\x7c\x6b\xd1\xac\x9f\x33\x86\xd3\x5c\xc2\x19\x6e\xde\x06\x09\x37\xaa\x69\x08\xd1\x54\x77\x7e\xbd\x8e\x33\x6c\xae\xc7\x4b\x7b\x39\xee\x61\x75\x2c\xd9\x31\x84\xdc\xc4\x7b\x34\xa1\x39\xbc\x34\xd1\x19\x37\xfd\x99\x58\x4d\x80\xfb\x7a\xd8\x26\x0c\x7b\x11\xfc\x47\x91\x6b\xf8\x39\x83\x86\x93\x41\x9a\xe0\xe1\x2f\x04\xff\x1c\x12\x1c\x37\x47\xef\xa7\x53\x8d\x54\xcf\x2e\xb9\x93\x4d\xc4\xef\x8f\xde\x8c\x13\x67\x4c\x16\x0c\x7b\x61\x68\xb7\x85\xbd\x1e\xd3\xd8\x7c\xac\x59\x9e\xb9\x09\xaa\x67\x13\xd7\xaa\xe9\x36\xfd\x45\xc7\x40\x7f\x74\x31\xa3\x0f\x93\x78\xcd\xfc\xae\x99\x80\xcc\xe9\x38\xfa\xb1\xb7\x8f\x7b\xd0\xf6\x15\xc7\x0d\x33\x1f\x15\xb5\x54\x84\x97\x8a\xd0\x5c\x00\xcd\xf6\xe4\x11\x48\x2d\x21\xf3\x20\x19\xcd\xcb\xdb\xc1\xd0\x75\x7d\x3d\x06\xb2\x19\x16\xe2\xc3\xbd\xeb\x76\x79\xb9\xd4\xb6\xa6\x32\xa4\x7f\x3c\x1d\x38\x9a\xea\x74\x6e\xb2\x5a\x6f\xce\x48\x18\xe0\x05\x6f\x30\xe1\x3d\x1f\xb6\xc8\xe1\x95\x49\x25\x3f\x45\x01\x70\x59\x0b\x20\x6a\x47\x15\xfe\x43\x22\xb1\x0a\x0e\xd3\x1d\x5e\x30\x45\x55\x72\xe0\x4a\x33\x8c\x73\x14\xeb\x48\xe9\x12\x57\xf6\x2a\xcd\x91\xd8\xa3\x8e\x35\x9c\x45\x07\x02\xd3\x5d\xdd\xb7\x83\xa5\xcf\x4a\x70\x60\x10\xc7\x80\x91\x09\xc2\xa5\x15\x35\x1c\xcf\xfe\xc4\xd0\x9d\xdd\xf1\x6b\xef\xf7\xaa\x94\xed\x05\x6f\x4e\x88\x75\xd1\xa0\x09\xe7\x0e\xb4\x33\x2f\x7b\x64\x14\xd3\x85\xa9\x86\xae\xc3\xf4\xc3\x54\x2f\x24\x12\x9b\x5d\x8f\xb7\x4e\x70\x8c\x36\x2f\x67\xfc\x0a\x4c\xf3\x52\x42\x64\x4d\xcc\xbe\x38\x46\xe0\x39\x4a\xb5\x03\xf1\xc2\xb0\xc9\x60\x69\x63\xbf\xd8\xdb\xdd\x5f\x99\x36\xf0\xef\x4f\x00\x00\x00\xff\xff\xcc\xbe\x74\x51\x44\x0d\x00\x00")

func static_bleve_mapping_js_mapping_analysis_charfilter_js_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_js_mapping_analysis_charfilter_js,
		"static-bleve-mapping/js/mapping/analysis-charfilter.js",
	)
}

func static_bleve_mapping_js_mapping_analysis_charfilter_js() (*asset, error) {
	bytes, err := static_bleve_mapping_js_mapping_analysis_charfilter_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/js/mapping/analysis-charfilter.js", size: 3396, mode: os.FileMode(420), modTime: time.Unix(1453267781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_js_mapping_analysis_tokenfilter_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x58\x5f\x6f\xdb\x36\x10\x7f\xef\xa7\x60\x85\xa2\x92\x31\xd7\x1a\x32\xf4\x65\x41\x5f\xd6\x61\xc0\x1e\xb2\xa7\xbc\x19\x86\xc1\x48\x67\x9b\x30\x45\x6a\x24\x95\xc4\x4b\xfd\xdd\x77\x94\x64\x89\xd4\x1f\x5b\x71\x32\xcc\x28\x1a\x5b\x77\xf7\xbb\xe3\xef\x8e\xa7\x23\x37\x85\x48\x0c\x93\x82\xfc\xc6\xe1\x11\xee\xe5\x1e\xc4\x1f\x8c\x1b\x50\x77\x32\xa5\xfc\xbb\x51\x3c\xfa\xa4\x13\x99\xc3\x9c\x7c\xca\xec\xa3\x3f\x85\x36\x54\x24\xf6\xf7\xce\x98\x7c\xfe\x81\x5c\xfe\x08\x9a\xa1\xfe\x23\xe5\x05\xfe\xc9\x68\x9e\x33\xb1\x9d\x13\xc4\x31\x2c\x59\xe7\x0a\x36\xec\x79\x46\x5e\x4a\xa4\xca\xd9\x42\x2a\xb6\xfd\x0b\xad\xc8\xb7\xd2\xf8\xd6\x95\x89\x91\xe7\xa0\x94\x54\x77\xa0\x35\xdd\x5a\x79\x10\x78\xd2\x8d\x54\x59\x4e\xcd\xae\x2f\xa9\x03\x42\x41\xfd\xcd\x93\x7a\x51\xa2\x8e\xf7\xfb\xf6\x83\xab\x6a\x2c\x7b\x9b\x92\x3d\x54\x7c\x39\x56\x38\x71\x4c\x50\x7a\x20\x4c\x54\x0c\x10\x8c\x84\x40\xca\x0c\x7a\x2a\x15\xec\xef\xe8\x91\x2a\xb2\x6f\x74\x4e\x6c\x0c\x83\x2f\xf7\x2b\xc4\x2f\x15\xf1\x6b\xe5\xe5\xd8\x8f\xe4\x8e\xe6\x96\x42\x8d\xba\xcb\x95\x1f\x29\x97\x34\xbd\xef\xe8\x9c\x2a\x21\xf2\x9c\xdb\x1c\x2f\x72\xa9\x4d\x14\xc6\x34\x67\xf1\xda\x83\x0e\xe7\x35\x65\xb3\x85\x2e\x92\x04\xb9\x8f\x1a\x98\x94\x1a\xea\x42\x9d\x09\xcf\xaa\x56\x0f\xd7\x88\xa7\x6f\x1b\x9b\xe3\x6c\xd1\x7c\x2f\xd3\xeb\xc3\xcf\x91\xd9\x14\x46\x9c\x74\xca\xc1\xea\xbb\xc0\x35\x6d\x17\x78\x89\x66\xb5\x82\xcd\x8f\xce\x11\x27\x1a\xac\x8b\x1f\x3f\x48\x18\x57\x8f\xbe\x3c\xd8\x9d\xf4\xa5\x26\x26\x9c\xf9\x1e\x0a\xb1\x17\xf2\x49\x38\x1b\xed\xfe\x90\xc3\x3d\x64\x39\xa7\x06\xe3\x6c\x22\x44\x67\x3f\x91\x20\xce\xa9\x32\x8c\x72\x1d\x53\x41\xf9\x41\x33\x1d\x3b\x85\xa0\xe3\x2d\x08\x50\x2c\x59\xec\x4c\xc6\x83\x81\x6a\xec\xbb\xb0\x7c\xb7\x7c\x05\x29\x4b\xcc\x3a\x91\x59\x2e\x0b\x91\x06\xbf\x4e\x74\xeb\x59\x55\xce\xdb\x46\x10\x40\xba\x85\xb5\xd8\x2a\x9a\x4d\x06\x6c\x4d\xfa\x68\x9c\x69\x4c\xf8\x74\xa8\x4a\xbf\x87\xb3\x87\xc3\x93\x54\x29\x56\x98\xda\x83\x9a\x0c\xe7\x9b\xf5\x50\x39\x88\xad\xd9\x4d\x46\xab\xd4\x7b\x28\xaf\x23\x6b\x98\x27\x81\x0d\x8e\x72\xf6\x0f\xac\x0b\xc1\xec\xbe\x98\x8e\xd7\xb5\xec\x61\xeb\x1d\x96\x32\x9f\x8e\x58\xeb\xf7\x71\x8c\xcc\xab\x0e\xa2\xa7\x63\xb5\x36\x3d\x3c\xa3\xb0\x1d\x60\x51\x57\xf2\xc9\x90\xbe\x99\x8b\x7a\x3c\xbb\x87\x7e\x87\x0d\x2d\xb8\xb9\xb0\x85\x06\x1b\xa9\xfd\x28\x30\x85\x12\x9d\x87\x2d\x44\xd3\x00\x11\x63\xa8\x51\x2e\x7f\x5e\x79\x96\x47\xa7\x9d\x8d\xed\xbe\x2b\x62\xb1\xf6\x68\x19\x6c\x94\x14\x26\xe8\xbf\xdf\x83\x8c\x59\xa6\x7f\x19\x92\xd0\xe7\xbe\x64\x2c\xcc\x66\x5b\x5f\x11\xa3\x4d\x6f\xc2\x41\xbf\x17\x67\xbd\xde\x70\x45\x4c\x35\xc6\xbb\xc5\xd4\x74\x96\x2b\x62\xb9\x94\xa2\x9b\xaf\x5f\xa7\x84\xf0\x86\x2a\xba\x58\x24\x93\xfc\x0f\xb4\xb4\x2b\x62\xb1\xa3\x9f\xad\x68\xb1\x49\x82\x29\x6e\xdb\x6e\x77\xf5\xc2\x6f\xc6\xa9\x1f\x90\xc8\xc2\xe4\x85\x59\xdb\xa1\x97\x61\xc3\xb2\x8e\xb1\x79\xc1\x80\xa6\x06\x6c\x6d\xd4\x48\x5b\xa3\xc1\xd0\xe6\xc4\x16\xc7\xa1\x92\x4e\x5a\xaa\xd7\x90\xaf\x58\x6e\x0b\xf0\xf6\x8a\xef\x75\xf3\x2b\xe2\x69\x76\xcd\xcd\xa5\x0a\x3f\xdf\xea\xbd\xa9\xb9\xc8\x71\x7a\x84\xfb\xbe\xc6\x99\x99\x79\x0b\xfe\xc8\xec\x18\x86\x57\x4c\xcb\xbe\x5f\x67\x60\xae\xde\x69\x6b\x63\x25\xff\xc3\xe0\x3c\x4c\x4d\x33\x36\xb3\x0d\x89\x3e\xf6\x4f\x30\x0b\x1b\xae\xeb\x3e\xad\xde\xac\xd6\xd8\x1e\xd0\xea\x2c\xb6\x6e\x2d\xce\xf9\x77\xf2\xd2\x81\x58\x9d\x63\xb2\x39\xa0\xbd\x02\x2f\x9a\x39\x0c\xb4\xc4\xe2\x1e\x9d\xe2\xe8\xe5\x38\x64\x3d\xc2\x8a\x65\xbc\xf5\x7c\x3a\xdc\x39\x06\xce\x41\xf6\xc2\xa4\xbf\x1c\x71\xb1\x3a\x5b\xf9\xdf\x77\x54\x94\x89\x1f\x2c\x6e\x01\x4f\x75\x92\x46\xc0\x5f\x95\xb3\xb1\x00\xdf\x23\x7f\x63\xd8\x5e\x2e\xff\xb3\x1c\xd6\x3c\x4d\x61\xe3\x72\xbe\x46\xe8\x78\x97\x4a\x98\x42\x45\xdf\xd1\xf9\x63\x6c\x97\xaa\x4e\xab\x4d\xec\xfd\x11\x77\x2a\x8c\xf8\xfd\xd3\xbb\x67\x5a\xa4\x4c\x67\x0c\x5b\x65\x58\x99\x85\xc3\x27\xf7\x87\x82\xf1\xd4\x2d\x5a\x7b\x3d\xe4\xa2\x96\x9d\xa8\xfb\xd0\x01\xe8\xde\x1e\x95\xb7\x4f\x4c\xe3\xab\xe6\xef\x82\x29\x48\x9d\x66\x64\x3f\xd5\x1b\xc8\x5d\x68\xf3\x35\x8e\xcb\xbb\x29\x92\x15\xda\x10\x21\x0d\xa1\x5c\x01\x4d\x0f\xe4\x01\x48\xa1\x21\xf5\x42\x2a\x35\x3f\x7e\xeb\xdd\x7b\x7d\xfe\x3c\x14\x64\x7d\xa9\xb0\x38\x1d\x6b\xbc\x77\x80\x5e\x5a\xb0\xb1\x62\xe9\xae\xaf\x4c\x1d\xa9\xeb\xdb\x1a\xa6\x24\x0c\xf0\xf0\x54\x06\x84\x67\xa8\xb0\x09\x1b\x9e\x99\x36\xfa\x55\xeb\xc7\x71\xa2\x50\x40\xcc\x8e\x1a\xfc\x0f\x59\xc4\xed\x70\xba\x5d\x23\xe5\x51\x49\x80\x30\x96\xde\x47\x9c\xef\x5a\x46\xdc\x53\x5a\x67\xd3\xb9\xa2\x6a\xa1\x83\x3d\xe8\xb6\x8d\x03\xeb\xde\xdc\x35\x77\x7b\x3e\x29\xc1\x89\x41\x9c\x14\x06\xa6\x08\x8f\x56\x54\x71\x9d\x0f\x0c\x5d\xed\xd5\x55\x3b\x00\x8d\xa4\xca\x2a\xf9\x83\x49\x4b\xa1\x13\x7b\xff\xde\xad\x24\x0a\xf7\x56\xbd\xa2\x70\xee\x2c\x6f\xe2\x3c\x81\x89\xc1\x92\x63\xa6\x66\xfd\x34\x45\x31\xd3\xc9\xac\xc6\xfe\xd9\x61\xbf\x15\x9c\xe5\xde\x55\xef\x6c\xe3\x84\x4b\x0d\x51\x85\x31\x7b\xe3\xa0\x82\x0b\x91\x66\x07\xea\x89\x61\xc7\xc2\xfe\x80\x4d\xe7\x50\x59\xbf\x65\x9e\xc1\x7f\xff\x06\x00\x00\xff\xff\x47\x4c\xaa\x5b\x0e\x17\x00\x00")

func static_bleve_mapping_js_mapping_analysis_tokenfilter_js_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_js_mapping_analysis_tokenfilter_js,
		"static-bleve-mapping/js/mapping/analysis-tokenfilter.js",
	)
}

func static_bleve_mapping_js_mapping_analysis_tokenfilter_js() (*asset, error) {
	bytes, err := static_bleve_mapping_js_mapping_analysis_tokenfilter_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/js/mapping/analysis-tokenfilter.js", size: 5902, mode: os.FileMode(420), modTime: time.Unix(1453267781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_js_mapping_analysis_tokenizer_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x57\x4d\x6f\xe3\x36\x10\xbd\xe7\x57\x30\xc2\x62\x25\xa3\x5e\x19\xbd\xd6\xd8\x4b\xb7\x3d\xf4\x90\x9e\x7c\x33\x8c\x80\x91\xc6\x36\x11\x89\x62\x49\x2a\xb6\x9b\xcd\x7f\xef\x90\xfa\x22\x65\xda\xf2\x26\x28\xd6\x58\x6c\x24\x71\xf8\xe6\xcd\x9b\x21\x39\xdc\xd6\x3c\xd3\xac\xe2\xe4\xf7\x02\x5e\x60\x55\x3d\x03\x67\xff\x82\x7c\xa8\x72\x5a\x7c\xd3\xb2\x48\x3e\xa9\xac\x12\x30\x27\x9f\x4a\xf3\xe9\x2f\xae\x34\xe5\x99\x79\xdf\x6b\x2d\xe6\x77\x64\xea\xc7\x69\x89\xd6\x2f\xb4\xa8\xf1\x4f\x49\x85\x60\x7c\x37\x27\x88\xa2\x59\xf6\x28\x24\x6c\xd9\x71\x46\x5e\x2d\x4e\xe3\x2a\xad\x24\xdb\xfd\x8d\xb3\xc8\x57\x3b\x79\xe9\x8e\xf1\x0b\xdf\x41\xca\x4a\x3e\x80\x52\x74\x67\xc6\xa3\xc8\x1b\xdd\x56\xb2\x14\x54\xef\xcf\x47\x5a\x42\x38\xd0\x3e\x79\xa3\x1e\x4b\xb4\xf1\xde\x97\x77\xae\xa9\xee\x94\x43\xb3\xd7\xb7\x06\x65\xb1\x20\x38\x76\x22\x8c\x37\xf1\x13\xe4\x41\x20\x67\x1a\xfd\x58\x03\xf3\x9e\xbc\x50\x49\x9e\x7b\x9b\x4e\x8b\x10\xf4\xfa\x79\x83\xe8\xd6\x0c\x1f\x1b\x1f\x6f\x61\x16\x46\x3f\x85\xc6\xeb\x8d\x4f\xb3\xa8\x68\xbe\x1a\x1b\x75\x35\x90\x78\xce\x4d\x7e\x53\x51\x29\x9d\xc4\x0b\x2a\xd8\xe2\xd1\x07\x8f\xe7\xad\x62\xb3\x54\xd5\x59\x86\xd2\x27\x3d\x4e\x4e\x35\x75\xb1\xae\x31\x34\xb6\xc3\x57\xb5\xec\x27\xbd\xcd\xd2\xfe\xd9\xa6\xd7\xc7\x9f\xa3\xb6\x39\x5c\xf0\x32\x2a\x07\x63\xef\x02\xb7\xd2\x4d\x49\x93\xcc\x5a\x0b\x93\x22\x25\x10\x28\x09\x16\xc6\xf7\xef\x24\x5e\x34\x9f\xbe\x3c\x99\x65\xf4\xa5\x95\x26\x9e\xf9\x2e\x6a\xfe\xcc\xab\x03\xef\xbd\xac\x4e\x02\x56\x50\x8a\x82\x6a\xa4\xd9\x13\x44\x57\xbf\x90\x68\x21\xa8\xd4\x8c\x16\x6a\x41\x39\x2d\x4e\x8a\xa9\xc5\x20\xd3\x62\x07\x1c\x24\xcb\xd2\xbd\x2e\x8b\xe8\x42\x29\xba\xf0\x46\xea\x41\xaa\x48\xc2\x0e\x8e\x22\xfa\xed\x26\x5f\x8d\x71\xe3\x6a\x58\xf1\x11\x1c\x33\x10\x26\x1f\x37\xc2\xf4\xf6\x0d\x52\x28\x07\x1e\xf5\x3f\x60\x4b\xeb\x42\x5f\x62\x1e\xac\x5a\xf3\x93\xa0\x6b\xc9\x47\x1f\xfd\xb9\x51\xe4\x0d\xbe\x39\xc5\x71\x21\xc0\x77\x78\xeb\xa7\x2b\x9c\xbf\xde\x9c\xef\x95\x51\x1f\xae\xa1\x54\x73\x66\x2a\xfa\x32\xb3\x49\xc1\xbc\x05\x5f\x0b\xac\x7a\x58\x8d\xc7\xaf\xac\xf5\x1d\x9c\x2f\x75\x3b\x2d\x7e\xe7\x12\xef\x7c\xfa\x4b\xfc\x51\x9b\xcf\x3f\x61\x9d\x87\x14\xe9\x97\x38\xdb\x92\xe4\x7e\x1c\x40\x6a\xa8\xba\xae\xf3\xa6\x24\xcd\x54\x73\x96\xb4\xf5\x34\xb8\x34\x28\xd7\x4a\x79\xed\x00\x6c\xa6\xe4\x43\x0f\x37\x63\x25\xb3\x71\xa1\x58\x39\x0b\x05\xd3\x4e\x5e\xcf\x8a\x2c\x64\x68\xb5\x30\x1a\x0f\x5e\xbb\x13\xc8\x31\x77\x4e\xda\xab\xbb\xd1\x3a\x08\xbf\xb9\x52\xdc\xdf\xf6\x94\xdb\x24\x07\x2b\x98\xc3\xa1\x4d\x4a\x10\xf8\x07\x32\x14\x26\xf6\xd1\x5c\x85\x51\xbd\xac\xfd\x2f\xd9\x6a\x75\x99\x8e\x7f\x2a\x33\x17\x04\xf8\x70\xbe\x6f\x09\xff\xdc\xc9\xb5\x83\x74\x62\xc7\xa4\x79\xfe\x67\xb7\x31\xbb\xd5\x64\x47\xdd\x28\x8d\x52\x6d\xd3\x09\x87\x66\xa5\x4f\x55\x41\x3a\x6c\xf9\xa9\xa8\xd5\xfe\x6c\xfe\xd2\x9b\x3e\x1a\x75\xba\xd3\x8b\xec\x25\x94\xd5\x0b\x04\x03\x60\x3c\x87\xe3\xb5\xf6\xd1\x65\xa7\x44\xc1\x32\x68\xe6\xcc\xc9\xaf\xe1\x8e\x28\x33\x9d\x7e\xe1\xf8\x20\xfe\xa9\xe1\xdd\x08\xd2\x9c\xa9\x92\xe1\x11\x11\x37\xd3\xe2\x30\xe6\x53\xcd\x8a\xdc\xa5\x6d\x5a\xf9\xb1\xec\xf7\xe3\x8f\x0e\xc0\xb8\xd3\xb7\x37\x05\xa6\xf0\x1c\xfe\xa7\x66\x12\xf2\x68\x19\x38\x9e\x5d\x55\xfb\x47\x6c\xcf\xed\x75\xa2\xac\x95\x26\xbc\xd2\x84\x16\x12\x68\x7e\x22\x4f\x40\x6a\x05\xb9\x47\xc9\x5a\xde\x7f\x3d\xbb\xa3\x7c\xfe\x1c\x22\xd9\xf6\x7f\x69\xd7\x06\x39\x0d\xee\xda\x20\x5d\x5a\x4e\xe3\xe0\xfa\x02\xb7\x4c\x73\x12\x47\xd8\x66\x59\x2a\xd8\x6d\xc5\x3d\x61\x38\x32\xa5\xd5\x0f\x45\x0e\x5c\xd5\x12\x88\xde\x53\x8d\xff\xa1\x7e\x58\x86\xdd\x1d\x08\x4f\xdc\x52\x54\x1c\xb8\x36\xc2\xe2\x7d\x83\x0d\x5a\x0c\x81\x8c\xf6\xa2\x71\x84\x81\x1d\x61\xe9\x12\xc0\x75\x68\x2e\x3d\xb4\x28\xd0\x3f\x34\x21\x18\xdf\x03\x0e\xde\x12\x19\x56\x12\x39\x60\x8a\xd8\x6e\xaf\x4d\x5e\xb0\xe1\x06\x09\x3c\xb3\x96\x7b\x28\x7b\xc4\xfe\x2a\xa5\x0d\xea\x74\x1a\xc6\x09\x70\xe8\x6b\x87\xfb\xb5\x44\xea\x4d\x50\x5c\xdc\xed\xf4\x43\x7f\xad\xf4\xbd\x44\x1d\x0e\x36\x7c\x81\x8e\x71\x00\xc7\xf1\xe1\xc5\xef\x08\x07\x9f\xcb\xbb\x2b\xb7\x35\x9b\x36\xdc\x0e\x5b\x2a\xf1\xdc\xe1\x75\x63\x3f\x87\x59\xc2\xd2\x67\xba\xad\x81\xae\xd5\x65\x7a\x54\x67\x0a\x8f\xb8\x51\x35\x0c\x03\x37\x54\x83\x0d\xc0\xdf\x4c\xb2\xa2\x52\x90\x34\x08\xb3\x0f\xf6\x8a\x18\x46\x85\xb5\x22\x0f\x0c\x0f\x18\xdc\xa5\xf0\x94\x38\x35\xb3\x3f\xd2\x52\xe2\xbf\xff\x02\x00\x00\xff\xff\x41\x02\xef\x6d\x3c\x11\x00\x00")

func static_bleve_mapping_js_mapping_analysis_tokenizer_js_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_js_mapping_analysis_tokenizer_js,
		"static-bleve-mapping/js/mapping/analysis-tokenizer.js",
	)
}

func static_bleve_mapping_js_mapping_analysis_tokenizer_js() (*asset, error) {
	bytes, err := static_bleve_mapping_js_mapping_analysis_tokenizer_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/js/mapping/analysis-tokenizer.js", size: 4412, mode: os.FileMode(420), modTime: time.Unix(1453267781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_js_mapping_analysis_wordlist_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x54\x4d\x6f\xdb\x38\x10\xbd\xfb\x57\x4c\x84\x20\x96\x61\xaf\x92\xbd\xae\xd6\x97\xf6\x54\xa0\xe9\x35\x07\xc3\x08\x68\x71\x6c\xb3\xa5\x48\x97\x43\xc5\x31\x02\xff\xf7\x0e\xe9\x2f\x52\x89\xd1\x08\x41\x64\xf1\xcd\x7b\xf3\xc9\x59\x76\xa6\xf1\xca\x1a\xf8\xa2\xf1\x05\x9f\xac\x93\xdf\x15\xf9\x47\x2b\x85\xfe\xea\x9d\x2e\x6f\xa9\xb1\x1b\x9c\xc0\x6d\x1b\x8e\xbe\x19\xf2\xc2\x34\x38\x19\xc0\x5f\x1e\x23\x5a\x66\x6d\x59\x8f\x26\xd0\x8a\xcd\x46\x99\xd5\x04\x98\xed\x55\xf3\xbc\x71\xb8\x54\xaf\x23\x78\x8b\x32\x07\x17\x55\x60\xc0\x34\x12\xeb\xf4\xdc\x3a\xb5\xfa\x71\x05\x43\xe7\xac\x7b\x44\x22\xb1\x0a\x78\x51\x64\xe8\xd2\xba\x56\x0a\x2f\x18\x79\xdb\x67\x48\x8c\x8b\x8f\xe3\xbb\x22\xad\x1a\x2c\x1f\x46\x35\xdc\xdf\x43\xe3\x50\x78\x04\x36\xdb\xa5\x0c\x42\x8d\x8d\x47\xf9\x74\x64\xce\xe6\x99\xe0\x31\x43\x06\x8e\xbf\x32\x34\x4b\x9b\x6d\xb2\xef\x7a\x90\x9a\x36\xa1\xbc\x9a\x6d\xce\x8d\x29\x4f\x75\x8a\x56\x59\x1b\x2a\xa9\xa8\x55\x44\xe5\xf0\x40\x1b\x8e\x0e\x6e\xf7\xb9\xa6\x90\x31\xec\x44\x34\xd3\x54\x4b\x28\x7b\x15\xab\x0c\x6e\x03\x25\x35\x0b\x0f\xe3\x50\xbe\x08\x07\x8a\xc5\x1e\x6a\x7e\xfd\x9f\x95\xb4\xd2\x68\x56\x7e\xcd\xc0\x78\xdc\xe7\xf6\x5c\x45\xfb\x99\x9a\xc3\x74\xda\xef\xd7\x35\xef\xa7\xc7\xa1\xef\x9c\xa9\xdf\x61\xfb\x41\xfe\x95\x7d\x66\x61\x6e\x3a\x5a\x5f\xcd\xb9\xfe\x88\xd7\xb7\x4a\xa6\xed\xe2\xba\x57\x77\x87\xad\x3d\xdc\x29\x4a\x6b\x9f\x8d\x52\x9a\x23\x4f\x1f\x59\xe7\xc1\xaf\x11\x4e\x46\x71\x44\x41\x19\x89\xaf\x48\xfc\xf6\x16\x24\x52\x83\x46\x86\x71\x63\x0c\x5d\xce\x87\x2d\x0f\xaf\x30\x6c\xa5\x91\xe7\x58\x79\x6c\x09\xb6\xca\xaf\x6d\xe7\x61\x2d\x5e\x02\x8d\x45\x84\xfc\xd9\x91\x3f\x09\x9f\x25\xb2\xd8\xaa\x10\x4d\x79\x8e\x5b\x4c\x60\xc1\xe1\x1e\xcb\x0f\x0b\xf8\x07\x44\x0d\xfb\xa4\x5e\x97\xf1\x08\xb2\xfc\x1f\xae\xe6\xfa\xae\x25\xb4\x89\xb7\x30\x23\xcc\xa2\xce\x7c\x02\xff\x8e\xfa\xa5\x4e\xf8\xd7\xae\x66\xaf\x1b\x8b\x4e\xe9\xec\x0e\x84\x6d\xd2\xbf\x07\x37\xfd\xc3\x44\xa0\xbf\x6c\xe2\x52\x52\xc4\xf5\xf8\xdd\x29\x87\xb2\xc8\x07\xa7\x3f\xa5\xc9\x3c\x72\xa3\xe2\xb6\x6b\x43\x0b\x8c\xf5\x20\x34\x6f\x1d\xb9\x83\x05\x42\x47\x28\xb3\x90\xa2\xe5\xcd\xf4\xdd\x3a\xbc\xbb\xfb\x28\xc8\xe3\xfa\xa9\x84\x11\x7a\x47\x8a\x2a\x6f\x7f\xa1\x79\xe6\x63\x9a\x05\xa5\xf9\x27\x93\x8b\x33\xae\x55\x88\x8f\x59\x12\x86\x05\x8c\x0f\x41\x8f\xa1\x18\x9e\x03\xc6\x57\x36\xa1\xcf\x67\xee\x90\x3a\xed\x93\x85\x7c\x39\x3c\x84\x17\xa0\x4c\xac\xf0\xbb\x0d\x16\xff\x41\xd1\x70\xb1\x6c\x5b\x4c\x7a\x68\x48\x8f\x18\x4f\x87\xe9\xe2\xb9\x1e\x5c\x5b\x9d\x8d\xb6\x84\xe5\xc1\xf5\x65\x6d\xf2\xdf\x9f\x00\x00\x00\xff\xff\x4c\x7b\xef\x54\x12\x07\x00\x00")

func static_bleve_mapping_js_mapping_analysis_wordlist_js_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_js_mapping_analysis_wordlist_js,
		"static-bleve-mapping/js/mapping/analysis-wordlist.js",
	)
}

func static_bleve_mapping_js_mapping_analysis_wordlist_js() (*asset, error) {
	bytes, err := static_bleve_mapping_js_mapping_analysis_wordlist_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/js/mapping/analysis-wordlist.js", size: 1810, mode: os.FileMode(420), modTime: time.Unix(1457735468, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_js_mapping_analysis_wordlist_js_ = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x54\x4d\x53\xe3\x38\x10\xbd\xe7\x57\x34\x2e\x8a\x38\x85\xd7\xec\x5e\xd7\xc5\x65\xf7\x32\x54\x0d\x73\xe5\x40\x51\x94\x62\x75\x12\xcd\xc8\x92\x47\x2d\x13\x52\x90\xff\x3e\x2d\x3b\x09\x92\x31\x33\xe4\x10\xdb\xea\x7e\xaf\x5f\x7f\xa8\x57\x9d\xa9\xbd\xb2\x06\xfe\xd3\xf8\x84\x77\xd6\xc9\xaf\x8a\xfc\xad\x95\x42\xff\xef\x9d\xce\xcf\xa9\xb6\x2d\x16\x70\xde\x84\xa3\x1b\x43\x5e\x98\x1a\x8b\x19\xfc\xe1\x67\x44\xc3\xa8\x2d\xf3\x51\x01\x8d\x68\x5b\x65\xd6\x05\x30\xda\xab\xfa\xb1\x75\xb8\x52\xcf\x0b\x78\xe9\x69\x86\x10\x65\x40\xc0\x75\x0f\xac\xe2\x73\xeb\xd4\xfa\xdb\x07\x36\x74\xce\xba\x5b\x24\x12\xeb\x60\xcf\xb2\xc4\x6a\x70\x1b\x12\x7a\x6f\xe8\x65\xf1\x71\xff\x2c\x49\xab\x1a\xf3\xbf\x17\x15\x5c\x5d\x41\xed\x50\x78\x04\x76\xdb\xc5\x08\x42\x8d\xb5\x47\x79\x77\x40\xde\x3f\x24\x84\x87\x04\xd9\x70\x78\x4b\xac\x49\xd6\xec\x93\x7c\x57\xb3\xd8\xb5\x0e\xd5\xd5\xec\x73\xea\x4b\x7e\x2c\x53\xef\x95\x74\xa1\x94\x8a\x1a\x45\x94\xcf\x07\xd8\x7c\x31\x84\xdd\xa7\x9c\x42\xca\x43\x19\x8e\xa4\xf9\xa1\x32\x31\xf5\x5b\xb1\x8e\x6f\xaf\xaf\xa3\x42\x56\x27\x67\xb5\x82\x29\x8e\x71\x89\xcb\xb6\xa3\xcd\xc9\xb1\x9a\xf2\x7b\xdf\xa3\x3e\x83\xa9\x3c\x1c\x36\x76\x18\xd1\x38\x95\x38\x7e\x6d\x0d\x59\x8d\xa5\xb6\xeb\x3c\xfb\x72\x93\x15\x93\xed\x2b\x12\x8d\x91\x2c\x6e\x3f\x59\xe7\xc1\x6f\x10\x8e\x88\x7e\x46\x40\x19\x89\xcf\x48\xfc\xf4\x16\x24\x52\x8d\x46\x86\x7e\xb3\x0d\x5d\x8a\x87\x2d\x4f\x8f\x30\xec\xa5\x91\x07\x49\x79\x6c\x08\xb6\xca\x6f\x6c\xe7\x61\x23\x9e\x02\x8c\x49\x84\xfc\xde\x91\x3f\x12\xcf\x46\x55\x49\xf4\x96\x41\x54\x7e\x4a\x58\x14\xcb\xc5\x0b\x38\xf4\x9d\x33\xb0\x84\xbf\x40\x54\xb0\x8f\xb2\x58\x59\x07\xf9\x93\x70\x03\x37\xff\x4f\x92\xfe\xb6\x6d\xd4\xf6\x57\x62\x0a\x77\xdf\xb3\x3e\x14\xf0\xcf\x62\xdc\xae\x4f\x5c\x97\x51\x47\x97\x9d\xd2\xe9\x5c\xf2\x05\x8f\x95\x85\x39\x3b\x1b\x1f\x46\x04\xe3\xfb\xdf\xef\x09\x45\x5c\x9d\x9f\x9d\x72\x28\xb3\x74\xe6\x86\xa2\xc5\xba\xe3\xde\xf5\x0b\xa8\x09\x5d\x31\xd6\x83\xd0\xbc\x09\xe4\x0e\x96\x08\x1d\xa1\x4c\x47\x3f\x78\x9e\x5d\xbf\xdb\x50\x17\x17\x53\x22\x0f\x2b\xa1\x14\x46\xe8\x1d\x29\x2a\xbd\xfd\x81\xe6\x91\x8f\xe9\x3e\x30\x3d\x7c\x32\xb9\x7e\xf2\xb5\x0a\xfa\x18\x25\x61\x9e\xc1\xe5\x20\xfa\x12\xb2\xf9\x49\x30\x3e\xb3\x0b\x7d\x3e\x73\x87\xd4\x69\xcf\x01\x5e\xf6\xd5\xe8\x70\x90\x17\x4c\x09\x59\xe6\x77\x2d\x66\xff\x42\x56\x73\xb1\x6c\x93\x15\x23\x6b\x48\x8f\xd8\x1e\xcf\xd4\x5b\xe4\x6a\xf6\xd1\x3a\xab\xb5\x25\xcc\x87\xd0\x6f\xab\x6c\x5f\xfd\x0a\x00\x00\xff\xff\xdc\xd1\x99\xbe\xa4\x06\x00\x00")

func static_bleve_mapping_js_mapping_analysis_wordlist_js__bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_js_mapping_analysis_wordlist_js_,
		"static-bleve-mapping/js/mapping/analysis-wordlist.js~",
	)
}

func static_bleve_mapping_js_mapping_analysis_wordlist_js_() (*asset, error) {
	bytes, err := static_bleve_mapping_js_mapping_analysis_wordlist_js__bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/js/mapping/analysis-wordlist.js~", size: 1700, mode: os.FileMode(420), modTime: time.Unix(1453511066, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_js_mapping_analysis_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5a\x51\x6f\xdb\xb6\x13\x7f\xcf\xa7\x60\x85\xa2\xb6\x9b\xd4\x79\x4f\x10\xfc\xd1\x7f\xbb\x01\xc1\xd6\xed\x25\xc5\x1e\x8c\x20\xa0\x25\xba\x26\x2a\x53\x86\x48\x27\x75\xd7\x7c\xf7\xdd\x51\x12\x45\x52\x94\x4c\x27\xc5\xd6\x26\xf6\x43\x1b\x8b\x77\xc7\xe3\xef\x8e\xc7\x1f\x4f\x3e\x3d\x25\x69\x21\x54\x59\xe4\x39\x2b\x49\xc9\xe4\xba\x10\x92\xcf\x73\x46\x16\x45\x49\xe6\x1b\x9e\x67\x5c\x7c\x22\x94\xa4\x1b\xa9\x8a\x15\xa1\x82\xe6\x5b\xc9\x25\x68\xad\x40\x94\x09\x25\x8f\x8e\x16\x1b\x91\x2a\x5e\x08\xf2\xff\x9c\xdd\xb2\xb7\xb5\xc8\x3b\x55\xe6\xe3\x97\x32\x2d\xd6\xec\x84\xbc\x5c\x2a\xb5\x86\xff\xf2\xe2\x13\xfc\xbb\x2a\x32\x9a\x4f\xc8\xdf\x47\x04\x3e\xb7\xb4\x24\xb7\x9c\xdd\xfd\x29\xf2\x2d\xb9\x20\x95\xc6\xb4\x79\x72\x7e\xa4\x85\xea\xa7\x82\xdd\x69\xf3\x5f\xc1\xd9\x0b\xd2\xcc\x3b\x6e\x4c\xe1\xa7\x64\x6a\x53\x8a\x46\x81\x65\x5c\x35\x1a\xe3\x24\x39\xb1\x04\xf1\x93\xa8\xed\x9a\x25\x67\x24\xa9\x96\x97\x9c\xb8\xa3\xe9\x92\x96\x37\x0b\x9e\x2b\x56\x4a\x90\x9a\x5d\x7b\xe3\xaa\xf8\xcc\x04\x07\xd3\x68\x62\x23\x78\x5a\x64\xcc\xb7\xa1\x65\x1c\x23\x66\xfc\x7e\x72\xae\xff\xbe\x77\x17\x99\xb1\x9c\x29\x16\x5a\xa7\xa0\x2b\x66\xaf\x75\x23\x59\xd6\x42\xc6\x65\xa3\xf3\x11\x9e\x57\xc2\xe7\x46\x96\x2f\xc8\x18\xe5\x27\x1e\x04\x14\x02\xaf\xc6\xc9\xd5\x12\x82\x4a\x9b\x39\x53\x2a\x44\xa1\xc8\x9c\x91\xca\x99\x2c\x39\x76\x94\xea\xb5\x81\x40\x4a\xc1\x28\xe1\x8a\x80\xfa\x9c\x61\xae\x68\xa7\xe6\x5b\xa2\x96\x0c\x24\x8e\xab\xef\xc7\x24\x99\x26\x96\x37\x6d\xa4\xda\x67\xf7\x8e\xaf\x90\x96\x0b\x5e\xae\xc6\xc9\xdb\x92\x91\x6d\xb1\x21\x72\x53\xff\x71\x47\x85\x22\xaa\xa8\x5d\x23\x23\x9c\x04\x17\x8b\x93\x8c\xfe\x97\x4c\xfc\x15\xd6\x72\x0d\x4a\x22\x63\x5f\x3e\xd0\xf5\x1a\x7c\x9d\x36\xe9\x3c\x6d\x56\x2e\x67\x68\xe9\xda\x77\xca\x8b\x90\x8b\xf4\x50\x84\x60\x7f\x19\xd3\x84\xc2\x02\x34\x1a\x5c\x90\x55\xe5\x81\x24\x63\xf8\x02\x5b\x80\x17\x1b\x49\xd6\x39\x4d\x99\x9c\x1c\xd9\xea\x00\x82\x54\x24\x5d\xb2\xf4\x33\xd1\xbe\x13\xdc\x64\x39\xac\x6a\x41\x37\xb9\x32\xe6\x1d\xf0\x42\x6b\xad\x15\x6e\x4c\x90\x2f\x2e\x88\xef\x6e\x1b\x16\x92\x54\x93\xd5\x7e\x76\xa6\x4b\x6c\x88\x6c\x7f\x21\xec\xa2\x76\x17\x33\xa0\xd1\xcb\x8a\x74\xb3\x82\xb8\xd5\xf6\x8c\x06\xee\xfe\x6c\x65\x25\x71\xc8\xe5\x5a\xe9\x3c\x2a\xf1\x2f\xc5\xfb\x22\xad\x2d\xe8\x78\x9c\xc0\x04\x27\x24\x49\x22\x36\x43\xb3\x76\xc7\x6b\xd6\xba\x6d\x12\x3a\x76\xf5\xbe\x3e\x56\x55\x46\xd3\x25\xc1\xc2\x63\x14\xf1\xe9\x58\x23\x51\xa4\x57\x30\x80\x09\x12\xc2\x03\x95\x64\x27\xbd\xcd\x6a\x7b\x50\xd4\x5a\xb3\xda\xf4\xb5\xbb\x07\xf7\x05\xd2\x3c\xf0\x00\x1d\x02\xd5\x01\xd6\x07\x04\x9d\xab\xb6\x70\xb3\x76\xdc\xc5\x24\x71\x4d\xdf\x87\xe0\xae\x6d\x8a\x4d\x9e\xbb\x75\x14\x37\x1d\x8c\xa6\x9b\x52\xf2\x5b\x46\x96\x2c\x5f\xd7\xfb\x63\xe7\x3a\xfd\xbd\xec\x2e\x79\x4d\xd5\xd2\xdb\xdd\xf6\xf6\x74\x22\x1e\xb1\x4b\x5b\xd3\xd1\x9b\x13\xd5\x7c\x2f\xfa\x92\xd7\xd8\xa2\x4a\xe7\x2d\xea\x79\xb0\x12\x96\x43\xf5\x8e\x37\x15\x13\x16\x00\x45\x14\x77\x35\x24\x0b\xce\xf2\x4c\xa2\x07\x0a\x0f\x18\x0d\x4a\x37\xed\xb5\xd4\xa5\xae\x37\x90\xf9\x16\x2c\x95\xba\xbf\x58\xfd\x14\x22\xd5\x11\x9c\xb5\x86\xae\xbb\xb9\xa9\x07\xa7\xbb\x10\x76\xa5\xfb\x24\x6c\x90\xc0\x65\x8c\x7c\xe5\x15\x2a\x64\x1a\xee\xd6\xc0\x79\x47\xfd\xbe\x17\x71\xc7\x18\xc0\x86\x41\xeb\x8b\xde\x4e\xf4\x75\xa5\x11\x4c\xc2\x01\x4e\xd6\x25\x64\x7e\xa9\xb6\x5d\xf4\x9b\x91\x3f\xf0\x0c\x75\xf1\xaf\x87\x78\xb7\xea\xc8\xcd\x1c\x76\x8d\x1b\x84\x56\x7a\x66\xdb\x0c\x84\x62\x47\x0a\xc7\x96\xa3\xca\x89\x93\x60\x74\xa2\x3e\xe8\xc7\x31\x30\x93\x63\xdb\xdf\xc9\x7e\x9b\xe4\xdf\x73\x76\xc0\xc7\xbd\xea\x63\x80\x1b\x77\xeb\xde\x2d\xcd\x37\xf8\x5f\xcd\xc3\x2f\x85\x1d\x2f\x9b\xb3\x7f\x40\x32\xdf\x25\xee\xcd\xe3\xd6\x00\xf9\xf6\x8d\xb4\xb4\xde\x36\xa5\xef\x03\x97\x42\x2a\x2a\x52\x86\xa6\xf4\x83\x29\x98\x13\x63\x1b\x77\x3d\xc3\x59\x3d\x93\x8d\x24\x15\x7c\x45\xd1\xf9\x66\x70\x6a\x9e\xc8\x5f\x04\x85\xfb\x4c\x66\x8b\x2b\xb6\x02\xaa\xa5\xd8\xc7\x32\x3f\x33\x64\x09\x66\x57\x3c\xbd\x59\x97\x6c\xc1\xbf\xa0\xaf\xa3\xd3\xea\xd1\x9b\x39\x96\xad\x37\xf5\x89\x35\x9a\x90\x2e\x17\x1e\x9d\xae\x29\x24\x3e\xcd\xe5\x69\x43\x29\x4f\x9b\x42\x33\x5d\xaa\x55\x3e\xb2\xa7\x6f\x6f\x5c\x67\x64\xd4\xde\x99\x40\x56\x83\x86\x17\x27\x47\x1e\xae\x65\x45\x7e\x0b\x0b\x77\x73\x10\xe3\x74\x16\xbe\x04\xf9\x29\xd0\x29\x42\xf7\x6e\x1e\xea\x60\xc7\xd9\xd2\xa2\x83\xc6\x6a\xa0\xe2\xcc\x05\x08\xcb\xa0\x71\x27\x4a\x7b\x4d\xe1\x68\x0e\xa3\x61\xa7\x70\x24\x2a\xb6\x4a\xdf\xde\x74\xf6\xe9\xe4\xbc\xdd\xa9\x4e\xfe\x4f\x21\xdc\x70\xe6\x4e\x91\x4a\x8e\xcd\xdc\xd5\x43\xdf\x83\x9e\x3d\xb7\x80\x44\xf4\x62\x84\x9c\x28\xcb\xaa\x53\xb8\xb2\x85\x57\x28\x3c\x6a\x7c\x46\x8e\x1f\x73\x36\x54\xa2\xbf\xb1\x2d\x1e\x0c\x61\x1f\xf0\x83\x35\x5d\x5f\xc1\x5e\xc0\xa9\x9a\x24\xe4\xd5\x2b\x4b\xf3\x45\xff\x41\x5b\x7b\x56\xb2\x55\x01\x44\x0d\xbd\x29\xea\x33\x34\x28\xfa\xa8\x9b\x5c\x28\x1e\x0e\x8a\xbb\xec\x99\x15\x5d\x93\x8b\x1e\x42\x80\x02\x96\x9c\x15\x62\x67\xb5\x79\x41\xe1\x70\xbf\xa5\x3c\xc7\xd2\xd4\xde\x10\x3b\xd2\x18\x82\x9c\x8a\x9e\xf9\x6a\xbf\xd1\x5a\x53\x40\xf0\x6c\x90\x50\xbc\x86\xe4\x5f\x42\xad\x02\x86\xda\xd5\xeb\x62\x85\x71\x85\xf9\xfb\x42\x07\x43\xe3\xc9\x2e\x84\xad\x9c\x3f\xe9\xdb\x4b\xb1\x79\x8c\xfd\x23\x88\xd3\xa2\x18\x8f\x2a\x99\x8c\xcb\x15\x97\x78\x89\xa1\x0a\x8a\x29\x76\x02\xd8\x1d\x79\x0f\xb5\x7d\x3c\xb1\x3c\xf3\x3b\x2d\x10\x85\xbb\xa2\xcc\x48\xce\x25\x36\xb0\x2c\x17\x40\xfd\x2f\x18\xf9\x1d\x06\xe2\x3b\x4c\x8d\x46\xd5\x61\xd2\x1d\x1f\x79\x36\xbb\x1e\xec\xef\x84\x66\xd9\xd5\xdf\x69\x74\x1e\xda\xdf\x31\x6b\x7e\x7e\x0d\x9e\xaa\x0d\x07\xb5\x2e\xb6\xc3\x63\x63\xbd\xa3\xc3\xd3\xa6\x92\x6e\xf1\x14\xd8\xc8\x34\x20\xe1\xbc\xa4\x6e\xff\x75\xb9\xb7\x1e\xfe\x55\x8f\x36\xf4\x3b\x62\x19\xb5\x39\x1f\x07\xcb\x58\xa0\x62\xc4\xdb\x9d\x79\x5e\x5d\x77\x8e\x12\x6f\xc5\x6c\x35\x67\x59\xd5\xd7\xa2\xba\x99\xc5\xd4\x96\x14\x0b\xd8\x9d\x8b\x05\xc3\x5a\x63\x5d\x8e\x64\xe7\x32\x60\xcd\x36\xcd\x78\xaa\x6e\x4c\xac\x9a\x3b\x5a\xa8\xa0\xd9\x5a\xc8\xbd\xd2\x9c\xc9\xfd\x35\x3f\xb3\x2d\xae\xe5\x01\x9a\x52\x15\xeb\xae\xd6\xd0\xbd\xdc\x4e\x85\xfa\x9e\xa8\x53\xdb\xcf\x01\xcc\xf2\x81\x8b\xb6\x67\x76\x90\xde\xf7\x15\x99\x03\xbd\x7f\x34\xbd\xc7\xb4\xc1\x1d\x10\x43\xef\x9b\x30\xfc\x57\xf4\x5e\xa7\xf8\x1e\xf4\xbe\x2a\x07\xf2\xc0\xf2\x7d\x70\x0e\x2c\xff\x07\x61\xf9\xfd\xc7\x79\x28\x20\x0e\x8c\x3b\x0d\x3e\x84\xe7\x87\x67\xfe\xa1\x08\x2f\xbe\xcc\xa4\x29\x9e\x3d\x0d\x1b\xf1\x78\xef\x3b\x10\x68\xd8\x43\x2c\xf3\x6d\x75\x2a\xee\x3b\x48\x79\xc3\x13\xec\x22\xbd\xad\xd6\x43\x69\xaf\xbf\xf2\xe7\xc7\x7e\xed\x17\xd9\x91\xfc\xd7\x85\x7d\x07\x03\xee\xe4\x16\x42\x5c\x11\xe1\x39\x33\x90\x75\xef\xb9\xa6\x02\x51\xeb\x1e\xba\x93\x04\x1b\x3b\x9d\xa0\xb7\xdd\xcc\xc8\x3b\xbd\x3d\xaf\xb7\x8d\x8d\x6f\xa9\x41\xc2\xbc\xa2\x30\xbd\x3d\x1b\xd8\x50\xe9\x6b\x75\xf5\xca\x2e\xc2\x9a\x33\x6f\x8a\x40\x39\xd3\x39\xe3\x19\x1b\xae\xb8\x0d\xed\x34\xa0\x58\x94\xd3\x81\x3b\xc0\x37\xdd\x7c\x75\xbf\xed\xc7\x40\xfb\xf7\xfc\x81\x83\x3e\x9a\x83\x62\x42\x54\x29\x14\xc3\x42\xdb\x50\x1c\xda\xcc\x07\x02\x7a\x20\xa0\x8f\x22\xa0\x43\x27\x6a\x28\x24\x0e\x90\x11\x26\x9f\x28\x09\x35\xbf\x98\xeb\xb0\xcf\xab\x66\x24\x9e\x7c\x1a\x95\x08\xee\x19\x34\xbf\x8b\x7a\x1a\xa5\x87\x32\x4f\xb3\xdc\xe7\x47\x39\xdb\x48\x47\x12\x4e\x07\xec\x1d\x7c\xb3\x35\xae\x89\xa6\xc5\x31\x5f\x17\x80\x52\xf9\xda\x4e\xb4\x46\xcf\x6d\xba\xf2\x58\xb6\xd9\x5a\x0a\xf6\x5b\x79\x04\xdf\xb4\xb0\x70\xe6\x0e\xfc\x32\xc2\x8c\x4f\x2d\xeb\x91\xbd\x45\xfe\x35\xd0\x58\xe4\x03\x34\xaf\xef\x17\x24\xfd\xf0\xfe\x5c\x14\x1e\x01\x35\x84\x7b\x2f\x3c\x1f\x42\x9a\x1f\x4a\x91\x7b\x4b\xd3\x81\x21\x3f\x9a\x21\xb7\xdb\x29\x82\x20\x9b\x40\x1c\xf8\xf1\x81\x1f\x1f\xf8\xf1\xe3\x1b\xb4\xc1\xe3\x3f\x14\x10\x07\xc6\x9d\x06\x9f\x32\x37\xee\x6b\xce\x5e\xd9\xef\x76\xf7\x22\xc8\xd1\xed\xd9\x9e\x29\xa2\x48\xf2\xe3\x1a\xb4\xce\x9b\xd1\xe7\xc9\x94\xf7\xec\xce\x7a\xa0\xc7\xd0\xe5\xa7\xd8\x9a\xb5\x5e\x9d\x77\x7b\xb3\x83\xbf\x95\xc0\x8f\xff\xe2\xfd\xa2\x47\x77\xe6\x4f\xd3\xd3\x9f\xed\xd8\xfb\x19\x1a\xb4\x03\xbb\xfe\xc0\x3f\xbf\x0f\xff\x8c\x6f\xd1\x5a\xc1\x38\x70\xd0\x03\x07\x3d\x70\xd0\xef\xf0\x23\x81\xef\xdb\xa4\x75\x6d\x3e\x31\x26\x7a\x7f\xf4\x4f\x00\x00\x00\xff\xff\x0b\x26\x20\x9a\x10\x3e\x00\x00")

func static_bleve_mapping_js_mapping_analysis_js_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_js_mapping_analysis_js,
		"static-bleve-mapping/js/mapping/analysis.js",
	)
}

func static_bleve_mapping_js_mapping_analysis_js() (*asset, error) {
	bytes, err := static_bleve_mapping_js_mapping_analysis_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/js/mapping/analysis.js", size: 15888, mode: os.FileMode(420), modTime: time.Unix(1453267781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_js_mapping_index_mapping_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x56\xdf\x6f\x22\x37\x10\x7e\x86\xbf\x62\x8a\xa2\x63\x91\x08\xf4\x39\x51\x1e\xb8\xe4\xe5\x5a\xe5\x52\x5d\xa3\xbe\x44\x11\x32\xbb\xb3\xe0\xe0\xb5\x57\xb6\x37\x39\x7a\xe1\x7f\xef\x78\x7f\xb0\xde\x1f\x10\xda\xaa\x2a\x0f\x09\xd8\x33\xdf\x7c\x9e\x6f\x66\xec\x38\x93\xa1\xe5\x4a\x02\x97\xdc\x7e\x16\xf8\x8a\x5f\x64\x84\xdf\xef\x59\x9a\x72\xb9\xbe\x55\xd2\x6a\x25\x04\xea\x60\x08\xf4\xb9\x30\xa1\x4a\x71\x0a\x17\x1b\x6b\x53\xfa\x27\xd4\x9a\xfe\x66\x7c\x75\xaf\x22\x26\xa6\x04\x52\xfb\x7e\x91\x53\x50\xa9\xc3\x36\x13\xf8\x91\xbb\x97\x3f\xe1\xe6\xf0\xed\xfd\x1d\x7e\xec\xaf\x87\x1e\xf8\xcc\x58\x66\x79\xb8\x4c\x35\xc6\xfc\x3b\x99\xf6\x2e\x93\xdf\xb8\x58\xb9\x5c\x39\xd2\x97\x49\x11\x74\x4c\x58\x83\x57\xa6\x1b\x4c\xe0\x26\xc7\xf7\x62\x34\x77\xe1\x97\xdf\x1f\xbe\xce\x52\xa6\x0d\x06\xf9\x57\x63\x35\x6d\xf0\x78\x17\x34\x0f\x34\x99\x94\x54\xfd\xe5\x99\xdd\xa5\x68\xbc\x18\x3d\x9b\xe5\x31\x3b\xbb\x4c\x32\xb1\x33\xfc\xa8\xf7\x61\xbf\x04\x18\xf4\xee\x16\x5f\xfe\x44\xfd\x21\x8e\x67\x79\x1a\x31\xdc\x30\xbd\x8c\xb9\xb0\xe7\x80\x36\x8c\x4f\xe3\x5a\xb5\x45\xc9\xcf\xa2\xea\x99\xbe\xbf\x7f\x04\x79\x36\xd7\xa6\xf5\x19\x64\x97\x54\x59\xe7\xc2\xe6\xa6\x7e\x49\xf3\x18\x1a\x25\xf4\x34\x8a\x30\x66\x99\xb0\xcb\xb2\x5e\x47\xcf\x55\x6f\xf4\x57\xce\xd3\x68\xf4\x4c\x05\xfa\x01\x46\x51\x59\xfb\x22\xa6\xab\x7e\x9b\x84\xb9\x57\xd9\xd2\x8f\x04\xd5\xed\xe8\xaa\x99\xbb\x51\xeb\xc6\x6d\xb6\x26\x37\x7f\x30\xc1\x23\x82\xae\xc6\x46\x40\xf4\x41\xa3\xcd\xb4\x74\x41\x2b\x8b\x60\x72\x0d\xad\xb6\xf6\xa3\x7c\x43\x43\xfc\x5b\xe7\x2a\x16\x4b\xa7\x9c\xf6\xa2\xcc\xee\xad\xd5\x22\x38\x3d\x7a\x2a\xa2\xf3\x39\x5c\xfe\xcd\x4f\x83\x65\xd5\x1f\x5f\x59\x82\xde\x9c\x6a\xad\x93\xc4\x4f\x94\xf4\x41\xe9\x24\x14\x8b\x16\x2d\x47\x3f\x41\xf5\xf4\x71\xdc\x67\xa9\x32\x36\x18\xcf\x59\xca\xe7\xcb\x06\xee\x78\x7a\x3c\x59\xc1\x64\x32\x3b\xe0\x98\x2c\x0c\xd1\x98\xe0\x10\x24\x62\x96\xf9\x81\x4e\x9c\xc8\x99\xd6\x63\xe0\xfa\xe0\xb2\xf7\xf0\x51\x6b\xa5\x9b\xe8\x53\x08\x55\x84\x2e\xc6\x60\x50\x9d\x3b\x37\xbb\x27\x22\x6c\x8d\x25\xb2\x8f\x47\x09\xaa\x66\x1e\xb5\x41\x7f\x26\x6f\x6e\x40\x66\x42\xe4\xb8\x1e\xe9\x4e\x46\xa9\xa0\xfc\x1a\x2f\xcd\x28\x22\x3e\xf2\x04\x7f\x73\xa3\xbb\xa3\x59\xdf\x6e\x8f\x72\x77\x64\x66\x3b\x20\x67\xea\x17\x75\x9d\xff\x13\x15\xfb\x4f\x9a\x6b\x59\x51\x58\xe6\x17\xd8\xff\x21\x69\x2f\xb9\xe3\xc2\xf6\x24\xbc\x5f\xde\xd5\xce\xe2\x42\x6b\xb6\xa3\xa1\xf5\x8a\xda\x76\x25\x3e\x66\xe1\x64\x1e\xbf\x18\x25\xc7\xcf\xf5\x60\x78\x7c\xb8\x7b\xb8\x02\xc7\xe0\xf3\x11\xb7\x58\xab\x04\x88\x13\xad\xcd\xfe\xe5\x3c\x29\x67\x62\x2d\x26\x21\x2d\x84\x50\x6f\x06\xec\x06\x21\x64\x6e\x04\x83\x55\x10\x21\x85\x4f\xb8\x44\x97\x52\xda\xd2\x38\x36\xc0\x68\x8a\xbb\x41\x9b\x57\x10\x94\x73\xbe\x16\xb3\x9c\xb2\x57\xad\xb9\x3c\x1d\x7e\x18\x8d\x68\x69\x4e\xa3\xb5\x58\xce\xb4\x46\x69\x9b\x51\xa6\x3e\x46\x8a\x7a\xe3\xee\x34\x2e\xc9\xd3\xa4\x94\x72\x74\x28\x0c\x32\xca\x12\xf1\xbc\xd5\x48\x62\xce\xef\x94\xc4\xf9\xc3\xaf\xb0\xca\xac\xa5\xa7\x64\x28\x78\xb8\xbd\xf6\x71\x94\x9e\xe6\x11\x9d\x1b\xbc\x31\x69\xdd\xbb\x8b\x80\x0c\x16\x4c\x1a\x0c\x8a\xe7\x58\xef\xa5\x78\x75\xbc\xb5\xfc\xfa\xf9\xc7\xaa\x79\xaf\xe1\x6e\xeb\xfa\x17\x35\x55\xff\x4f\xcd\xe4\x53\x6b\xb7\x5a\xb7\x2c\x01\xd7\x06\x5e\x0f\xd5\x1a\xb9\x8b\x5a\x9f\x7c\x7d\xf6\x1c\xf6\xf0\x04\xcd\x23\x54\x6f\xcf\xfc\xee\xb5\xf5\x2d\x5f\xf5\x53\x61\xd4\x7a\x2f\x90\xb9\xae\x5f\x17\xb5\x61\x84\x82\x6a\xb1\xb9\x37\x6c\x1d\xe6\x38\x57\x13\xea\x6c\x15\xe8\xc9\xa4\xd9\xca\x24\xc5\x37\xa4\x42\x33\xfc\x15\xc5\x8e\x60\x12\x45\xd5\x47\x15\xa8\x77\x40\xb5\x47\x7f\xdf\xb8\xdd\xc0\xf8\x62\x0c\xc5\xd3\x7e\x0a\x6f\x1b\x1e\x6e\x20\xe1\xeb\x8d\x85\x15\x56\x28\x51\x56\x94\x9e\x5c\x67\x82\xe9\x17\x03\x09\x5a\x96\x0f\xc0\xa6\x72\x05\x8f\xa4\xad\x96\x3b\x93\x8a\xdd\x3a\x4d\xa6\x91\x5a\xbd\x60\x68\x47\x6d\xc5\x62\xa5\x21\x70\xb2\x6c\x5d\xc5\x27\xed\xed\x16\xd6\xb6\xc0\x2a\x52\x30\x82\x4f\x9f\x60\x9b\x3f\x85\x17\x36\xf8\xb9\xd8\xba\xe8\x44\x68\xe5\x3a\x79\xda\x7a\x02\xf8\x9f\x50\xb9\x26\xc9\xb0\xbb\xeb\x55\x50\xf5\x71\x30\xa4\x6a\x79\x74\xfa\x31\x69\xba\xed\xfb\xca\xaf\x54\x34\xa9\xe4\xda\x0f\xff\x0a\x00\x00\xff\xff\x55\x81\xbe\x65\x0c\x0e\x00\x00")

func static_bleve_mapping_js_mapping_index_mapping_js_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_js_mapping_index_mapping_js,
		"static-bleve-mapping/js/mapping/index-mapping.js",
	)
}

func static_bleve_mapping_js_mapping_index_mapping_js() (*asset, error) {
	bytes, err := static_bleve_mapping_js_mapping_index_mapping_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/js/mapping/index-mapping.js", size: 3596, mode: os.FileMode(420), modTime: time.Unix(1453328745, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_js_mapping_type_mapping_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x59\x6d\x6f\x1b\xb9\x11\xfe\x5c\xff\x0a\x66\x11\x9c\x24\x58\xde\x4b\xbf\x4a\x0d\x0a\x5f\xe2\x00\x2e\xd0\x5e\x90\x4b\xf3\x45\x30\x04\x6a\x97\xb2\xb7\xda\x17\x61\x5f\x7c\x51\xef\xfc\xdf\x3b\xc3\x77\x72\x49\x69\x5d\x20\x8b\x00\x59\xef\x0c\x87\xc3\xe1\xcc\xf3\x0c\xa9\xfd\x50\x67\x7d\xd1\xd4\xa4\xa8\x8b\xfe\x97\x92\x3d\xb3\xaf\xa7\x23\xfb\x27\x3d\x1e\x8b\xfa\xf1\x43\x53\xf7\x6d\x53\x96\xac\x9d\xbf\xed\xb2\xe6\xc8\x96\xa4\x37\xd2\xfb\x7a\x49\x9a\x23\x0e\xee\x16\xe4\x8f\x2b\x02\x8f\xfc\x93\xbc\xd7\x6f\x7f\xfe\x49\xfe\x78\x59\x5f\x71\xe9\x33\x6d\x49\xce\xf6\x74\x28\xfb\x4f\x05\x2b\x73\x9c\xc9\xa8\x6e\x12\x5f\x96\x3c\xe0\xf0\xa4\x67\xdf\xfb\x64\x1d\xb4\x70\x5b\xd3\xf2\xf4\x5f\xd6\xc6\xac\x28\xb9\xb4\x14\xb1\xf2\x5b\xdf\xb4\xe8\x48\xdf\x0e\x4c\x68\x14\x7b\x32\x0f\x1a\xe4\xaa\x60\xed\xcd\x7b\x32\xd4\x20\x28\x6a\x96\xab\xc5\xe3\x13\x32\x7b\xce\x90\x98\xee\x25\xe8\xd6\x3d\x4c\xf0\x7d\x9a\x5b\x5c\x75\xa2\x5b\xca\xec\x39\x43\xe7\xdd\xca\xca\x21\x67\x5f\x59\x5b\x7d\x63\x19\x2c\xa3\x9b\xea\xa3\x3f\x6e\xb2\xc3\x81\x09\x27\x4f\x31\x61\x29\xf7\xf5\x6d\x59\xbe\x6a\x11\x7c\xc4\xeb\xdc\x57\x93\x4c\x30\x7b\xce\xe5\x8f\xb4\x67\x9f\x9a\xb6\xa2\x3d\xd8\xaa\x87\xb2\xbc\xe0\xb0\xd1\x9f\xe8\xae\x33\xc1\x45\x93\x11\x57\x25\x42\xdc\xd5\x74\x57\xb2\xfc\x62\x68\x5d\xf5\xcb\x8e\x8e\xcc\x5f\x32\x78\xde\xcd\x8f\xa7\x9a\x56\x45\x36\xd5\x4d\xa9\x3e\xd9\x4d\x63\xfe\x92\x41\xe5\x26\xff\xaf\x12\x42\x4c\xf6\x1d\xe2\x32\x80\xf1\x33\x6b\xfb\x4f\x6d\x53\x59\x10\x3d\x77\x00\x79\x21\x86\x0a\xb0\x4e\xf7\x0a\x48\xd1\xc6\x66\x86\x38\x3a\x5b\x92\x59\x3d\x54\x3b\xd6\xe2\x5b\x0e\x3b\xd9\x17\x15\xc3\xf7\x5d\xd3\x94\x8c\xd6\xfc\x73\xd1\xf1\xb8\xcd\x1e\x2c\xe0\x3e\x14\x75\x7e\xdb\xf7\xbc\xf8\xcc\x4a\x13\x3e\x47\xb2\xb2\x3e\xe1\x33\x3b\xb6\xe0\x40\xdb\x9f\x66\x2b\x9e\xa4\x4b\x57\x0a\xcb\x65\x61\x09\xae\x26\x2c\xa1\x12\xca\xc3\xd2\x0e\xe1\x34\x2c\x2a\x10\xd2\x62\x22\x5e\x76\xdb\x1e\x00\x63\xfb\x2c\x10\xe3\xbc\x66\x51\x6f\x69\x59\x86\x75\x30\x9a\xdb\x3d\x2f\x8c\x91\xc2\x8b\x79\x4d\xe4\xc6\x8e\x83\x16\x0f\x0b\x13\x89\x1c\x99\x57\xa4\x4f\x44\x28\x32\x6d\xeb\x85\xcf\x38\x26\x52\x4e\x6e\xb4\xde\xe4\xcd\x4c\x7a\x89\xe9\x33\x7b\x80\x3d\x1f\x8b\x74\x7a\xfc\xfc\x33\xb9\xf9\xff\x1e\x27\x5d\xad\x84\x57\xaf\x6b\x47\x81\xe5\x45\x0f\x5f\x35\xf0\xd9\xb2\x63\x73\x1c\x8e\x71\xc9\xd7\xe6\xf1\xb1\x44\x32\x56\xfd\xce\xbc\xd9\xfd\xc7\x2e\x59\xcf\xcc\xdc\xfd\x1b\x4a\x17\xd5\xff\xce\xcd\x93\x15\xfe\xe5\xd4\xaa\xd4\x6e\x59\xd5\x3c\x33\xac\xd0\xcf\xb4\x65\x75\xef\xcd\xb7\x24\x5c\x2d\x30\x2d\xae\x8c\x07\xf7\x63\x53\x33\xa1\xba\xa7\x65\xc7\x16\x6b\x0c\xee\x07\x5a\x67\xac\x24\xb4\x3e\x11\x54\xec\xd2\x2b\x3d\xde\x9e\x77\xbe\x08\xf9\x44\xf3\xfc\xc3\x53\x51\xe6\x1c\xba\x6d\x87\x64\x8c\x6d\x6f\x10\xf4\xdc\x58\x2f\xbc\x1c\x6d\x59\x3f\xb4\xf5\xda\x4a\x1f\xfd\x8a\x20\xb1\x77\xc0\x01\x9f\x2d\xe6\xcd\x8a\xcc\x38\x4e\xcc\xdc\xe4\x54\x20\xb1\x82\xce\xcc\x95\x60\x25\x8c\xbf\x22\x38\xac\x46\x1d\xa4\xab\xa3\xf2\x7c\x15\xec\x13\x5d\x5d\x0e\x1a\xab\x71\xcf\xe6\x6a\x71\xfc\x58\x8d\x5b\x28\x5f\x6b\x0c\x25\xfe\x20\xbf\x39\x09\x5b\x10\x10\x13\x1c\xcb\xfb\x03\x77\x94\x05\x3a\xab\x08\x8f\x5b\x28\x64\x36\x6e\x9f\x6e\x4d\x39\xe9\x9c\x80\xed\x26\x22\x99\xee\xa0\xf3\x3f\xa9\x1c\x11\x4c\xd2\x41\x52\x42\x42\x5a\x46\x5c\x71\x3a\xd4\xdd\x53\xb1\xef\xe7\xa0\x75\x15\xca\x70\x39\xd9\x3a\x56\x74\xa6\x9d\x09\xa7\xb0\xa4\xb9\x1f\x99\xc4\x38\xb8\x52\xd3\x08\x8f\xfc\xd1\x5a\x2c\xdd\x8b\x16\x43\x15\x2b\x06\x6b\x02\x61\x02\x80\xc5\xc1\x5b\x40\x18\x0d\xb2\x53\x0a\x43\xd2\xc3\x2a\xdc\x1f\x79\x09\x23\xd8\xc2\xd7\x95\x3d\x88\xab\x2b\xf6\x75\x45\x36\x0f\xcb\x50\x08\xb8\x24\x94\x5c\xd5\xab\x92\x4b\x59\x5b\x92\x2a\x9c\x5e\x4a\x41\x27\x58\x75\x36\xc1\xaa\x57\x27\x98\x86\xdf\x33\x04\x81\x3b\x4a\xa5\x8e\xe1\x42\x50\x4a\xf9\xae\x3e\x58\xa5\xd5\xb4\x64\xae\xd4\xa1\xac\xc5\x30\x3f\x8d\x60\xe4\x26\xd9\x26\xe4\x5a\xa8\x5d\x93\x64\x7b\xf7\xe5\x4b\xf2\xe0\xb8\x79\x46\xf9\xf3\x97\xbb\x6f\x5c\x1b\x65\xf8\xf5\x21\x98\x88\xdc\x41\x13\x1b\xd3\xe0\x06\x43\x17\xe1\x35\x87\x9e\x46\xa4\xd6\x1c\xfc\x38\x3d\xd3\xb2\x30\x5d\xff\x0f\x0b\xa1\x52\xf8\x86\xd3\x51\x40\x54\xb0\xcb\x15\x55\x3c\x5c\x7c\xc5\x8e\xfe\xe0\xdb\x50\x12\xc7\x4e\x48\x49\x4c\x28\xd6\xe5\x28\x8b\x20\xe0\xa7\x05\xf9\xe9\x27\xa1\xb3\x1e\x0d\x7f\x71\xbe\xbc\x10\x06\xec\x0e\xf5\xa0\xd9\x1d\xea\x34\x1d\x0d\xd2\x5b\x2b\xb7\x39\x98\x02\xee\x5c\x2f\x31\x54\x7b\xc3\x1d\x7b\x05\x14\x4e\xdb\x83\x9c\x95\xac\x67\xd1\x6c\x5e\x4f\x54\xf6\x97\xe2\x3b\xdf\x1c\x30\xb6\xd8\x00\x34\xfb\xb9\x9d\xd3\x0b\x44\xd1\x99\x4a\xc8\x59\xa0\xca\xb4\xea\x5c\x74\x53\xf7\xf5\x73\x73\x60\x44\x25\x7d\x26\xc2\x4f\xf9\x25\x58\x06\xcc\xbb\xa3\xd9\x21\x0d\x39\x62\xbc\xd7\x26\xcf\x94\x52\x0c\x6b\xb2\x27\x5a\x3f\xb2\xfc\xb3\xec\x7d\xec\x6a\xe2\x70\xeb\x53\x19\xff\x98\x6e\x11\xf8\x79\x94\x70\xbd\xf2\x9b\xea\x9f\xf8\x77\x7f\xe5\x42\x07\x87\x11\x35\x40\xe9\xaf\xfd\xee\xdf\x71\xd0\xdc\xe1\x19\x83\x34\xcb\xd8\x11\x1a\x0c\xed\x6a\xd7\x0c\x6d\xc6\x6e\xf9\xe7\x25\x44\xa6\xeb\xed\x77\xde\x1f\xf9\x0e\x5d\xe6\x65\x7c\x44\x42\x8a\xee\xd7\xcf\xec\x51\xf1\x0b\x2f\xa0\xd3\xa1\xe0\xad\xed\x52\xfa\xb6\x6a\x60\xbb\xa0\x46\x07\xcf\x8a\x38\xfd\x77\xbd\xbc\x7b\x34\x9e\xa7\x6f\x61\x7b\x2b\x68\xda\x53\x4c\xca\x39\x9e\xe6\xe8\x0d\x3f\x8e\x2e\x3c\x20\x91\x2e\xce\xcd\xec\x02\xbf\xae\x13\xbc\x2f\xa5\x45\xcd\xda\x84\xa7\xa5\x9a\x27\x12\x6f\x7d\xf5\x6a\x93\x22\x6d\xdb\x25\xf0\x39\xbc\xda\xd1\xd1\xb5\x58\x80\xcf\xef\xd6\xf0\xdf\xdf\x08\x68\xa6\x25\xab\x1f\xfb\x27\xf8\xfb\xfa\x3a\x14\x6e\x50\xd9\x14\x00\x1e\xe0\xcb\xc8\xa4\xde\x5a\x30\xd3\x1d\xcb\x22\x63\xf3\x62\x49\xfe\xba\x88\xc3\x89\xe5\xba\x0c\x81\x95\xa9\x1d\xc7\xc3\x95\xc3\xf6\xa1\xa8\xb9\x04\x64\x1d\x8b\xad\x7b\x8c\xcb\x56\xec\x0b\x91\xaf\x8d\x7d\x1d\xe2\x9d\x25\x17\xe3\xd8\xc3\x12\x10\x75\xc5\x60\xb2\x87\xc3\x1a\xa1\xa4\x66\xb4\xbd\xe1\x56\x6f\xf6\x6d\xc1\xea\xbc\x3c\x11\xcb\x2c\xb6\xd9\x14\xce\x0b\xed\x90\xc1\xfc\x8c\xf4\x0d\xa1\x68\xe5\xdf\xf7\x46\xdd\x55\x49\x09\xf9\xe5\x44\x12\xb4\x9b\x00\x3b\xd4\x62\x03\xc8\xef\x45\xff\x04\xed\x1b\x39\xb0\x13\x8e\x6f\xd9\xb1\x65\x1d\x88\x3a\xd2\x3f\x31\xd5\x92\xf1\x58\xe8\xee\xe7\x4a\xe7\xc9\xc4\x6b\x20\x15\x33\xde\x83\x9a\x33\xf5\x46\x11\xa2\xa5\x0a\x9f\xff\xf1\xdb\xaf\xff\x4a\x8f\xb4\xed\xd8\x9c\xbf\xc2\x0a\x40\x50\xec\x4f\x8e\x49\x19\x47\x9d\x87\xdc\x43\xe0\x84\xc0\xb4\xde\xd4\xd8\x06\x18\xa5\x0d\xbe\xdb\xcc\xac\x7b\xbb\xe3\xd0\x3d\xe9\x76\x7e\xdc\x03\xf2\x0a\x03\x5b\x4e\x9f\xbc\x1e\x81\xb3\x94\x6e\x12\x04\x3e\x9b\x50\xb0\x1c\x70\xee\x48\x37\xaf\x80\xb2\x3f\x45\x1a\xfa\x4c\x84\xdd\xf3\xd0\xbb\xaa\x4b\xbb\x06\x54\xf2\x02\xea\x89\x9e\x7e\x6d\x73\xd6\x7e\x68\x2a\x88\x2d\xef\x29\xd6\x4e\xe9\x78\x37\x1c\x7a\x8f\xc3\x83\xe7\x74\x49\x76\xb6\xeb\x0a\x83\x68\x2a\x07\x6c\x1b\x1c\x81\xbf\x72\xbc\x5b\x90\x1b\x32\xdf\x85\x04\xeb\x20\xfc\x14\xdd\x5d\x75\xec\x4f\x7e\xc3\xab\xf7\xfa\x80\x1b\xed\x09\x2d\x1f\x3c\xa8\x7e\xf1\x7d\x34\x15\xef\x4f\xec\xc7\x34\x9c\x40\x2a\x77\x6d\x91\x38\x98\x98\x8b\x22\x79\x02\xc5\x55\x6e\xec\xec\xd2\x6b\x50\xd4\x87\x4b\x51\x63\xe4\xb7\x82\x05\x1b\xcb\xca\xb2\x6e\x34\x37\xca\x90\xd7\xd9\x60\x7a\xa9\x38\x56\xb6\xe5\x10\xe4\x42\xe1\x03\xfd\x57\x0d\xe6\xeb\xac\x53\x8b\x29\x6a\x40\x15\xf8\xa7\x07\xe7\x52\x32\xee\x0b\x2d\x3a\xc0\xf5\xc8\xd5\xc7\xbb\x56\x19\x30\x5c\x91\xd4\x05\x5a\x18\xf7\xa8\xdc\xb4\xd3\x29\xc0\x88\x71\xd3\x30\x52\x97\xc5\x2b\xda\x97\xa9\xad\xef\x48\xad\x1a\xd5\xf8\x6c\x6c\xab\x52\x85\x1a\x77\xcb\x43\x14\x9f\xbd\xf1\xd1\x89\x77\x86\xed\x42\xdc\x0b\xc1\x0e\x87\x5a\x07\xd5\xac\x41\x5c\x78\x05\xb1\xc4\xc7\x2a\x93\x2e\x49\x10\x1a\xcf\xa3\x8a\xeb\xc3\x14\x08\xb2\x8c\x87\x2f\x5d\x7d\x25\x5d\x6e\xe2\x65\x1d\x65\x52\x7a\x86\x11\x39\x69\x86\x88\x16\x8d\xc4\xb9\xf6\x47\x13\xa9\xdb\x3e\xe8\xbe\xc1\xe2\x50\x97\x2f\xf5\xaf\xd9\x56\xe4\xba\xac\x1d\x76\xf3\x38\x93\x6a\xab\x23\x1e\x2d\x2c\x40\xea\xe2\x0c\xaa\x34\x78\xd9\x86\x5a\xa6\x8d\xc3\x63\xfc\xb7\xee\x07\x33\x6e\x02\x4f\xfa\x44\xf7\x59\xa3\x10\xbf\x4d\xec\x2c\xe2\x1b\xa5\x87\xcb\x34\xef\x49\xb1\x0e\xf4\x8a\x96\xb3\xe6\x67\x83\x2f\x2c\x1b\xda\xae\x78\x66\x90\x2d\xa2\x0b\x26\xb0\x33\xb0\xbd\xd6\x26\xcf\xb6\x33\xa8\x76\xb6\x2f\xbe\xa7\x2e\x7d\x88\xa8\x57\xfe\x81\x49\x1e\x12\x2b\xde\x82\x27\xc0\x5b\x2c\xeb\x93\x51\xc1\x3a\xe4\x56\xc5\x6e\x05\xa4\xad\x83\xb0\x25\x36\x34\xc1\x93\xe8\x01\xcf\x71\xed\x6d\x3f\x7f\x27\x44\xdb\xd1\x0c\x7e\xc0\x37\x87\x08\xe2\x42\xc0\xe1\x30\xe4\x9f\x53\xac\x00\xda\x0f\x9a\xd1\x09\x87\x7f\x4c\x41\x30\xd5\x72\x38\xdb\xe2\x45\x3f\x53\x55\x2c\x4a\x5d\x94\x97\x02\xd9\x84\x1f\xd4\x8b\xdd\xd0\x33\x41\x53\x54\x99\xc8\x9b\x6c\xc0\x43\x93\xce\x55\xec\x09\xa1\x00\x0d\xa4\xa1\x24\x0d\xf2\xfe\x38\xc5\xfc\x02\xb0\xac\x88\xc2\xb3\x85\x1a\x94\xc2\x8c\x7f\x96\x1a\xa3\x94\x38\x22\x75\xc1\x87\xd6\x2d\xbb\xba\x16\x86\x22\x1b\xf3\x72\x48\x39\x09\xa6\x86\x4c\x0b\x3e\x62\x93\x58\x43\xb0\x18\xff\x12\xc9\x00\xe3\x90\x26\xe8\x37\xfa\x92\x1a\xb7\x03\x00\xb1\xe8\x08\x2d\xcb\xe6\xf7\xd0\x7d\x92\xd3\x09\xbd\xb7\xc2\xbb\x71\xad\x06\x32\x15\xa7\x36\x43\xc3\x37\xe3\xea\x99\x34\xc5\xe8\x72\xdc\x7e\xf4\x85\x36\x36\x8f\xcb\xa8\x9a\xbe\xcb\xe6\x3d\x68\x5c\xcf\x78\xb1\x82\x34\x8a\xeb\x99\xfb\xee\xa0\xca\xcb\xa4\x12\x55\x2b\x4c\x2f\xf5\x46\xd1\x4e\xe8\xe2\x40\x77\x52\x37\x95\x74\xcd\x7a\x9b\x28\x73\x33\x0c\xd5\x9e\x55\xbf\x88\x42\x04\x85\x8f\x47\x52\x69\x98\xa6\xac\xa0\x60\x1e\xd8\x4c\x15\xe6\x28\x6b\x51\xd1\xf3\x1c\x3e\x67\xf8\xc7\xd1\xbb\x4c\x69\x81\x18\x68\xdc\x56\xbf\xd7\x7b\xcd\x59\xea\x80\x93\xf9\xc3\xfe\x15\x24\xda\x37\xfd\x2f\x00\x00\xff\xff\xd3\x70\x33\xa9\x76\x27\x00\x00")

func static_bleve_mapping_js_mapping_type_mapping_js_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_js_mapping_type_mapping_js,
		"static-bleve-mapping/js/mapping/type-mapping.js",
	)
}

func static_bleve_mapping_js_mapping_type_mapping_js() (*asset, error) {
	bytes, err := static_bleve_mapping_js_mapping_type_mapping_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/js/mapping/type-mapping.js", size: 10102, mode: os.FileMode(420), modTime: time.Unix(1459526892, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_analyzer_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x57\x41\x6f\xc2\x36\x14\xbe\xf3\x2b\xdc\x68\x07\x7a\x48\x69\xd7\x6b\x88\x54\x21\xed\xd6\xee\xb0\xdd\x27\x93\x18\x62\xe1\xd8\x91\xe3\xd0\x52\xc4\x7f\xdf\xb3\x1d\x12\x3b\x71\x33\xda\x32\x75\x87\x21\x15\x4c\xfc\xfc\xf9\x7b\xef\xfb\xec\x57\x92\x9c\xee\x51\xc6\x70\x5d\x2f\xa3\x35\x23\x7b\xf2\x2c\x72\xcc\xa2\x74\x36\x73\x67\x4a\xfd\x30\x2e\x08\xce\x89\x84\x39\x04\xaf\xa4\x78\xf4\x67\x15\x55\x8c\x44\xe9\xaa\xa9\x95\x28\xd1\x13\xc7\xec\xf0\x4e\x64\xb2\x28\x1e\xd3\x59\xb2\x00\xb0\x20\xe6\x5a\xe4\x87\x33\xa2\x9e\xe4\xdb\xb8\x2e\xc4\xeb\x32\x22\x52\x0a\xf9\x4c\xea\x1a\x6f\x49\x64\xe6\xcd\xab\x5d\x8c\x19\x91\x0a\x99\xf7\x38\xc7\x7c\x4b\xa4\x5e\x99\x31\x81\x77\x4e\xb0\x14\x8c\xb4\xb1\x51\x8a\x8e\x47\x17\xf3\x74\xb2\x9b\xb6\xcc\xcc\x78\x23\x64\x79\xde\x41\x8f\xa3\x16\xc1\x8c\xd3\x0e\xd7\xcd\x42\x4f\xc5\x5b\x29\x9a\xca\x09\x30\x41\x0c\xaf\x09\x43\x30\x0f\x0c\x38\x2e\xa1\x34\x2f\xf0\x9e\x2c\xcc\xf3\x41\x2c\xe5\x55\xa3\x74\x06\x39\xad\x31\xc8\x90\x2f\xa3\x3d\x25\xaf\xbf\x73\x76\xb0\x7a\x78\xe1\xed\x0b\xc2\xa1\x86\x84\x2d\x23\x03\x8f\xd4\xa1\x02\xae\x8a\xbc\xa9\x60\xb8\x4b\x38\x13\x5c\x41\x6a\x11\xa2\xb0\x93\xb2\xcb\x2b\x86\x33\x52\x08\x06\x12\x2f\xa3\x17\x43\xb8\xcf\xd8\xa9\xd2\x85\x15\xb0\xf9\xa7\xab\x02\x4b\x9c\x29\xd0\xe7\x37\xca\xe0\xa3\x0e\x14\x20\x69\xd8\x19\x8c\xd1\x5a\xb5\x60\xb3\x51\xb6\xd6\x18\xb8\x75\xd6\x5d\x06\xd0\x7f\x6d\x2c\xea\x1d\x23\x7c\xab\x0a\x94\xa0\x87\x91\x0e\x74\x0c\x1e\x53\x45\x40\xd1\x17\xc1\xb5\x20\xd4\x23\xb3\x68\xfe\x2d\x72\x29\xba\x1f\x2e\x6c\x68\x5c\x0b\xa9\xb4\xe6\x63\xc8\x56\xdd\x20\xe6\xe5\x59\x8e\xbc\x00\xc8\x92\x54\x04\xab\x1e\x5a\xab\x64\xf5\x41\x94\xa3\xe0\x86\x48\x81\x8e\x3b\xb4\x3e\xa0\x5f\x28\xcf\xc9\xdb\x80\x00\x50\xa8\x2b\xcc\xcf\x24\xb6\xec\x50\x15\x14\x6c\x86\xba\x51\x5c\x52\xde\x00\xef\x64\xa1\x03\xf5\x71\x44\x81\xed\xdb\x63\x39\x84\x05\xce\x74\xb3\x8c\x6e\xfe\xf9\x54\xd8\x7b\x80\x66\xbb\x65\x24\x49\x29\xf6\xa4\x07\x9f\x5b\xe6\xb7\xe1\x75\x13\xcc\x2d\x10\xaa\x1a\xc6\x62\x49\xb7\x85\xea\xb2\xf0\x45\x98\xb4\x52\xf0\x0c\x5d\x92\xd7\x45\xe7\x2c\x74\xac\x9c\x43\x9a\x09\x16\xd7\x65\xfc\x70\x3f\xf4\x4d\x4d\x18\xc9\xcc\xd5\x03\x62\xc3\x3d\x0a\x9e\xc8\xf3\xbe\x64\x2b\xf3\x30\x9f\x7f\x50\x33\xc7\xa4\x76\x95\x39\xea\x76\xa9\xb9\x42\xa6\x2a\xed\xdd\x44\xc1\x40\x7d\x3b\x8d\x81\x87\xde\x87\x2c\x44\xa5\xa8\xe0\xae\xb3\x33\xcf\xd1\xfd\x37\xcd\x0a\x00\x8e\xc7\xfe\xd1\xe9\x94\x2c\x2c\xc0\x50\x4e\x5b\x1c\x5f\x52\x23\xe2\x64\x91\x7f\x1d\xd6\x78\xdd\x28\x65\xd9\xb5\xc6\xf4\x4a\x3c\x57\x05\xad\x6f\xcf\xd7\xb7\x8d\x9d\xac\xdb\x5a\x71\x04\x7f\x71\x4e\x36\xb8\x61\xca\xb3\xe5\x53\x9e\x27\x0b\x8b\x31\x41\xfb\xcb\xd7\x79\xd7\xce\xcc\xb1\xfd\x53\xec\x08\xa7\xef\xfa\x5f\x82\x6e\x18\xf2\x61\xef\xb1\x4f\xb4\x37\xc7\x91\xea\x0c\x3e\xe9\xc6\xc0\x85\xd9\x2d\x0c\xc5\x5f\xe8\x42\xe3\xc1\x71\xc2\xbe\xc2\x63\xff\x75\x5b\x6b\xfb\x75\x5f\x3a\xf7\x75\x4f\xc2\xe6\x1b\x5b\xef\xeb\x1d\xd8\x90\xbe\x7e\xf7\x35\x19\xfc\x67\xdb\x6f\x90\xdd\x77\xfb\xaf\x07\x7a\xdd\x06\x6c\x44\x0a\x74\xe0\xa9\x2d\xbf\xd5\x72\xdd\x0d\xaf\xdf\x73\x1d\xf4\xff\x9b\xee\x85\x4d\xd7\xa9\xd9\x67\xba\xae\xb3\xec\x7a\x1d\xd7\x01\xbd\xa8\xdb\x2a\xdf\xbe\xca\xe7\xd4\xdf\x78\x3f\xd8\x70\x5d\x4b\xfe\x58\xc7\xb5\x43\x2d\xc3\xd4\x6f\xe2\x8d\x10\xaa\xff\x9d\xdd\x27\xa3\x4d\xeb\x7b\xf6\x03\x82\x7e\x32\x7d\x19\x32\xcc\x33\xc2\xc0\x56\xe9\x8a\x89\x9a\xf8\xbc\x07\x1b\xdd\x5c\x6b\x27\x33\xfa\xcc\x56\x1f\x40\xae\x1b\xca\xf2\xb9\xfe\xad\x3a\x38\x16\x9e\x8c\x43\x9e\x95\xa4\x25\x96\x07\x4f\xb2\x3f\xf0\xde\xc9\xbd\xd3\xc1\x7e\xfe\x1d\x00\x00\xff\xff\x79\xcf\xbe\x8c\x11\x11\x00\x00")

func static_bleve_mapping_partials_analysis_analyzer_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_analyzer_html,
		"static-bleve-mapping/partials/analysis/analyzer.html",
	)
}

func static_bleve_mapping_partials_analysis_analyzer_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_analyzer_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/analyzer.html", size: 4369, mode: os.FileMode(420), modTime: time.Unix(1453508839, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_analyzer_html_ = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x57\x4d\x6f\xe3\x2a\x14\xdd\xe7\x57\x50\xeb\x2d\xd2\x85\xeb\xf6\x75\xeb\x58\xaa\x22\xbd\x5d\xfb\x16\x33\xfb\x11\x31\x24\x46\xc1\x60\x61\x9c\x36\x8d\xf2\xdf\x87\x0f\xc7\x06\x9b\x7c\xb4\xcd\x48\x5d\x8c\xa5\x26\x04\x2e\x87\x73\xef\x3d\xdc\x5b\xa7\x88\x6c\x40\x4e\x61\x5d\xcf\xa2\x05\xc5\x1b\xfc\xcc\x11\xa4\x51\x36\x99\xb8\x2b\xa5\x9e\x8c\x0b\x0c\x11\x16\x6a\x0d\xa8\x27\x2d\x1e\xfd\x55\x49\x24\xc5\x51\x36\x6f\x6a\xc9\x4b\xf0\xc4\x20\xdd\xbe\x63\x91\x26\xc5\x63\x36\x49\x13\x05\x16\xc4\x5c\x70\xb4\x3d\x20\xea\x45\xb6\x8a\xeb\x82\xbf\xce\x22\x2c\x04\x17\xcf\xb8\xae\xe1\x0a\x47\x66\xdd\x3c\xed\x66\x48\xb1\x90\xc0\x7c\xc6\x08\xb2\x15\x16\x7a\x67\x4e\x39\x5c\x3b\xc6\x82\x53\xdc\xda\x46\x19\xd8\xed\x5c\xcc\xfd\xde\x1e\xda\x32\x33\xe3\x25\x17\xe5\xe1\x04\x3d\x8e\x5a\x04\x33\xce\x3a\x5c\xd7\x0b\xbd\x14\xaf\x04\x6f\x2a\xc7\xc0\x18\x51\xb8\xc0\x14\xa8\x75\xc5\x80\xc1\x52\x85\xe6\x45\x7d\xa6\x89\x99\x1f\xd8\x12\x56\x35\x52\x7b\x80\x48\x0d\x55\x1a\xd0\x2c\xda\x10\xfc\xfa\x3f\xa3\x5b\x9b\x0f\xcf\xbc\x7d\x94\xb9\x8a\x21\xa6\xb3\xc8\xc0\x03\xb9\xad\x14\x57\x89\xdf\x64\xd0\xdc\x25\x9c\x73\x26\x95\x6b\x11\x20\xea\x24\x69\xb7\x57\x14\xe6\xb8\xe0\x54\xa5\x78\x16\xbd\x18\xc2\xbd\xc7\x4e\x94\x2e\x8c\x80\xf5\x3f\x9b\x17\x50\xc0\x5c\xaa\xfc\xfc\x47\xa8\xfa\xaa\x03\x01\x48\x1b\x7a\x00\xa3\xa4\x96\x2d\xd8\x64\xe4\xad\x15\x06\x6c\x95\x75\x97\x2b\xe8\x5f\x4b\x8b\x7a\x47\x31\x5b\xc9\x02\xa4\xe0\x61\x94\x07\x32\x06\x8f\x89\xc4\x2a\xa3\x2f\x9c\xe9\x84\x10\x8f\x4c\xd2\xfc\x29\x72\x19\xb8\x1f\x6e\x6c\x48\x5c\x73\x21\x75\xce\xc7\x90\x6d\x76\x83\x98\x97\x7b\x39\xd2\x82\x42\x16\xb8\xc2\x50\xf6\xd0\x3a\x4b\x36\x3f\x80\x30\x10\x3c\x10\x48\x95\xc7\x35\x58\x6c\xc1\x3f\x84\x21\xfc\x36\x20\xa0\x28\xd4\x15\x64\x07\x12\x2b\xba\xad\x0a\xa2\x64\x06\xba\x51\x5c\x12\xd6\x28\xde\x69\xa2\x0d\xf5\x75\x04\x81\xe3\xdb\x6b\x39\x84\x55\x9c\xc9\x72\x16\xdd\x9c\xbf\x15\xb6\x0e\x90\x7c\x3d\x8b\x04\x2e\xf9\x06\xf7\xe0\x53\xcb\xfc\x36\xbc\xef\x04\x73\x0b\x04\xaa\x86\xd2\x58\x90\x55\x21\x3b\x2f\xfc\x24\x04\xa5\xe4\x4e\xb4\x15\xee\x02\x57\x2e\x2b\x2f\x59\xb8\x9c\x38\xb7\x33\xe7\x34\xae\xcb\xf8\xe1\x3e\x90\x2f\x4c\x71\x6e\xaa\x8e\xca\xb3\x2a\xa1\x4a\x0e\x08\xf5\xd1\x9a\x9b\x49\x34\x3d\x12\x2e\x4f\xa1\x76\x9f\xb9\xe7\x76\xb3\xa9\x1f\x47\xf6\x85\x0a\xd1\x11\x53\x5d\x9e\xc6\xe0\x43\xf1\x1b\x6f\x78\x25\x09\x67\xae\xb8\x73\x4f\xd4\xfd\x2f\xcd\x4d\x41\xec\x76\xfd\xd4\x7e\x9f\x26\x16\x60\x14\xa5\xc4\x86\x69\x98\x69\x53\x0f\xcf\x04\xfd\xdf\x71\xcc\x17\x8d\x94\x96\x65\xab\x51\x2f\xe4\x53\x59\x90\xfa\xf6\x50\xc9\xad\xed\x99\x28\x2e\x24\x03\xea\x2f\x46\x78\x09\x1b\x2a\x3d\x8d\x3e\x21\x94\x26\x16\xe5\x0c\xfd\xc1\xc4\xa7\xcb\x7d\xd7\xee\xcc\xb5\xfe\xc9\xd7\x98\x91\x77\xfd\x2f\x43\x37\x0c\x95\xff\x5e\x88\x1f\x68\x7f\x8e\x6c\xe5\x01\xfc\xa4\x64\x03\x05\xb5\xdb\x18\xb2\xbf\x50\xa6\x46\xa2\x63\x87\xfd\x78\x8f\xc5\xd9\x1d\xad\xb5\xd9\xfd\xe8\xa4\xd9\xcd\x84\x95\x39\x56\xe5\xe7\x3b\xb4\x21\x7d\xfd\xee\x6c\x3c\xf8\xb6\xed\x39\xc8\xee\xab\xfd\xd9\x03\xbd\x6e\x83\x36\x49\x0a\x74\xe8\x53\x47\x7e\xa9\x25\xbb\x07\x5e\xbf\x27\x3b\xe8\x7f\x9b\xb2\x1f\xd9\x50\x53\x76\xc2\xf5\xb1\xae\xec\x6c\xbc\x6e\x47\x76\x80\x2f\xec\xc6\xd2\x57\xb0\xf4\x99\xf5\x45\xef\x1b\x34\x64\x57\x9d\xdf\xab\x23\xdb\xa1\xce\xd3\xa9\x77\xea\x25\xe7\xb2\x7f\x4f\xef\x3d\xd4\x0a\xf7\x05\x7e\x84\xb3\xef\x61\x1f\x9b\x1c\xb2\x1c\x53\xa5\xbd\x6c\x4e\x79\x8d\x7d\x57\x06\x07\xdd\x5c\xeb\x24\x33\xfa\xc8\x51\x47\x20\x17\x0d\xa1\x68\xaa\xdf\x75\x07\x77\xc7\xcb\xed\x90\x67\x25\x48\x09\xc5\xd6\xcb\xe2\x0f\xb8\x71\x7c\xef\xf2\x60\xbf\x7f\x07\x00\x00\xff\xff\xdb\x59\xaa\x48\x51\x11\x00\x00")

func static_bleve_mapping_partials_analysis_analyzer_html__bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_analyzer_html_,
		"static-bleve-mapping/partials/analysis/analyzer.html~",
	)
}

func static_bleve_mapping_partials_analysis_analyzer_html_() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_analyzer_html__bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/analyzer.html~", size: 4433, mode: os.FileMode(420), modTime: time.Unix(1453267781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_analyzers_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x54\x4d\x8f\xda\x30\x10\xbd\xf3\x2b\x5c\x9f\x16\x69\x03\x6a\xcf\x49\xa4\x4a\xed\x71\xb7\xa7\xfe\x80\x21\x1e\x12\x6b\xbd\xb6\x65\x4f\x80\x74\xb5\xff\xbd\xe3\x84\x7c\x40\x51\x51\xab\xaa\x08\xc1\xb3\xe3\x79\xf3\xfc\x66\x26\x39\xc1\xce\xa0\xa8\x0c\xc4\x58\xc8\x61\xd1\xff\x66\x91\x82\xf6\xa8\x64\xb9\x12\x22\xa7\x06\x41\x25\x94\x70\x18\x40\xbf\x5d\x3e\xc3\x2b\xe6\x5b\x06\x8b\xbd\x79\xcd\xa8\x3f\x9d\x76\xce\x0c\x39\xed\x9c\xea\x26\x2e\x61\xeb\x2c\xa0\x47\xa0\x42\x3e\x80\x65\xb6\x47\x38\x80\x59\x0b\x6d\xf9\xab\xf0\xf4\x04\xde\x6b\x5b\x6f\xf8\x99\xe9\xa2\x8e\x03\xf8\x81\x21\xca\x39\xa7\x2a\x73\x48\x4c\x95\xd1\xd5\x4b\x21\x51\x69\xfa\x7c\x3e\x76\x26\x15\x89\xf5\x51\x50\x68\x71\x2d\xcb\xb7\xb7\x7e\xf7\xfd\x3d\xdf\x42\x92\xab\x96\x54\x67\xc8\x0b\xa5\x0f\xa3\x35\x3b\xb2\x59\x1d\x5c\xeb\xc5\x84\xb2\x53\x94\x22\x38\x83\x85\xec\xd7\x72\x8e\xe4\xd8\x5d\x4b\xe4\x6c\x12\xa5\xf7\x85\xfc\x70\xd0\x78\xfc\x66\x4d\xf7\xe4\x14\x18\xb9\x38\x38\x7e\xee\xab\x5f\x4b\x41\x9d\xe7\x6c\x03\xf5\x2d\x92\x59\x6c\x2f\x53\xe1\x1e\x5a\x43\x3d\x3e\xc5\x0b\x7d\xac\x30\x7a\xb0\x63\x44\x6d\x3a\xdf\xe8\x8a\x05\x4f\x28\x4b\x3a\x6e\x25\x81\xa0\x21\x6b\xb4\x52\x68\xb9\x65\xd8\x50\xc9\x16\x26\xb2\x52\x7c\xe5\x90\xa5\x09\xdb\x41\xea\x3f\x32\x46\xa1\x41\xc2\x4b\x6b\xfe\xb7\x29\x14\x20\x36\x7f\xe8\xca\x97\x5e\xf7\x6f\x7d\xc9\xb7\xdc\x6b\x53\x13\x4e\x0d\x39\xce\xcf\x34\x2a\xb1\x71\xc7\x42\x7e\x27\x6d\xe2\xe6\x05\xbb\xf8\x70\x67\x46\xd6\x1b\x83\xb6\xa6\x46\xe4\xe2\xe3\x72\x5e\x44\xe5\x4c\x12\x57\xc8\x4f\xb2\x7c\x76\x16\x7f\xcd\xc9\xff\xe3\xa4\xe6\xb4\x77\x8e\x6e\xcc\xff\x25\xcf\xea\x2f\x6b\x3c\x57\xd8\xe2\x71\x2a\xef\xdd\xca\x5e\xd5\x35\xbe\x5e\x94\xd7\xb7\xc6\x64\x41\xd7\x0d\xf1\x05\xf1\x28\x46\xde\x6b\xef\x6f\x5e\x7c\xb8\x2e\x83\xf4\x2a\x2c\x57\x3f\x03\x00\x00\xff\xff\xd9\xa5\x25\x52\x26\x05\x00\x00")

func static_bleve_mapping_partials_analysis_analyzers_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_analyzers_html,
		"static-bleve-mapping/partials/analysis/analyzers.html",
	)
}

func static_bleve_mapping_partials_analysis_analyzers_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_analyzers_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/analyzers.html", size: 1318, mode: os.FileMode(420), modTime: time.Unix(1453267781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_charfilter_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x54\xc1\x6e\xdb\x30\x0c\xbd\xe7\x2b\x34\x9d\xba\x83\x67\x6c\xbd\xda\xbe\x04\xd8\xad\xdd\x61\xfb\x01\x45\x62\x62\xa1\xb4\x65\x48\x72\xba\x20\xc8\xbf\x8f\x92\x9c\xc4\x56\xdd\x01\x1d\x66\xa0\xae\x42\xd2\x8f\x8f\x8f\x14\x2b\xa5\x8f\x4c\xa2\x70\xae\xe6\x3b\x84\x23\x3c\x19\x25\x90\x37\x9b\xcd\xdc\xd3\x05\x63\xd1\x82\x50\x60\xc9\xc7\xe8\xa9\xda\xc7\xa5\xd7\x6b\x8f\xc0\x9b\xed\xe8\xbc\xe9\xd8\xb6\x15\x96\x7d\xd7\xe8\xc1\x56\x65\xfb\xd8\x6c\xaa\x92\xf0\x56\x61\x77\x46\x9d\xae\xa0\xc1\xd9\x1f\x0a\xd7\x9a\xd7\x9a\x83\xb5\xc6\x3e\x81\x73\xe2\x00\x3c\xfa\xe3\x33\x7d\x2c\x10\xac\x67\xf1\x5d\x28\xd1\x1f\xc0\x86\x2f\x25\x1a\xf1\x32\x0b\xb6\x06\x61\x8a\xe5\x0d\x3b\x9f\xe7\x98\x97\x4b\x4a\x3a\x31\x8b\xe7\xbd\xb1\xdd\x35\x43\x38\xf3\x09\x21\x9e\x9b\x1b\xee\xbc\x8a\xe0\x2a\x0e\xd6\x8c\xc3\x2c\x20\x06\xa1\xd8\x01\x32\xf2\xd7\xdc\xf7\xa2\x23\x75\x9e\xe9\x5d\x95\xd1\x9e\xc5\xea\x7e\x18\x7d\xa8\x40\x69\x27\xa8\x13\xaa\xe6\x47\x0d\xaf\x3f\x7a\x3c\xa5\x96\x2c\xc2\xa7\x87\xc2\x49\x43\xc0\x9a\x47\x78\xe6\x4f\x03\x71\xf5\xf0\xdb\xaf\x86\xcf\x09\x4b\xd3\x7b\x2a\x8d\x33\xad\xae\xec\xd8\x80\x42\x42\x6b\x90\xba\x5c\xf3\xe7\x48\xf8\x5e\xf1\x4c\xa5\x7f\x52\x40\xd2\x44\xec\xe3\x40\x04\x96\xbc\xf9\x45\xef\x75\x29\x66\xc8\xd2\x60\xe1\xba\xe2\xeb\x37\x16\xf5\x59\x4f\xe2\x00\x41\x7e\x58\xbb\x38\x2d\x6d\x18\x9c\xc4\x2d\x0d\x6b\x60\xb5\x8d\xd6\x87\xcf\xef\x7e\x36\x69\x7e\xaf\xe8\x4b\x2c\x69\x35\x7c\x4d\xf3\xd5\xc0\xd0\x87\x5c\xa3\x37\x81\x95\x19\xbc\x36\x7d\x20\x61\x61\x00\xe1\x33\xee\x24\x13\x5b\x16\xe3\x78\x73\x3e\x2f\x4c\x97\x4b\x55\x26\x98\x4c\xc7\x32\x09\x99\x5b\x63\xdf\xb3\x9f\xcb\x31\xb8\xdd\xd8\x5c\x91\xe0\xd1\xbd\xc4\x51\x01\x73\x56\x26\x19\x06\xe1\x5b\x5e\x4e\x17\xbe\x0c\x96\xbf\x6d\x87\xbd\x31\xfe\xbe\x74\x76\xa3\xf7\xa9\x7c\xbd\xcf\x9b\x7c\x5b\x63\xbe\x67\xf4\x57\x28\xd8\x8b\x11\xb3\x9b\x10\x57\x84\x96\x2f\xc4\x55\xf4\x12\x90\xba\xdc\x6c\xd1\x38\x1a\xc5\x84\xbd\x9a\xe8\xd3\xff\xca\x14\x4f\x1f\x49\xf5\x0e\xe4\x6e\xd4\xa8\x1e\xc2\xad\xcd\xa6\x34\x6d\x80\x04\xf9\x86\xe7\x60\x75\x27\xec\x89\x0d\x23\x62\x61\xf5\xa1\xa5\x9d\xf8\x53\x1c\x67\xb5\xdf\xfa\x90\xfe\xff\x09\x00\x00\xff\xff\x05\x8e\x0c\x15\x1e\x06\x00\x00")

func static_bleve_mapping_partials_analysis_charfilter_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_charfilter_html,
		"static-bleve-mapping/partials/analysis/charfilter.html",
	)
}

func static_bleve_mapping_partials_analysis_charfilter_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_charfilter_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/charfilter.html", size: 1566, mode: os.FileMode(420), modTime: time.Unix(1453267781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_charfilters_generic_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func static_bleve_mapping_partials_analysis_charfilters_generic_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_charfilters_generic_html,
		"static-bleve-mapping/partials/analysis/charfilters/generic.html",
	)
}

func static_bleve_mapping_partials_analysis_charfilters_generic_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_charfilters_generic_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/charfilters/generic.html", size: 0, mode: os.FileMode(420), modTime: time.Unix(1453267781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_charfilters_regexp_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x90\x41\x6e\x86\x20\x14\x84\xf7\x9e\x82\xb0\xff\xfb\x5f\x00\xdc\x75\xd9\x34\xe9\x0d\x10\x9e\x4a\xf2\xe4\x91\x07\x5a\xbd\x7d\x29\x9a\xb4\x26\xa6\x9b\xc6\xd9\x40\xc2\x30\x93\xf9\x44\x91\x72\x7e\x11\x16\x4d\x4a\x5a\xf6\xc4\xd3\x63\x60\x9a\xa3\x6c\x1b\x71\x48\xa1\xe9\x00\x45\x79\xd3\xd2\x8e\x86\x7b\x8f\x19\xf8\x03\x06\x58\x8b\xad\x9c\x33\x1a\x16\xaf\x6b\x64\x48\xc9\x53\x50\xcf\xfa\xe1\x27\xa0\x86\xf8\x10\xe7\x2c\xc2\xf0\x70\x3e\x99\x0e\xc1\x69\xb9\x78\xf8\x7c\x0f\xb8\xbd\x91\x33\x28\x4f\xf6\x43\xc5\x3e\x91\x03\xfc\x5d\xfc\xc2\x7b\xf3\x95\x3f\x6f\x11\xb4\xcc\xb0\x66\x79\x9a\x64\x29\x64\xa6\xeb\x0e\xef\x2e\x66\x89\x88\xc6\xc2\x48\xe8\xa0\xac\x3e\x60\xa8\x67\x41\xd5\x36\xcd\xbf\xa8\xd5\xe0\x6f\x6c\xf5\x32\x41\xc8\xf7\xf3\xda\x3b\xef\x02\xb6\xa7\xff\x41\xec\x2b\x00\x00\xff\xff\x9a\x37\xb9\x1d\x66\x02\x00\x00")

func static_bleve_mapping_partials_analysis_charfilters_regexp_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_charfilters_regexp_html,
		"static-bleve-mapping/partials/analysis/charfilters/regexp.html",
	)
}

func static_bleve_mapping_partials_analysis_charfilters_regexp_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_charfilters_regexp_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/charfilters/regexp.html", size: 614, mode: os.FileMode(420), modTime: time.Unix(1453267781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_charfilters_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x54\x4d\x6f\xdb\x30\x0c\xbd\xe7\x57\x68\x3a\x35\x40\x9d\x60\xd8\xd5\xf6\x65\x1f\xb7\x76\x97\xed\x3c\x30\x16\x6d\x0b\x55\x25\x43\x62\x3e\x8c\xa2\xff\x7d\x94\x5c\x7f\xa4\x09\xd6\x6d\x18\x16\x04\xc9\x13\x4d\x3d\x3d\x3d\x92\xce\x09\x76\x06\x45\x65\x20\x84\x42\x0e\x8b\xf4\x9b\x05\xf2\xba\x43\x25\xcb\x95\x10\x39\xb5\x08\x2a\xa2\x88\xfd\x00\x52\xb8\xbc\x87\x47\xcc\xb7\x0c\x16\xb1\x6f\x7d\x77\x11\x9b\xd7\x8c\x12\x43\x8c\xbc\xb0\xe6\xb4\x73\xaa\x9f\xf8\x85\x6d\x32\x8f\x1d\x02\x15\xf2\xa6\xaa\x2d\x1f\x71\x5b\xd5\x07\x30\x6b\xa1\x2d\x7f\x15\x9e\xee\xa0\xeb\xb4\x6d\x36\x60\xc1\xf4\x41\x87\x4d\xd5\x82\xff\x51\x6b\x43\xe8\x83\x9c\x0f\x56\x65\x0e\x91\xae\x32\xba\x7a\x28\x24\x2a\x4d\x1f\x39\xf3\x4b\x4a\x1c\xb9\x45\x22\xbf\x15\xe4\xf7\xb8\x96\xe5\xd3\xd3\x10\x7f\x7e\xce\xb7\x10\x85\xab\x25\x5f\x7c\xca\xd9\x1b\xe2\x4b\xc6\x8c\xf3\xa7\x2f\x90\x17\x4a\x1f\x46\x5b\x77\x64\xb3\xc6\xbb\x7d\x27\x26\x94\x9d\x82\x14\xde\x19\x2c\x64\x5a\xcb\x79\x27\xef\xdd\xed\x89\x9c\x8d\xba\x75\x5d\xc8\x77\x07\x8d\xc7\xaf\xd6\xf4\x77\x4e\x81\x91\x8b\xc4\xf1\xf3\x7b\x17\x5c\x4b\x11\x45\xb3\x9e\x44\x7f\x8d\x68\x16\x9c\xa4\x2a\xac\x61\x6f\x28\xe1\x53\x38\xd3\xc8\x2a\x43\x07\x76\xdc\xd1\x98\xbe\x6b\x75\xc5\xa2\x27\x94\x45\x2d\xd7\x0e\x01\xaf\x21\x6b\xb5\x52\x68\xb9\xe5\xd8\x73\xc9\x26\x47\xb2\x52\x7c\xe6\x2d\x4b\x23\xb6\x83\xd4\x7f\x64\x8e\x42\x83\x84\x17\xf6\xfc\x6f\x5f\xc8\x43\x68\xff\xd0\x98\x4f\x49\xfa\x2f\xad\xc9\xb7\xdc\x72\x53\x2f\x4e\x7d\x39\x8e\xdb\x34\x59\xa1\x75\xc7\x42\x7e\x27\x6d\xc2\xe6\x01\xfb\x70\xf3\xf6\x40\xad\x37\x06\x6d\x43\xad\xc8\xc5\xfb\xe5\x70\x89\xca\x99\xa8\xaf\x90\x1f\x64\x79\xef\x2c\x5e\x1e\xcb\xff\xe3\x6c\xe7\x54\x3b\x47\x57\xde\x22\xe7\x3c\xab\xbf\xac\xf4\x5c\x67\x8b\xc7\x45\x91\xdf\x2c\xef\xab\xe2\x86\xc7\xb3\x1a\x77\x7b\x63\x32\xaf\x9b\x96\xf8\x8a\x78\x14\x91\x19\x2a\x26\x16\x03\xff\xeb\x42\x5c\xb5\x60\xb8\x38\x83\xf8\x6a\x2d\x57\x3f\x03\x00\x00\xff\xff\xcb\x3b\x71\x01\x76\x05\x00\x00")

func static_bleve_mapping_partials_analysis_charfilters_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_charfilters_html,
		"static-bleve-mapping/partials/analysis/charfilters.html",
	)
}

func static_bleve_mapping_partials_analysis_charfilters_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_charfilters_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/charfilters.html", size: 1398, mode: os.FileMode(420), modTime: time.Unix(1453267781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilter_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x54\xcd\x6e\xdb\x30\x0c\xbe\xe7\x29\x34\x9d\xba\x83\x67\x6c\xbd\xda\xbe\x04\xd8\xad\xdd\x61\x7d\x01\x59\xa2\x6d\x21\xb4\x64\x48\x72\xba\x20\xc8\xbb\x4f\x3f\x4e\x6a\x3b\xee\xb0\x0e\x13\x10\x45\x26\xa9\x8f\xe4\x47\x8a\x85\x90\x47\xc2\x91\x59\x5b\xd2\x1a\xe1\x08\x4f\x5a\x30\xa4\xd5\x6e\x37\xd7\xf4\x41\x98\x75\xc0\x04\x18\xaf\x23\x7e\x15\xdd\xe3\x52\xeb\xa4\x43\xa0\xd5\x7e\xb4\x4e\xf7\xe4\x45\x1f\x40\x91\xef\x12\x1d\x98\x22\xef\x1e\xab\x5d\x91\x7b\xc0\x4d\xdc\x5a\x8b\xd3\x15\x35\x28\x55\x9b\xd9\x4e\xbf\x96\x14\x8c\xd1\xe6\x09\xac\x65\x2d\xd0\xa8\x8f\x6b\xba\xcc\x10\x8c\x23\x71\xcf\x04\x53\x2d\x98\x70\x93\xa3\x66\x87\x99\xb1\xd1\x08\x93\x2d\xad\xc8\xf9\x3c\xc7\xbc\x5c\x92\xd3\x29\xb2\x78\x6e\xb4\xe9\xaf\x1e\xc2\x99\x4e\x08\xf1\x5c\xdd\x70\xe7\x59\x04\x55\xd6\x1a\x3d\x0e\x33\x83\x68\x84\xac\x06\x24\x5e\x5f\x52\xa7\x58\xef\xe9\x79\xf6\x7b\x91\x47\xf9\xca\x56\xaa\x61\x74\x21\x03\x21\x2d\xf3\xa5\x10\x25\x3d\x4a\x78\xfd\xa1\xf0\x94\x6a\xb2\x30\x9f\x96\x37\xf7\x1c\x02\x96\x34\xc2\x13\x77\x1a\x7c\xac\x0e\x7e\x39\xba\x88\x8e\x6b\xe5\x7c\x1e\x9b\x18\x52\x5c\xa3\x23\x03\x32\x0e\x9d\x46\x5f\xe6\x92\x3e\xc7\x80\xdf\x32\x9e\xb1\xf4\x6f\x0c\x84\x96\x68\x62\x47\x84\x30\x69\xf5\xe2\xf7\x6d\x2e\x66\xd0\x5c\x63\x66\xfb\xec\xeb\x37\x12\x09\xda\xf6\x62\x01\x81\x7f\x98\xbc\xd8\x2e\x5d\xe8\x9c\x29\xb8\xd4\xae\x21\xac\x7d\x14\x3f\x7c\x7e\xf7\xde\xc4\xfa\x2c\xa7\x2f\x31\xa9\x4d\xfb\xbf\xad\x44\x2a\xc5\x9a\xa6\x3b\xcb\x42\x0f\x4e\x6a\x15\xc2\x30\x30\x00\x73\xeb\xf0\x3d\x55\x64\x95\x90\xa5\xd5\xf9\xbc\x94\x5d\x2e\x45\x9e\x90\x56\x6c\xe6\x89\xce\xb5\x34\x96\x7f\xf5\xb9\xec\x86\xdb\xc3\xbd\xa3\x25\xa8\xa4\xe2\x38\x0a\x20\xd6\xf0\xc4\xc5\xc0\x5c\x47\xf3\xe9\xe1\xe7\x41\xf2\xa7\x29\xd1\x68\xed\xde\xa6\x4f\x3d\x3a\x97\x28\x90\xcd\xba\xd6\xb7\x79\xe6\x14\xf1\xbf\x4c\x40\xc3\x46\x74\x4b\xca\xe3\xa8\x90\xfc\xe0\x3b\x8c\x29\x0e\xe8\x6b\x5d\xed\x51\x5b\xdf\x91\x09\x7b\xd3\xd1\xa7\xff\xe5\x29\x9e\x3e\xe2\xea\x1d\xc8\x7a\x94\x28\x1e\xc2\xeb\x5d\xf5\x6a\x9a\x04\x09\xf2\x2e\xce\xc1\xc8\x9e\x99\x13\x19\x46\xc4\xcc\xc8\xb6\xf3\xb3\xf1\x27\x3b\xce\x72\xbf\xd5\x21\xfd\xff\x0e\x00\x00\xff\xff\x9e\x52\x1d\x9f\x27\x06\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilter_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilter_html,
		"static-bleve-mapping/partials/analysis/tokenfilter.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilter_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilter_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilter.html", size: 1575, mode: os.FileMode(420), modTime: time.Unix(1453267781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilters_dict_compound_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x90\x41\x6a\x03\x31\x0c\x45\xf7\x3d\x85\xf0\x3e\x9d\x0b\x78\xe6\x06\x69\x17\x2d\x74\x19\x34\x23\x25\x88\xca\x96\xb1\x9d\x94\x12\x72\xf7\x3a\x99\x4c\x99\x50\xfa\x57\xe2\xfb\x3f\xe4\x2f\x68\xf2\x24\x27\x98\x14\x4b\xe9\xdd\xde\x72\xd8\x1c\xb2\x1d\x93\x1b\x9e\xe0\x2e\xaf\x38\xb2\x42\x7b\xeb\x5d\xb5\x4f\x8e\x7b\xd1\xca\xf9\xfd\x3a\x6e\x31\x15\x37\xbc\x1d\x47\xf8\xb0\x4c\xc5\x77\xb7\xec\x8a\x2d\xac\x3c\x55\x88\x87\x0d\x49\xc1\x51\x99\x7a\x77\x12\xfe\x7a\x8d\xfa\xbd\x35\x42\x75\xbf\xd9\x45\x2d\x1b\x8c\x58\x1f\xb6\x3d\x93\x4c\x75\x77\x33\x76\x01\xd3\x5f\x6a\xdd\x60\xb2\x58\xb3\xa9\x03\xa1\xff\xbe\xfc\xc0\x7b\x4b\x55\x2c\x5e\x37\x67\x4e\x8c\xf5\x4e\xb5\x28\x48\x84\x65\x7e\xc1\xc0\x0d\x3d\x9f\x17\xe3\x72\xf1\xdd\x8c\xae\x1a\x77\x73\xe5\xd9\xf1\x5d\xbb\xee\xf0\x13\x00\x00\xff\xff\x10\xcc\xc5\x07\x67\x01\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilters_dict_compound_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilters_dict_compound_html,
		"static-bleve-mapping/partials/analysis/tokenfilters/dict_compound.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilters_dict_compound_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilters_dict_compound_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilters/dict_compound.html", size: 359, mode: os.FileMode(420), modTime: time.Unix(1453267781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilters_edge_ngram_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x91\xc1\x4e\xc3\x30\x0c\x86\xef\x7d\x8a\xc8\xf7\xd1\x17\x48\x73\xe3\x38\xf1\x0c\x69\xe2\x96\x68\x6e\x1c\xa5\xe9\xd8\xde\x1e\xaf\x1b\x82\xb1\x80\x84\xd8\x7c\xb0\xd4\xf6\xff\xfb\xdb\x9f\x95\x94\xf6\x61\xaf\x1c\xd9\x79\xee\x60\xe0\x3c\x6d\xc6\xcc\x4b\x02\xd3\xa8\x4b\x69\xb2\x3d\x92\x92\x6f\x1d\x14\xde\x61\x1c\x02\x15\xcc\xcf\x7e\x44\x30\xa7\xae\xdb\x55\xf1\xe9\x58\x5d\x33\x12\xba\xa2\xe2\xb8\xf1\x61\xb6\x3d\xa1\xef\x60\x1f\xf0\xed\x25\xd2\x71\xcb\xde\x12\x5c\xe9\x3f\xea\xeb\x24\x8e\x63\xc9\x4c\xa0\x82\xbf\x8d\xae\xba\x25\x6d\x62\x8f\x74\x25\x7f\xc2\x75\xd4\x1b\x83\xe6\x54\x02\x47\x33\x64\xc9\xd1\xed\xe5\xe9\x47\x59\x6f\xdd\xae\xae\xd2\xed\x79\xd9\xf3\x5b\xdd\x0a\x51\xd3\x34\xff\x81\xbb\x0d\x11\x8c\xb4\x3a\xda\x10\xd3\xf2\x67\xb2\x75\x34\x93\x04\xd5\xd4\xe5\x98\xb0\x83\xb8\x4c\x3d\x66\xa8\x1e\xa5\xe6\xfa\x76\xa7\xd3\x16\x2a\x91\x75\xf8\xca\xe4\x51\x56\x84\x3b\x22\xb2\x07\x41\x64\x0f\x8f\x47\x24\x41\x8f\x43\x24\x3f\xff\x05\xd1\x7b\x00\x00\x00\xff\xff\x8f\xec\x87\x47\xa1\x03\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilters_edge_ngram_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilters_edge_ngram_html,
		"static-bleve-mapping/partials/analysis/tokenfilters/edge_ngram.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilters_edge_ngram_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilters_edge_ngram_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilters/edge_ngram.html", size: 929, mode: os.FileMode(420), modTime: time.Unix(1453267781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilters_elision_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x90\xc1\x6a\xc3\x30\x10\x44\xef\xfd\x8a\x45\xf7\x54\x3f\x20\x1b\xfa\x01\x69\x2f\xbd\x87\x8d\xb4\x09\x4b\x57\x5a\x21\xa9\x29\x25\xe4\xdf\xab\xc4\x76\xb1\x29\x9d\xd3\x32\x9e\xc7\x78\x04\x5d\x2e\xf0\x05\xbc\x60\xad\x83\x39\x69\x89\xbb\x73\xd1\xcf\x6c\xc6\x27\x98\xe5\x04\x8f\x24\xd0\xbf\x0d\xa6\xe9\x07\xa5\x13\x4b\xa3\xf2\x7e\x3f\xf7\x98\xab\x19\x5f\x4a\x63\x2f\x54\x9d\x7d\x44\x57\x68\x25\x21\xdf\x20\x9d\x77\x81\x2b\x1e\x85\xc2\x60\x2e\x4c\x5f\x6f\x49\xbe\xf7\x1a\x50\xcc\x6f\x76\x51\xcf\x46\x0d\x24\x9b\xb2\x67\x9c\x2b\x0e\x0f\xf3\x10\x31\xff\x25\xd7\x23\xbc\xa6\x56\x54\x0c\x70\xf8\xef\xaf\x37\xbc\xd3\xdc\x58\xd3\xbd\xbd\x50\x26\x6c\x33\xd5\xa3\xc0\x09\x96\xfb\x15\x23\x75\xf4\x7a\x5d\x8c\xdb\xcd\xd9\x09\x5d\xad\xb6\xd3\xec\xc9\x71\xb6\x3f\xf0\xf8\x13\x00\x00\xff\xff\x4d\xe0\x0e\x69\x6a\x01\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilters_elision_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilters_elision_html,
		"static-bleve-mapping/partials/analysis/tokenfilters/elision.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilters_elision_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilters_elision_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilters/elision.html", size: 362, mode: os.FileMode(420), modTime: time.Unix(1453267781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilters_generic_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilters_generic_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilters_generic_html,
		"static-bleve-mapping/partials/analysis/tokenfilters/generic.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilters_generic_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilters_generic_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilters/generic.html", size: 0, mode: os.FileMode(420), modTime: time.Unix(1453267781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilters_keyword_marker_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x90\xcd\x6a\xc3\x30\x10\x84\xef\x7d\x8a\x45\xf7\x54\x2f\x20\xfb\x05\x4a\xda\x4b\xef\x61\x63\x6d\x82\xc8\x4a\x2b\x24\x35\x21\x18\xbf\x7b\xe5\xbf\x62\x53\x32\xa7\x65\x3c\x1f\xe3\x11\x54\x19\xeb\xee\xd0\x31\xe6\xdc\xa8\x8b\x24\x7f\xb8\x26\xf9\x89\xaa\x7d\x83\x45\x86\xf1\x4c\x0c\xf5\x5b\xa3\x8a\xdc\x28\x5c\x1c\x17\x4a\xdf\xe3\x79\xc4\x98\x55\xfb\x41\xcf\x87\x24\x9b\x8d\x9e\xa2\x1b\x34\x13\x53\x57\x20\x5c\x0f\xd6\x65\x3c\x33\xd9\x46\xdd\x1d\x3d\xbe\x02\x3f\x8f\x62\x91\xd5\x5f\x76\x55\xcd\x7a\xb1\xc4\xbb\xb2\xf7\xdb\x52\x71\x9a\xcc\x93\xc7\xf8\x9f\xdc\x8e\xe8\x24\x94\x24\xac\xc0\xd9\x57\x7f\xbd\xe3\x8d\xc4\xe2\x24\x8c\xed\x89\x22\x61\x59\xa8\x1a\x05\x17\x60\xbd\x3f\xd1\x53\x45\xfb\x7e\x35\x86\xc1\xe8\x19\xdd\xac\xd6\xf3\xec\xd9\x31\xba\x3e\x70\xfb\x1b\x00\x00\xff\xff\xda\x20\xf1\xdb\x6a\x01\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilters_keyword_marker_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilters_keyword_marker_html,
		"static-bleve-mapping/partials/analysis/tokenfilters/keyword_marker.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilters_keyword_marker_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilters_keyword_marker_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilters/keyword_marker.html", size: 362, mode: os.FileMode(420), modTime: time.Unix(1453267781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilters_length_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x90\x41\x6e\x85\x30\x0c\x44\xf7\x9c\x22\xf2\x9e\x72\x81\x84\x1b\xa0\x9e\x21\x10\x43\xa3\x3a\x71\x14\x02\x85\xdb\xd7\x42\x48\x15\x2a\xfa\x9b\x2f\x66\x91\xcd\x4c\x3c\x9a\xa7\x44\xda\xf9\x55\x0d\x64\xe7\xd9\xc0\xc8\x39\xd4\x53\xe6\x25\x41\x5b\xa9\x53\x9a\x6c\x8f\xa4\xc4\x33\x50\xf8\x1b\xe3\xe8\xa9\x60\xee\x7c\x84\x56\x1e\xdd\x1c\xfe\x5f\xfe\xf8\xe3\x63\x5a\x8a\x8a\x53\xed\xfc\x6c\x7b\x42\x67\x60\xf5\xf8\xf3\x19\x69\xef\xd8\x59\x82\x4b\xfc\x94\xc4\x03\x3b\xa4\x4b\xcf\x47\x90\xa2\xbb\x74\xd9\x13\x1a\x88\x4b\xe8\x31\xc3\x65\xc1\xc0\xb1\x64\xbe\xef\xf0\xee\xdf\x0a\x95\xc8\x0e\xf8\xc5\xe4\x50\x26\x9e\xcb\x75\x23\x5c\xda\xaa\x7a\x0b\x91\xdd\x04\x91\xdd\x9e\x47\x24\x45\xcf\x21\x92\xe3\x2f\x10\xfd\x06\x00\x00\xff\xff\x6f\xc7\x37\xc6\x44\x02\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilters_length_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilters_length_html,
		"static-bleve-mapping/partials/analysis/tokenfilters/length.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilters_length_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilters_length_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilters/length.html", size: 580, mode: os.FileMode(420), modTime: time.Unix(1453267781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilters_ngram_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x90\x41\x6e\x85\x30\x0c\x44\xf7\x9c\x22\xf2\x9e\x72\x81\x84\x1b\xa0\x9e\x21\x10\x43\xa3\x3a\x71\x14\x02\x85\xdb\xd7\x42\x48\x15\x2a\xfa\x9b\x2f\x66\x91\xcd\x4c\x3c\x9a\xa7\x44\xda\xf9\x55\x0d\x64\xe7\xd9\xc0\xc8\x39\xd4\x53\xe6\x25\x41\x5b\xa9\x53\x9a\x6c\x8f\xa4\xc4\x33\x50\xf8\x1b\xe3\xe8\xa9\x60\xee\x7c\x84\x56\x1e\xdd\x1c\xfe\x5f\xfe\xf8\xe3\x63\x5a\x8a\x8a\x53\xed\xfc\x6c\x7b\x42\x67\x60\xf5\xf8\xf3\x19\x69\xef\xd8\x59\x82\x4b\xfc\x94\xc4\x03\x3b\xa4\x4b\xcf\x47\x90\xa2\xbb\x74\xd9\x13\x1a\x88\x4b\xe8\x31\xc3\x65\xc1\xc0\xb1\x64\xbe\xef\xf0\xee\xdf\x0a\x95\xc8\x0e\xf8\xc5\xe4\x50\x26\x9e\xcb\x75\x23\x5c\xda\xaa\x7a\x0b\x91\xdd\x04\x91\xdd\x9e\x47\x24\x45\xcf\x21\x92\xe3\x2f\x10\xfd\x06\x00\x00\xff\xff\x6f\xc7\x37\xc6\x44\x02\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilters_ngram_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilters_ngram_html,
		"static-bleve-mapping/partials/analysis/tokenfilters/ngram.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilters_ngram_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilters_ngram_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilters/ngram.html", size: 580, mode: os.FileMode(420), modTime: time.Unix(1453267781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilters_normalize_unicode_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x91\xc1\x6e\x84\x20\x10\x86\xef\x7d\x0a\xc2\xdd\xf2\x02\xc8\xb1\xb7\xb6\xa7\x3e\x00\xc2\x68\x26\x8e\x8c\x01\x6a\xd3\x7d\xfa\x65\xd5\x64\xd7\xac\x6b\xfc\x4f\x64\xe6\xfb\x7f\xfe\x80\x28\xd2\x1e\x27\xe1\xc8\xa6\x54\xcb\x96\xe3\x50\x75\x91\x7f\x47\x69\xde\xc4\x2a\x4d\xb6\x01\x12\x65\x57\xcb\xcc\x3d\x84\x16\x29\x43\xfc\x2a\xac\x25\xbc\xc0\x4f\x40\xc7\x1e\xa4\xf9\x28\x13\xad\x66\xfa\xee\x9e\x13\x12\x10\xb8\x2c\x42\x57\x79\x4c\xb6\x21\xf0\xb5\x9c\x10\xfe\xbe\x03\xfd\x7f\xb2\xb7\x24\x37\xfc\xaa\xc7\x52\x8e\x43\x8e\xbc\xcf\xa1\x3f\x2e\xb6\xe7\x29\x55\x86\xb2\xa3\x8d\xf3\xfd\x76\x95\x34\x4f\xbc\xe6\x31\x23\x07\x13\x5a\xa7\xd5\x7a\x3e\x80\xfc\x19\xa8\x3f\x15\xd5\xbf\xc8\xd2\x6a\x79\xd2\x65\xaa\x55\xf9\x43\x73\x0d\x00\x00\xff\xff\x53\xe9\xaf\x34\xcd\x01\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilters_normalize_unicode_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilters_normalize_unicode_html,
		"static-bleve-mapping/partials/analysis/tokenfilters/normalize_unicode.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilters_normalize_unicode_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilters_normalize_unicode_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilters/normalize_unicode.html", size: 461, mode: os.FileMode(420), modTime: time.Unix(1453267781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilters_shingle_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x93\xc1\x6e\x83\x30\x0c\x86\xef\x3c\x45\x94\x7b\xd7\x17\x00\x8e\x93\x76\xa8\x7a\xd8\xee\x53\x48\x0c\xb5\x6a\x62\x14\x42\x47\xdf\x7e\x6e\x9b\x6d\x42\xab\x38\x74\x8b\x0f\x06\xc9\x7f\xfc\xeb\xff\x94\x28\xa9\xd2\xe1\x49\x59\x32\xe3\x58\xe9\x96\x43\xbf\xe9\x02\x4f\x83\xae\x0b\x95\xaa\x24\xd3\x00\x29\x99\x55\x3a\xf2\x11\x7c\x8b\x14\x21\xec\xd0\xeb\x5a\x5a\xb9\xbd\xce\x7f\xf4\xd7\x33\xe8\x87\x29\x2a\xdf\x6d\x1c\x8e\xa6\x21\x70\x95\x3e\x21\x7c\xec\x3d\x9d\x77\xec\x0c\xe9\x85\x3c\x95\xc8\x7b\x76\x40\x0b\x9f\xa7\x5e\x8c\xee\xa9\xe3\x79\x80\x4a\xfb\xa9\x6f\x20\xe8\x45\x02\xcb\x3e\x06\xbe\xef\x81\xee\x57\x0a\x35\x90\xb1\x70\x60\x72\x20\x11\x53\xf2\x72\x2b\x5c\xea\xa2\xf8\x13\x22\x33\x0b\x22\x33\xe7\x47\x24\x46\xf9\x10\xc9\xf2\x6c\x88\x5e\xbc\xa5\xc9\x81\xae\xd3\x8f\xda\x07\xec\xd0\x1b\x52\x6f\x17\x51\x76\x72\x3c\x45\xd9\xf5\xce\xc9\x75\x85\xa2\x3d\x80\x3d\x36\x3c\x3f\xcc\xf1\x3b\xea\xbf\xc1\x7b\x05\x11\x49\x33\xc1\x44\x0e\xd9\x59\x8d\x5f\x4e\x2b\x94\x22\xcc\xf1\x61\x42\x97\x3c\xd9\x6e\xda\x33\x12\xc9\x2b\xa8\x6f\xdf\xec\xb0\xda\x9b\x5d\x26\x52\x29\xcc\x0a\xac\xcf\x00\x00\x00\xff\xff\x5c\xa7\xb5\x63\xdb\x05\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilters_shingle_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilters_shingle_html,
		"static-bleve-mapping/partials/analysis/tokenfilters/shingle.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilters_shingle_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilters_shingle_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilters/shingle.html", size: 1499, mode: os.FileMode(420), modTime: time.Unix(1453267781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilters_stop_tokens_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x90\xcd\x6a\xc3\x30\x10\x84\xef\x7d\x8a\x45\xf7\x54\x2f\x20\xfb\x0d\xd2\x1e\x5a\xe8\x31\x6c\xac\x4d\x10\x5d\x69\x85\xa4\xba\x14\xe3\x77\xaf\xfc\x57\x6c\x4a\xe6\xb4\x8c\xe7\x63\x3c\x82\x2a\x63\x5d\x0f\x1d\x63\xce\x8d\xba\x49\xf2\xa7\x7b\x92\xaf\xa8\xda\x27\x58\x65\x18\xaf\xc4\x50\xbf\x35\xaa\xc8\x27\x85\x9b\xe3\x42\xe9\x7d\x3a\xcf\x18\xb3\x6a\xdf\x8a\x44\xf8\x90\x64\xb3\xd1\x73\x78\x07\x67\x62\xea\x0a\x84\xfb\xc9\xba\x8c\x57\x26\xdb\xa8\xde\xd1\xf7\x6b\xe0\x9f\xb3\x58\x64\xf5\x97\xdd\x54\xb3\x5e\x2c\xf1\xa1\xee\x39\xd7\x92\xcb\x6c\x5c\x3c\xc6\xff\xd4\x7e\x42\x27\xa1\x24\x61\x05\xce\x3e\xfa\xe7\x03\x6f\x24\x16\x27\x61\x6a\x4e\x14\x09\xcb\x4a\xd5\x28\xb8\x00\xdb\xfd\x82\x9e\x2a\x3a\x0c\x9b\x31\x8e\x46\x2f\xe8\x6e\xb1\x5e\x26\x2f\x8e\xd1\xf5\x79\xdb\xdf\x00\x00\x00\xff\xff\x7b\xb1\xcb\x2c\x68\x01\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilters_stop_tokens_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilters_stop_tokens_html,
		"static-bleve-mapping/partials/analysis/tokenfilters/stop_tokens.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilters_stop_tokens_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilters_stop_tokens_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilters/stop_tokens.html", size: 360, mode: os.FileMode(420), modTime: time.Unix(1453267781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilters_truncate_token_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x90\x41\x0a\x83\x30\x10\x45\xf7\x3d\x45\x98\xbd\xf5\x02\x89\x27\x68\xe9\x19\xa2\x33\x6a\xe8\x38\x13\x62\xb4\x78\xfb\x06\x11\x8a\xd4\xbf\xc8\x26\xff\xf3\x78\x63\x4a\x2c\x86\xd5\x74\xec\xe7\xd9\x41\xaf\x69\xaa\x86\xa4\x4b\x84\xe6\x66\x8e\x58\xf6\x2d\xb1\x29\x7f\x0e\xb2\xbe\x49\xfa\xc0\x99\xd2\x83\x04\x9a\xf2\x0c\x79\xb4\xf5\x5e\xf9\x4d\xf6\x59\x90\xb8\x64\x23\x43\x85\x61\xf6\x2d\x13\x3a\x58\x03\x7d\x5e\xc2\xdb\x53\xd1\x33\x9c\xea\x47\x4a\x7d\x52\x24\x3e\xa1\xee\xbc\x63\x2e\x07\x79\x8b\xe4\x40\x96\xa9\xa5\x04\x27\x8f\x4e\x25\x27\xbd\xc6\x04\xfc\x73\x31\x91\x7d\x47\xa3\x32\x52\x11\x3d\xfc\x6d\x5d\xae\xd3\x7c\x03\x00\x00\xff\xff\x47\xb1\xf0\x08\x27\x01\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilters_truncate_token_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilters_truncate_token_html,
		"static-bleve-mapping/partials/analysis/tokenfilters/truncate_token.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilters_truncate_token_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilters_truncate_token_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilters/truncate_token.html", size: 295, mode: os.FileMode(420), modTime: time.Unix(1453267781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilters_wordmap_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8f\x41\x8a\xc3\x30\x0c\x45\xf7\x73\x0a\xe3\x7d\x26\x17\x70\x72\x83\xb4\x9b\xee\x8b\x1a\x2b\xc5\x54\xb6\x8c\x2d\x1a\x4a\xc8\xdd\xeb\xe0\xa6\x34\x7f\xf5\x11\xef\x49\x48\x95\x98\x8c\x84\xa3\xa8\x70\x6f\xac\xcb\x70\x23\xb4\x9d\x7e\x3a\x9c\xcf\x81\x5e\x03\x5b\x20\xfd\xa7\x7e\x52\x38\xcf\x16\xa9\xd3\xc2\x0f\x0c\x93\x23\xc1\xf4\x3f\x73\xb2\x57\x0f\xf1\xc8\x8e\x04\x39\x77\x7a\xe2\xe4\x9b\x91\x83\x24\x26\xad\x9c\x3d\xa8\x97\xad\x0e\x10\xb3\xee\xbf\xae\xe1\x28\x8e\xc3\x76\x2b\x61\x44\x90\x8f\x51\x30\xe5\x82\xda\xfb\x09\x3c\x16\x6d\x59\xf6\xc1\xba\x9a\xb6\xaa\x75\x97\x69\xeb\x73\xfd\x3b\x00\x00\xff\xff\x5c\xa2\x5c\x50\xe9\x00\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilters_wordmap_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilters_wordmap_html,
		"static-bleve-mapping/partials/analysis/tokenfilters/wordmap.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilters_wordmap_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilters_wordmap_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilters/wordmap.html", size: 233, mode: os.FileMode(420), modTime: time.Unix(1453267781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilters_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x54\xcd\x6e\xdb\x3c\x10\xbc\xfb\x29\xf8\xf1\x14\x03\x9f\x64\x14\xbd\x4a\x3a\xb5\xbd\x25\xbd\xa4\xe7\x82\x16\x57\x12\x61\x86\x24\xc8\x95\x6d\x21\xc8\xbb\x77\x49\x45\x3f\x8e\x8d\x36\x2d\x8a\x06\x81\x35\x5c\x2d\x87\xb3\xb3\x5c\x15\x28\xf6\x1a\x58\xad\x45\x08\x25\x1f\x17\xe9\x37\x0b\xe8\x95\x03\xc9\xab\x0d\x63\x05\x76\x20\x64\x44\x11\xfb\x11\xa4\x70\xf5\x20\x9e\xa0\xd8\x11\x58\xc5\x1e\x07\x77\x15\x5b\xd6\x84\x12\x43\x8c\xbc\xb2\x16\xb8\xb7\x72\x98\xf9\x99\x69\x33\x0f\x0e\x04\x96\xfc\x0e\x1b\x43\x47\xfc\x8f\xcd\x51\xe8\x2d\x53\x86\xfe\x25\x9c\xef\x85\x73\xca\xb4\xb9\x30\x42\x0f\x41\x85\x1c\xed\x01\xcc\xf7\x46\x69\x04\x1f\xf8\x72\xb2\xac\x0a\x11\xf9\x6a\xad\xea\x43\xc9\x41\x2a\x7c\x8c\xa9\x5f\x52\xe6\xc4\xce\x12\x3d\x3d\x7c\x0f\x5b\x5e\x3d\x3f\x8f\xf1\x97\x97\x62\x27\xa2\x74\xb9\x26\x8c\x6f\x29\x3b\x47\x2a\x33\x66\x5c\xbe\x7d\x85\xb4\x90\xea\x38\x19\xbb\x47\x93\xb5\xde\xf6\x8e\xcd\x28\x3b\x07\xce\xbc\xd5\x50\xf2\xb4\xe6\xcb\x4e\xda\xbb\xef\x11\xad\x89\xc2\x55\x53\xf2\xff\x8e\x0a\x4e\x5f\x8d\x1e\xee\xad\x14\x9a\xaf\x12\xa7\xbf\x77\x56\xb8\xe5\x2c\xaa\x26\x41\x89\xff\x16\xd3\xa2\x38\x69\x95\xd0\x88\x5e\x63\xc2\xe7\x70\x21\x92\x64\x06\x27\xcc\xb4\xa3\xd5\x83\xeb\x54\x4d\xaa\x67\x94\x45\x31\xb7\x0e\x11\x5e\x89\xac\x53\x52\x82\xa1\x5b\x47\xa6\x73\x72\x39\x92\x55\xec\x33\x6d\x59\x3b\xb1\x1b\xa5\xfe\x25\x77\x24\x68\x40\xb8\xf6\xe7\x5f\x1b\x83\x5e\x84\xee\x37\x9d\xf9\x94\xb4\xff\xd4\x9b\x62\x47\x97\x6e\xbe\x8d\xf3\xcd\x9c\x46\x6e\x9e\xae\xd0\xd9\x53\xc9\xbf\xa1\xd2\x21\x3f\xc0\x10\xee\xde\x31\x54\xdb\x5c\x83\x69\xb1\x63\x05\xfb\xb0\x1e\x30\x56\x5b\x1d\x05\x96\xfc\x23\xaf\x1e\xac\x81\xeb\x73\xe9\x39\x0d\x78\x81\x8d\xb5\x78\xe3\x53\x72\xc9\xb3\xf9\xc3\x5e\x2f\x9d\x36\x70\x5a\xb7\xf9\x97\x0d\x7e\xd3\xde\xf0\x74\xd1\x65\xd7\x6b\x9d\x79\xd5\x76\x48\x35\xc2\x89\x25\x6a\x36\x72\xbf\x6d\xc3\xcd\xfa\xc7\xaa\x09\xc4\x8f\x6b\xb5\xd9\xfc\x08\x00\x00\xff\xff\xb7\x3c\x3b\xe3\x79\x05\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilters_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilters_html,
		"static-bleve-mapping/partials/analysis/tokenfilters.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilters_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilters_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilters.html", size: 1401, mode: os.FileMode(420), modTime: time.Unix(1453267781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenizer_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x54\xcd\x72\xdb\x20\x10\xbe\xe7\x29\x28\xa7\xf4\xa0\x6a\xda\x5c\x25\x5d\x7c\x4e\x7a\x68\x5e\x00\xc3\x5a\x62\xbc\x02\x0d\x20\xa7\xae\xc7\xef\x5e\x7e\x64\x05\x29\x4a\xa7\xe9\x54\x33\x21\x78\x77\xf9\x76\xf7\xfb\x16\x2a\x21\x4f\x84\x23\xb3\xb6\xa6\x7b\x84\x13\x3c\x6a\xc1\x90\x36\x77\x77\xb9\xa7\x0f\xc6\xa2\x03\x26\xc0\x78\x1f\xf1\x5f\xd5\x3d\x2c\xbd\x4e\x3a\x04\xda\xec\x46\xeb\x74\x4f\x9e\xf5\x11\x94\xfc\x05\xa6\x2a\xbb\x87\xe6\xae\x2a\x3d\xda\x26\xe8\x5e\x8b\xf3\x0d\x32\x38\x55\x5b\xd8\x4e\xbf\xd4\x14\x8c\xd1\xe6\x11\xac\x65\x2d\xd0\xe8\x8f\xdf\x74\x98\x21\x18\x47\xe2\x5a\x08\xa6\x5a\x30\xe1\x24\x47\xcd\x8e\x59\xb0\xd1\x08\x53\x2c\x6d\xc8\xe5\x92\x63\x5e\xaf\x29\xe9\x54\x59\xdc\x1f\xb4\xe9\x6f\x19\xc2\x9e\x4e\x08\x71\xdf\xcc\xb8\x79\x17\xc1\x55\xb4\x46\x8f\x43\x16\x10\x83\x90\xed\x01\x89\xf7\xd7\xd4\x29\xd6\x7b\x6e\x9e\xfc\x5a\x95\xd1\xbe\x8a\x95\x6a\x18\x5d\xe8\x40\x48\xcb\xbc\x0e\xa2\xa6\x27\x09\x2f\xdf\x15\x9e\x93\x20\x8b\xf0\xe9\xf3\xe1\x9e\x43\xc0\x9a\x46\xf8\xad\x10\x77\x1e\x7c\xf9\x0e\x7e\x3a\xba\x28\x98\x6b\xe5\x7c\x6b\x9b\x67\xa4\xb8\x15\x4c\x06\x64\x1c\x3a\x8d\x5e\xf6\x9a\x3e\xc5\x1e\x5e\x49\xc8\x88\xfb\x37\x52\x6e\x23\x12\x8a\xa4\xcd\xb3\x5f\xb7\xc9\xc9\x80\xb9\xc6\xc2\xf6\xc5\xd7\x6f\x24\x32\xb6\x9d\xc3\x02\x02\xff\x30\x9b\x71\x7e\xba\x30\x4a\x59\x69\xa1\xa8\x5d\x34\xde\x7f\x7e\xf7\xd4\x24\xc2\x7c\xe8\x4b\x6c\x68\x33\xfa\x6f\x35\x48\x22\x2c\x09\x7a\x13\x57\xe9\xc1\x49\xad\x42\x09\x06\x06\x60\x6e\x59\xb8\xa7\x88\x2c\x1a\xb1\xb4\xb9\x5c\x72\xcb\xf5\x5a\x95\x09\x63\xc5\x60\x99\x28\x5c\x5b\xa3\xe0\xab\x9f\x4b\xfd\xe7\xdb\xbb\x22\x23\x38\xa4\xe2\x38\x0a\x20\xd6\xf0\xc4\xc0\xc0\x5c\x47\xcb\xe9\xee\x97\xc1\xf2\xa7\x87\xe2\xa0\xb5\x7b\x7d\x7d\xf6\xa3\x73\xa9\x75\x79\x58\xab\x3b\xbf\x67\x4e\x11\xff\x57\x08\x38\xb0\x11\xdd\x92\xe8\xf8\x5a\x48\x7e\xf4\x33\xc5\x14\x07\xf4\xfa\x36\x3b\xd4\xd6\xcf\x60\xc2\xde\x4c\xf4\xe9\x7f\x65\x8a\xbb\x8f\xa4\x7a\x07\x72\x3f\x4a\x14\xf7\xe1\xb6\xae\xe6\x33\xdd\xfc\x04\xf9\xa6\xce\xc1\xc8\x9e\x99\x33\x19\x46\xc4\xc2\xc8\xb6\xf3\xcf\xe3\x0f\x76\xca\x7a\x9f\x75\x48\xff\x7f\x07\x00\x00\xff\xff\xcd\xe6\x76\xec\x27\x06\x00\x00")

func static_bleve_mapping_partials_analysis_tokenizer_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenizer_html,
		"static-bleve-mapping/partials/analysis/tokenizer.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenizer_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenizer_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenizer.html", size: 1575, mode: os.FileMode(420), modTime: time.Unix(1453267781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenizers_exception_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x54\xcd\x8e\xdb\x3c\x0c\xbc\xe7\x29\xf8\x19\xdf\x61\x73\xf0\x7a\xb7\x67\xc7\x40\x51\xf4\xd0\x43\xb7\xc5\xa2\x2f\xa0\x58\x8c\x4d\x44\x96\x0c\x89\xce\x4f\x83\xbc\x7b\x65\x2b\xfe\xcb\x26\x69\x0f\x06\x04\x99\x1c\x0e\x39\x43\xa5\x92\x76\x90\x2b\xe1\xdc\x2a\xda\x18\x5b\xc5\x85\x35\x4d\x1d\x65\x0b\x80\x54\x89\x35\xaa\xec\xeb\x21\xc7\x9a\xc9\x68\xf8\x29\x98\xd1\x6a\x97\x26\xe1\x4f\x1b\xd3\xa8\x3e\x5b\x91\xe3\x4b\x36\xe8\x22\x76\xa5\xd9\xaf\x22\x36\x5b\xd4\xf4\x1b\xed\x33\xf6\x30\xee\x59\xa1\x2e\xb8\x84\x14\x5e\xbb\x3a\x6d\x25\xfa\x88\x12\x13\x63\x15\x65\x6f\x46\xa3\x2f\x48\x5d\xb5\xa4\x79\x50\xb5\x83\x82\x7f\xab\x9d\xc1\x4b\x1f\xdf\x50\xec\x8c\x65\xb1\x56\x38\x22\x54\x46\xa2\xba\x0d\xf1\x77\xce\x17\x98\x0e\xc8\x62\x8d\x82\x57\x11\x02\x69\xb8\x05\x07\x6c\x45\xbe\x85\xf5\x11\xfe\x27\x2d\xf1\x70\x81\xf7\x05\x5c\x2d\x74\x5f\xa2\x50\xc7\xba\xa4\xdc\x8b\x30\x9c\xe2\x8a\x74\xe3\xd9\xa4\x49\x1b\x98\xc1\xe9\x04\x08\xe7\xf3\x2c\xdb\x13\xa0\xcd\x2a\xfa\x6f\x47\xb8\xff\xa1\xd5\xf1\xbb\x91\x42\x8d\xfc\x2e\x1c\x73\x45\xf9\x76\x15\x59\xac\xcc\x0e\x07\xb9\x9f\x02\x9f\xe5\x3c\xfc\x01\x9f\x90\x0f\x75\xa3\x54\x6c\xa9\x28\x79\xe0\x16\x06\x36\x13\x31\x4d\xbc\xf1\xb2\xc5\xa2\xf3\xdf\x7d\x9a\xb7\x9d\x39\x78\x73\xe2\x44\x7f\x37\xb1\x72\x6e\x54\xec\xaa\xf8\xf5\x65\x1c\x27\xe9\xba\xe1\x89\xb6\x1a\xf7\x16\x0b\x3c\x78\xbb\xf2\xb1\x46\x2f\x36\x1e\x78\xde\xec\xac\xbc\x6f\x91\xad\xb9\x9a\x1e\x90\xf4\xda\xf6\x23\x7b\x0f\x78\x49\xdf\x70\xd7\xe2\x1d\x6a\x9f\x46\x66\xeb\x86\xd9\xe8\x89\x12\x42\xca\x51\x06\x2e\xc9\x2d\x7b\x8e\x21\xf4\x8a\x43\x8f\xbc\x66\x0d\xfe\x8b\x25\x6e\x44\xa3\x78\xa6\xc4\x67\x29\xd3\x24\x64\xcf\xd8\xcd\x74\x78\xf4\x0e\x80\xbf\xf5\xcc\xb4\x50\x47\x6f\xe0\x5f\xbd\x93\xa3\x6c\x38\xb6\x11\xf0\x8e\x95\x20\x4d\xba\x80\x6f\xed\xbc\xa7\x4f\x85\x43\x85\x79\xa7\x80\x24\xd7\xae\x9b\x1f\xdd\x5d\x63\xb6\xc3\x28\x85\x2e\x70\xb2\x84\x5f\xba\x0b\xf9\xb4\xbc\x0a\xfc\xb0\xac\xc3\x29\xba\xa9\x60\x27\xda\x18\x73\x99\x87\x09\x8f\xdc\x64\x67\x87\x90\xd9\xee\xbe\x89\x0a\xfd\xda\x9d\x4e\xc3\xcd\xf9\x9c\x26\x21\x3b\xf8\x3b\x34\x3a\xcc\xf6\x4f\x00\x00\x00\xff\xff\xda\x98\xef\xe8\x63\x05\x00\x00")

func static_bleve_mapping_partials_analysis_tokenizers_exception_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenizers_exception_html,
		"static-bleve-mapping/partials/analysis/tokenizers/exception.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenizers_exception_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenizers_exception_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenizers/exception.html", size: 1379, mode: os.FileMode(420), modTime: time.Unix(1457977523, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenizers_generic_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func static_bleve_mapping_partials_analysis_tokenizers_generic_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenizers_generic_html,
		"static-bleve-mapping/partials/analysis/tokenizers/generic.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenizers_generic_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenizers_generic_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenizers/generic.html", size: 0, mode: os.FileMode(420), modTime: time.Unix(1453267781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenizers_regexp_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x90\xc1\x0e\x82\x30\x0c\x86\xef\x3e\xc5\xb2\x3b\xf2\x02\x83\x9b\x47\x63\xe2\x1b\x0c\x56\x71\xb1\xac\x4b\x37\x10\x7c\x7a\x1b\x24\x51\x22\xff\xa5\x87\x7e\xed\x9f\xff\x57\x22\xe3\xfc\xa8\x5a\xb4\x29\x55\xfa\x46\xdc\x17\x1d\xd3\x10\x75\x7d\x50\xab\x0c\xda\x06\x50\xc9\xae\xd2\x99\x1e\x10\xfc\x0b\xf8\x0a\x1d\x4c\x42\xc9\x1c\xd0\xb2\x3a\x4d\x91\x21\x25\x4f\xc1\x94\x0b\xff\xbd\x5f\x7e\xf8\x10\x87\xac\x42\x57\x38\x9f\x6c\x83\xe0\x2a\x3d\x7a\x78\x5e\x02\xce\x67\x72\x16\xf5\x06\x5f\x25\x78\x4f\x0e\xf0\xc7\xf7\xc8\x1f\xe3\x3d\x3c\xcf\x11\x04\x85\x29\xeb\x4d\xa0\x96\x42\x66\xda\xb7\xf0\xee\x3f\x94\x8a\x68\x5b\xb8\x13\x3a\x90\xc8\x6b\x13\xa6\x94\x9e\xea\x77\x00\x00\x00\xff\xff\xcd\x92\xc8\xf0\x31\x01\x00\x00")

func static_bleve_mapping_partials_analysis_tokenizers_regexp_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenizers_regexp_html,
		"static-bleve-mapping/partials/analysis/tokenizers/regexp.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenizers_regexp_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenizers_regexp_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenizers/regexp.html", size: 305, mode: os.FileMode(420), modTime: time.Unix(1453267781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenizers_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x54\x4d\x8f\xdb\x20\x10\xbd\xe7\x57\x50\x4e\x1b\xa9\x76\x54\xf5\x8a\x7d\x6a\x8f\xbb\xbd\x6c\x7f\x00\x31\xb3\x36\x0a\x0b\x08\xc6\x49\xdc\xd5\xfe\xf7\x0e\x24\xfe\x48\x36\xea\xb6\x55\xd5\x28\xb2\x1f\x63\x78\xbc\x79\xc3\x20\x50\x6e\x0d\xb0\xc6\xc8\x18\x2b\x7e\x1a\xe4\x67\x11\x31\x68\x0f\x8a\xd7\x2b\xc6\x04\x76\x20\x55\x42\x09\x87\x13\xc8\xe1\xfa\x41\x3e\x83\xd8\x10\x58\xc4\x1e\x07\xff\x26\x36\x8f\x09\x65\x86\x14\x39\xb3\x0a\xdc\x3a\x35\x4c\xfc\xcc\xb6\x45\x00\x0f\x12\x2b\x7e\x87\x96\x76\xf8\x88\x7b\x69\xd6\x4c\x5b\xfa\x2b\x38\xde\x4b\xef\xb5\x6d\x4b\x69\xa5\x19\xa2\x8e\x25\xba\x1d\x58\xfd\x03\x42\xe4\xf3\xa6\xaa\x16\x32\x51\x35\x46\x37\xbb\x8a\x83\xd2\xf8\x38\xce\x3b\xd3\xb2\xc4\x4b\xcf\xd0\xc3\x9a\xd7\x2f\x2f\x39\xfa\xfa\x2a\x36\x32\x09\x56\x4b\x2e\xfa\x48\x73\x4b\xa4\xdc\xd2\x84\xcb\x8f\x67\x48\x03\xa5\xf7\xa3\x9b\x5b\xb4\x45\x1b\x5c\xef\xd9\x84\x8a\x63\xe4\x2c\x38\x03\x15\xcf\x63\x3e\xaf\xa4\xb5\xdb\x1e\xd1\xd9\x24\x59\x3f\x55\xfc\xc3\x5e\xc3\xe1\x9b\x35\xc3\xbd\x53\xd2\xf0\xc5\xc4\xf1\xf7\x1b\xb9\xad\x39\x4b\x8a\x49\x4c\xe6\xbe\xc5\x32\xab\xcd\x3a\x15\x3c\xc9\xde\x60\xc6\xc7\x78\x21\x90\x24\x46\x2f\xed\xb8\xa2\x35\x83\xef\x74\x43\x8a\x27\x54\x24\x21\xb7\x36\x91\x41\xcb\xa2\xd3\x4a\x81\xa5\x63\x46\x76\x73\x32\x38\x91\xd5\xec\x2b\x2d\x59\xba\xb0\x39\x49\xfd\x47\xce\x28\x30\x80\x70\xe5\xcd\xff\x76\x05\x83\x8c\xdd\x1f\xda\xf2\x25\x0b\xff\xa5\x31\x62\x43\xa7\x6d\x3a\x86\xd3\x91\x1c\x1b\x6c\xea\xa5\xd8\xb9\x43\xc5\xbf\xa3\x36\xb1\xdc\xc1\x10\xef\xde\x6b\xa2\x75\x69\xc0\xb6\xd8\x31\xc1\x3e\x2d\x1b\x8a\x35\xce\x24\x75\x15\xff\xcc\xeb\x07\x67\xe1\xed\xa6\xf4\x1e\x7b\x59\xe0\x93\x73\x78\xe3\xd6\xb8\xe4\x59\xfd\x65\x95\xe7\x1a\x5b\x38\xcc\x05\x7e\xb7\xb6\x57\x95\x8d\xcf\x17\x05\xf6\xbd\x31\x45\xd0\x6d\x87\x94\x21\x1c\xd8\x44\x7c\x6d\xff\xcd\xd4\x4f\x09\x13\x48\x57\x68\xbd\x5a\xfd\x0c\x00\x00\xff\xff\x3a\x2b\x4b\xb4\x5f\x05\x00\x00")

func static_bleve_mapping_partials_analysis_tokenizers_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenizers_html,
		"static-bleve-mapping/partials/analysis/tokenizers.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenizers_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenizers_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenizers.html", size: 1375, mode: os.FileMode(420), modTime: time.Unix(1453267781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_wordlist_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x55\x5f\x6f\x9b\x30\x10\x7f\xcf\xa7\x70\xfd\x94\x4a\xa3\x68\xaa\xf6\x30\x09\x90\xa6\xbe\xae\x9d\xb4\x3d\xec\xd9\xe0\x0b\x58\x35\x36\xb2\x4d\xd2\xac\xea\x77\xdf\xd9\x90\xc6\x50\x92\xac\xd5\x2c\x25\x71\xb8\xe3\xee\xf7\xe7\x0c\x19\x17\x5b\x52\x49\x66\x6d\x4e\x4b\x09\x5b\xb8\xd7\x9c\x49\x5a\xac\x56\x71\xa4\xf5\x17\x93\x06\x18\x07\x83\x31\x82\x2b\x6b\x6e\xa7\x51\x27\x9c\x04\x5a\xdc\xf5\xd6\xe9\x96\xfc\xd6\x86\x93\xef\xc2\xba\x2c\x6d\x6e\x8b\x55\x96\x62\xb5\xc5\xa2\xa5\xe6\xfb\x43\x49\x1f\x54\x75\x62\x1b\xbd\xcb\x29\x18\xa3\xcd\x3d\x58\xcb\x6a\xa0\x21\x1e\xd6\x78\x33\x93\x60\x1c\x09\xdf\x09\x67\xaa\x06\xe3\xef\xac\xa4\x66\x8f\x51\xb2\xd1\x12\xc6\x5c\x5a\x90\xe7\xe7\xb8\xe6\xcb\xcb\xd0\x74\x44\x16\xf6\x1b\x6d\xda\x43\x07\xbf\xa7\x63\x85\xb0\x2f\x5e\xeb\xc6\x2c\x7c\x28\xa9\x8d\xee\xbb\x28\x21\x24\x49\x56\x82\x24\x18\xcf\xa9\x53\xac\x45\x6d\x1e\xf0\x3b\x4b\xc3\xf5\x59\xae\x50\x5d\xef\x3c\x03\x2e\x2c\x43\x1f\x78\x4e\xb7\x02\x76\x3f\x94\xdc\x0f\x86\x4c\xd2\xc7\x85\xe9\xa8\x21\xc8\x9c\x86\xf2\xc4\xed\x3b\xc4\xea\xe0\xc9\x2d\xa6\xc7\x80\x2b\xad\x1c\x52\xa3\x44\xf0\x03\x3a\xd2\x49\x56\x41\xa3\x25\x7a\x9c\xd3\x87\x00\xf8\xc8\x38\x52\xe9\x43\x0a\xec\x70\x1e\x2c\x2d\xfc\x58\xd8\x65\x09\x2c\x48\xa8\xde\xad\x41\x24\xc2\x50\x00\x78\xe8\x41\x49\xdb\x4b\x27\x3a\x09\x21\x63\xdc\x23\x57\xd3\xc3\x72\x21\xaf\xc4\x80\x92\x58\xf1\x07\x53\xbf\xd0\x45\xc9\x4e\xa1\xd0\x9d\x13\x5a\x61\xb6\xe0\x4f\x84\x59\xe2\x6b\x79\xee\x64\x8d\x17\x3e\x85\xbf\xd7\x44\x28\x32\x2a\x31\x25\x9f\x0e\xe0\x2f\x08\x8e\x5d\xc4\x26\xa7\x57\xe7\x64\x79\x97\x29\x0d\xc3\x73\xb1\x6c\x47\x64\x70\xa5\x65\x62\xdb\xe4\xeb\xac\x52\x3c\xb6\xa3\x05\xbe\x2b\x67\x8e\xdd\x28\xd8\x79\x1b\x2e\xce\xe4\x99\xa9\x7c\x2d\x31\x99\x4b\xaf\xde\x1b\xf1\x82\x54\x17\xd0\xdf\xbe\x41\x8f\x69\x65\xef\x9c\x56\xc3\x93\x43\x54\x8f\xf8\xa8\xe0\x61\x7c\xd6\xd7\x27\xd0\xe2\x1a\x18\xd9\xbe\x6c\xc5\x29\x4e\x47\x5a\xa5\x53\x04\x3f\x08\x20\xfc\x70\xd8\x30\x1c\x45\x5a\x7c\xe3\x3c\x4b\x87\xee\xff\x02\xcb\x40\xab\xb7\x10\x06\x7b\x3d\x19\xf3\x33\x38\x27\x07\x69\x72\xd3\x8d\x04\x55\xbb\x86\x64\xe4\xf3\x25\x9a\x03\x92\x0f\xd2\x24\x5d\x2f\x65\x62\x44\xdd\x20\xe3\x9f\x81\xc2\x32\xe9\x99\x83\xd1\xdf\x2c\xf5\x83\x71\xee\xfd\xb1\xd1\xda\x1d\x5f\x4a\x47\xe5\xfc\x41\x99\x9e\x93\x39\xd8\x83\x19\xab\x99\x6a\xa3\xe6\x15\x53\x15\x48\x9c\x84\xe2\x4e\x6a\x3b\x43\x3e\x6b\x74\xf5\xbf\x3a\x85\xdd\x7b\x5a\x9d\x28\x59\xf6\x42\xf2\xb5\x7f\xae\xcf\x26\x64\x62\xeb\x1c\x67\x67\x44\xcb\xcc\x7e\xe2\xdb\x2f\x16\xbb\xf6\xea\xc3\xf0\xfb\x37\x00\x00\xff\xff\xee\x38\xbb\x9d\x3e\x08\x00\x00")

func static_bleve_mapping_partials_analysis_wordlist_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_wordlist_html,
		"static-bleve-mapping/partials/analysis/wordlist.html",
	)
}

func static_bleve_mapping_partials_analysis_wordlist_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_wordlist_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/wordlist.html", size: 2110, mode: os.FileMode(420), modTime: time.Unix(1457735468, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_wordlist_html_ = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x55\x51\x6f\x9b\x3c\x14\x7d\xcf\xaf\x70\xfd\xd4\x4a\x1f\x1f\x9a\xaa\x3d\x4c\x02\xa4\xa9\xaf\x6b\x27\x6d\x0f\x7b\x76\xf0\x0d\x58\x35\x36\xb2\x4d\xd2\xac\xea\x7f\xdf\xb5\x81\xc4\x50\x92\x2c\xd3\x66\x29\xc1\xe0\xc3\xb9\xe7\x9e\x7b\x6d\x32\x2e\xb6\xa4\x94\xcc\xda\x9c\xae\x25\x6c\xe1\x51\x73\x26\x69\xb1\x5a\xc5\x2b\x8d\x7f\x98\xd4\xc0\x38\x18\x5c\x23\x38\xb2\xfa\x7e\xba\xea\x84\x93\x40\x8b\x87\xce\x3a\xdd\x90\x1f\xda\x70\xf2\x45\x58\x97\xa5\xf5\x7d\xb1\xca\x52\x64\x5b\x24\x5d\x6b\xbe\x1f\x29\xfd\xa2\xaa\x12\x5b\xeb\x5d\x4e\xc1\x18\x6d\x1e\xc1\x5a\x56\x01\x0d\xeb\x61\x0c\x2f\x33\x09\xc6\x91\xf0\x9f\x70\xa6\x2a\x30\xfe\xcd\x52\x6a\xf6\x1c\x81\x8d\x96\x30\x60\x69\x41\x5e\x5f\x63\xce\xb7\xb7\x3e\xe8\xa0\x2c\xcc\x37\xda\x34\x63\x04\x3f\xa7\x03\x43\x98\x17\x07\xde\x38\x0b\xbf\x94\x54\x46\x77\x6d\x04\x08\x20\xc9\xd6\x20\x09\xae\xe7\xd4\x29\xd6\xa0\x37\x4f\xf8\x9f\xa5\xe1\xf9\x0c\x2b\x54\xdb\x39\x9f\x01\x17\x96\x61\x1d\x78\x4e\xb7\x02\x76\x5f\x95\xdc\xf7\x05\x99\xc0\x87\x81\x70\xf4\x10\x64\x4e\x03\x3d\x71\xfb\x16\xb5\x3a\x78\x71\x8b\xf0\x58\x70\xa9\x95\xc3\xd4\x28\x11\x7c\x54\x47\x5a\xc9\x4a\xa8\xb5\xc4\x1a\xe7\xf4\x29\x08\x3e\x66\x1c\xb9\xf4\x47\x0e\xec\xb0\x1f\x2c\x2d\x7c\x5b\xd8\x65\x0b\x2c\x48\x28\xaf\xf6\x20\x32\xa1\x27\x00\x1e\x62\x50\xd2\x74\xd2\x89\x56\x42\x40\x0c\x73\xcc\xd5\x74\xb0\x4c\xe4\x9d\xe8\x55\x12\x2b\x7e\x22\xf4\x23\x5d\xb4\xec\x94\x0a\xdd\x3a\xa1\x15\xa2\x05\x7f\x21\xcc\x12\xcf\xe5\x73\x27\xb7\xf8\xe0\xbf\x70\x7b\x47\x84\x22\x83\x13\xd3\xe4\xd3\x5e\xfc\x05\xc3\x31\x8a\xd8\xe4\xf4\xe6\x9c\x2d\x57\x15\xa5\x66\xb8\x2f\x96\xcb\x11\x15\xb8\xd4\x32\xb1\x4d\xf2\x69\xc6\x14\xb7\xed\xd8\x87\xb0\xf3\xee\x5f\x6c\xc5\x33\xcd\x78\xa0\x98\xb4\xa3\x37\xed\x9d\x67\xc1\xa1\x0b\xa2\xef\xdf\x89\x46\xd8\xba\x73\x4e\xab\xfe\xc0\x10\xe5\x33\x9e\x10\x3c\x74\xcd\xed\x10\xfc\xee\x84\x68\x1c\x7d\x62\x3d\xc1\x69\xd4\x78\xa0\x3a\x45\xf0\x87\x3a\xc2\x85\xc3\x86\x61\x23\xd2\xe2\x33\xe7\x59\xda\x73\xfc\x8e\x3a\x03\x8d\xde\x42\x10\x78\x46\xd9\x64\xe3\x4c\xf6\xc2\xff\x12\x54\xe5\x6a\x92\x91\x0f\xff\x34\x31\xd2\x76\x52\x26\x46\x54\x35\xe6\xf8\x2d\x88\x5e\x4e\x73\x56\xba\xe8\x36\x4b\x7d\x47\x9c\xfb\x5e\x6c\xb4\x76\xc7\x8f\xd0\xd1\x2b\xbf\x31\xa6\xfb\x62\x2e\x76\xb4\x7f\x35\x73\x6d\x70\xb9\x64\xaa\x04\x89\x0e\x17\x0f\x52\xdb\x99\xf2\x59\xa0\x9b\xbf\x15\x29\xcc\xae\x09\x75\x82\x72\xdd\x09\x89\xed\x8b\x87\xf6\xac\x43\x26\x65\x9d\xeb\x6c\x8d\x68\x98\xd9\x4f\xea\xf6\x9d\xc5\x55\x3b\xd4\xa1\xbf\xfe\x0a\x00\x00\xff\xff\x6b\x59\xea\xdd\x2e\x08\x00\x00")

func static_bleve_mapping_partials_analysis_wordlist_html__bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_wordlist_html_,
		"static-bleve-mapping/partials/analysis/wordlist.html~",
	)
}

func static_bleve_mapping_partials_analysis_wordlist_html_() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_wordlist_html__bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/wordlist.html~", size: 2094, mode: os.FileMode(420), modTime: time.Unix(1453510801, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_wordlists_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x54\xc1\x8e\xd3\x30\x10\xbd\xef\x57\x18\x9f\xb6\x12\x69\x85\xb8\x26\x39\xc1\x8d\x5d\x4e\x88\x23\x9a\xc6\xd3\xc4\xaa\x63\x5b\xf6\xa4\x6d\xb4\xda\x7f\x67\x9c\x6c\xd2\xb4\x14\x16\x10\xa2\xaa\x9a\x67\xa7\xf3\xfc\xe6\xcd\x8c\x73\x82\xad\x41\x51\x19\x88\xb1\x90\xe3\x62\xf8\xcd\x22\x05\xed\x51\xc9\xf2\x4e\x88\x9c\x1a\x04\x95\x50\xc2\x61\x04\xc3\x76\xf9\x08\x2d\xe6\x1b\x06\x8b\xbd\x9f\xaf\x19\x0d\xd1\x69\xe7\x85\x31\xa7\xad\x53\xfd\xcc\x2d\x6c\x9d\x05\xf4\x08\x54\xc8\x7b\x6a\x2d\xd3\xbf\xa5\xf6\x00\x66\x25\xb4\xe5\xaf\xc2\xd3\x03\x78\xaf\x6d\xbd\x06\x0b\xa6\x8f\x3a\xae\xc9\xed\xd1\x7e\x6b\xc1\x47\x79\x3e\x56\x95\x39\x24\xb2\xca\xe8\x6a\x5f\x48\x54\x9a\xbe\xba\xa0\x3e\xe9\x48\x13\xaf\x18\x88\xf9\x11\x3a\x5c\xc9\xf2\xe9\x69\xdc\x7f\x7e\xce\x37\x90\x44\xab\x25\xdb\xf2\xed\xe5\x9b\x17\xc8\x0b\xa5\x0f\x93\x95\x5b\xb2\x59\x1d\x5c\xe7\xc5\x8c\xb2\x53\x94\x22\x38\x83\x85\x1c\xd6\xf2\x1c\xc9\xb1\xdb\x8e\xc8\xd9\xa4\x58\xef\x0a\xf9\xe6\xa0\xf1\xf8\xd9\x9a\xfe\xc1\x29\x30\x72\xf1\xc7\xe9\xf3\x3b\xa9\xad\xa4\xa0\xde\xf3\x79\x23\xf9\x2d\x9a\xb3\xdc\x41\xa8\xc2\x1d\x74\x86\x06\x7c\x8a\x17\x0a\x59\x63\xf4\x60\xa7\x88\xda\xf4\xbe\xd1\x15\x4b\x9e\x51\x96\x94\xdc\x3a\x04\x82\x86\xac\xd1\x4a\xa1\xe5\x26\x63\xb7\x25\xdb\x9b\xc8\x4a\xf1\x91\x43\x96\x36\x6c\x46\xa9\xff\xc8\x1a\x85\x06\x09\xaf\xcc\xf9\xdf\xae\x50\x80\xd8\xfc\xa1\x2d\x1f\x06\xe1\xbf\x34\x26\xdf\x70\xbb\xcd\x7d\x38\xf7\xe4\x34\x62\xf3\x34\xc5\xc6\x1d\x0b\xf9\x85\xb4\x89\xeb\x3d\xf6\xf1\xfe\xb5\x21\x5a\xad\x0d\xda\x9a\x1a\x91\x8b\x77\xcb\x81\x12\x95\x33\x49\x5d\x21\xdf\xcb\xf2\xd1\x59\xfc\xf1\x50\x7e\x4e\xd3\x9c\xd3\xce\x39\xba\x71\x67\x5c\xf2\xdc\xfd\x65\x95\xcf\x35\xb6\x78\x9c\x0b\xfc\x6a\x69\xaf\x0a\x1b\xdb\x8b\xfa\xfa\xce\x98\x2c\xe8\xba\x21\x4e\x10\x8f\x22\xf1\x8a\x44\x7c\xed\xfe\xcd\xcc\xc7\x7c\x19\xa4\xfb\xb3\xbc\xfb\x1e\x00\x00\xff\xff\xf6\x28\xd5\xa9\x5b\x05\x00\x00")

func static_bleve_mapping_partials_analysis_wordlists_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_wordlists_html,
		"static-bleve-mapping/partials/analysis/wordlists.html",
	)
}

func static_bleve_mapping_partials_analysis_wordlists_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_wordlists_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/wordlists.html", size: 1371, mode: os.FileMode(420), modTime: time.Unix(1453570604, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_mapping_index_mapping_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x58\xdf\x6f\xe2\x38\x10\x7e\xef\x5f\xe1\xe6\x85\x3b\x9d\xd2\xe8\xee\xf1\x04\x48\x2d\x55\xb5\x2b\xed\x8f\x4a\xad\xb4\x8f\xc8\xd8\x86\x58\x75\xe2\xc8\x76\x80\x74\xb5\xff\xfb\x8e\x13\x27\x0d\x10\x20\x40\xa0\xdd\x3e\x34\x89\x33\x9e\xf9\xbe\xcf\x33\x13\x9b\x3e\xe5\x73\x44\x04\xd6\x7a\xe0\xf1\x98\xb2\xe5\x57\x9c\x24\x3c\x9e\x79\xc3\xab\xfc\x55\x3c\xf3\xdd\xdb\x9f\xbd\x39\x67\x8b\xef\xb1\xc8\x7a\xff\xa3\xf2\xf6\x17\xd8\x5d\xf5\xaf\x7d\x1f\x0d\x8e\xfb\x43\xbe\x6f\x3d\xd4\x50\x68\x46\x0c\x97\xb1\xd7\x3c\xfc\x89\x61\xca\x14\xd2\xa1\x5c\x3c\x67\x09\x73\x68\xf5\x53\x35\x09\xa1\xfa\x2c\x25\x17\xf9\xd8\xea\x28\x91\xc2\xd7\x91\xff\xef\x7f\xee\x1d\xbc\xc5\x96\xa9\xf5\x3a\xf0\xae\xb7\x39\x77\xb6\xf0\x97\xab\xc2\xc9\x0b\xc0\x6a\xb6\x45\x03\x64\x54\xca\x2a\xff\x10\x81\x97\xd1\x67\x22\x4b\x42\x4e\xc0\xa8\xba\xf3\x49\xc8\xe6\x0a\xae\x8a\xcf\x42\xe3\x0d\xfb\x01\xaf\xcd\x14\x78\xc2\xc4\xd0\x46\x41\x65\x98\x7e\x50\x0c\x96\xf0\x03\xdc\xc4\xa4\x1b\x22\x53\x2c\xf4\xe1\x4c\xa8\x5c\xc4\x27\x10\xe9\x07\xb0\x5e\xf9\x6a\x16\x37\xee\xd2\x94\x12\x77\x92\x66\xc8\x6c\xa1\xb9\x57\x8b\x86\x8c\x41\x8c\x72\x83\x27\x82\xb5\x4b\x9d\x49\x6a\x0c\x48\xe0\x0c\x92\x54\x88\x62\x19\x11\xa6\xb4\x16\xb1\xa6\xfa\x9a\xf4\x60\x37\x0a\xb9\xa0\xce\xf0\xaf\x18\x5c\xfc\xed\x0d\x6f\x29\x45\x75\xad\xfa\x41\x11\xa9\x59\xa0\x63\x13\xdf\x15\x39\x8f\x89\x48\x29\x03\x9d\x0c\x36\x9c\x8c\x13\xc5\xa6\x7c\x89\xfe\x41\xbd\x20\xc1\xca\x70\xc8\x81\x20\x2a\x70\x04\x56\x6b\xdf\x3d\xdc\x84\x26\x12\x3d\xbb\xd0\x0e\xce\x8e\xa5\x2b\xaf\xef\xd3\x2e\x6e\x63\x2c\xb2\x57\xa6\xba\xef\x15\x1b\x9e\xb7\xd5\xd7\xba\xe1\x19\xba\x44\x15\xa2\x7d\x87\x38\x05\x7e\xd7\xbd\x61\x2f\xfc\x43\xfb\x02\x6e\x22\xb7\x9b\xfe\xd1\x79\xb1\x5a\x4a\x48\x2b\xb2\xb3\x9c\x72\x68\x9a\xbb\x1b\x8b\xe0\xcf\x29\xa6\x07\x2e\xcc\x39\x4a\x69\xcd\xef\xb6\x4c\x5c\x35\x3b\x43\x19\x8d\x52\x6d\x64\x84\x5c\x9c\xf6\xb5\x74\x2c\xfe\xae\xeb\xa8\x1d\xfe\x43\x8b\x69\xba\xc9\x6e\x17\xfb\xa3\xb3\x22\xe5\x13\x1f\x3e\xc0\x9a\x99\x1a\x31\x37\x88\x42\xc8\x42\xf8\xf0\x0c\xbc\x51\x88\x15\x26\x10\xb0\xa4\x59\xd3\xef\x84\x6a\x24\xe0\xd6\x11\x6d\xa8\xc7\x42\x36\x87\x65\x17\xba\x67\xf9\xc2\x62\xfe\xda\x19\x2c\x53\xf9\x3b\x19\x55\xb7\x7a\xe5\xc0\x3a\x10\xec\x87\x54\x14\x7d\xe1\xda\x74\x84\x6b\x01\xfe\x84\x75\xd7\x16\x54\x35\x50\xe5\xdd\x07\x6d\xbe\x8f\x4a\x26\x0c\xe8\xb2\xee\xfb\xef\xa6\xeb\x6d\x2d\x6c\xc3\xf2\x1c\x9b\x19\x3a\xc7\x31\x61\xb4\x7d\xff\x3d\x0d\x7f\xe7\xbb\x99\x3d\xf8\x0f\xed\xbf\x49\x23\xbb\x3d\x02\x9c\xb4\x9d\x71\x6f\xa7\x52\x45\xfe\x4c\xc9\x34\xf1\x9a\x8f\x73\x0f\x9c\x89\x75\x9a\x56\xbf\x38\x49\x4d\x7e\x36\x1b\x78\x86\x2d\x8d\xb7\xe2\x10\x44\x34\x4a\x8a\xf5\x83\x91\x25\x44\xb9\xb6\x07\x30\x3a\xf0\xca\x5f\x1a\x9a\xac\x22\x49\x99\x58\xfd\xdd\xe2\xc6\x06\x1b\x4f\x2d\x9c\x8d\x19\x89\xc0\x84\x85\x52\x40\x1d\xc1\x39\xed\xed\xc1\x0b\xde\x56\xa6\xd6\x22\xda\x0a\x70\xcf\xa6\x38\x15\x26\x3f\xab\x7d\x08\x09\x68\x01\x68\x6c\x83\x5e\x5a\x84\x72\x37\xbd\x29\x84\x66\x02\x32\xb2\x25\xb3\x7d\xd4\xca\x2d\x73\xe3\x44\x99\xd8\xc4\x07\xc0\x70\x04\xd7\xc8\x20\xc0\x0d\xff\x79\x5c\x1d\x06\xbe\xe1\x88\xe9\xcd\xa9\x4d\x0b\x53\xff\x5e\x14\x0c\x3a\x91\xe9\x1e\x1b\x16\x3c\xf3\x88\xa1\x47\xac\xf4\xd9\xe5\xa2\x10\xce\x40\xb4\x71\x92\x47\x3b\x4c\x35\x3b\xd9\x42\x2d\x90\xbe\xbf\x76\x1f\xa7\xd7\x94\xf2\x5e\xb4\xdd\xdc\x65\x86\xa1\x5b\xa5\x70\x86\x46\x32\x9e\x43\xb3\x3f\x5b\xfa\x4c\x20\xd4\x18\xdb\x50\x63\x52\x86\x3a\x2c\x77\xac\x87\x1c\x6b\x05\xf5\xfd\xf2\xe7\xc9\x48\xc5\xd0\x7d\x16\xe3\x88\x93\x22\x8b\xd6\x4f\x46\x6b\x69\x04\x5f\x78\xf2\x32\x91\x4b\x6f\x8b\x8e\xdb\x74\xd3\x36\xd2\x98\x16\x91\x4e\x5c\xee\xcf\xd6\xf1\x45\x50\xe7\x0f\x3b\x51\x5f\x60\x3f\xbc\xe2\xf8\x77\x00\x00\x00\xff\xff\xff\x00\xae\x42\x9d\x18\x00\x00")

func static_bleve_mapping_partials_mapping_index_mapping_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_mapping_index_mapping_html,
		"static-bleve-mapping/partials/mapping/index-mapping.html",
	)
}

func static_bleve_mapping_partials_mapping_index_mapping_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_mapping_index_mapping_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/mapping/index-mapping.html", size: 6301, mode: os.FileMode(420), modTime: time.Unix(1457454517, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_mapping_type_mapping_tree_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x58\x49\x6f\x1b\xb7\x17\xbf\xe7\x53\x30\x3a\x44\x09\xfe\x7f\x45\xf7\x22\x12\x50\xb8\x08\x7a\x49\xe1\x83\xef\x02\x3d\x43\x49\x84\x29\xce\x60\x48\xb9\x56\x1d\x7d\xf7\xf2\x71\x19\x71\x9d\x25\xf6\xa1\x03\xd8\x9a\x85\x6f\xfb\xf1\xf1\x6d\xdf\x6a\xfa\xbc\xfd\x80\x10\xfc\xa2\x33\x5d\xc9\x8e\x90\xd5\x11\xf3\x9a\x11\xf5\x56\x5f\x15\xc3\x42\x6c\x16\x27\xdc\xb6\x94\x1f\xfe\xd4\xdf\x16\x5b\xfd\xf5\x9b\x68\x31\x47\xfc\xb0\xa2\xfb\x7e\xc1\xd7\xdd\x13\xe5\x35\xda\x6c\xd0\xd2\xbe\x79\xb8\xb4\x64\x69\x29\x14\x0d\x75\x1c\x0f\xec\xd2\x1e\x69\xd5\x70\xd4\xdf\xad\xf6\x14\x98\x7f\x5b\x53\xf5\x07\xcc\x47\xe5\x7c\x2c\xc9\x79\xbd\x1a\x52\xcb\xa6\xcc\x87\xe3\x13\x01\x75\xf9\x99\x31\x4f\xcb\x6d\x4d\xf6\xf8\xcc\x24\xe8\x32\xc2\xe9\x63\xaf\x12\xa9\xa9\x54\x37\x37\x36\x25\x81\xfd\x0a\xa5\xe8\xab\xff\xe1\x7a\x75\xa4\xbe\x38\xc7\xc9\x22\x87\xa5\xec\x84\xc7\x22\xaf\x0d\xe1\xf8\x91\x91\x7a\xb1\xfd\x89\x6a\x2a\xf4\xbd\x0f\x6a\x51\x3f\x4b\x87\x3e\x7d\x42\xee\x95\xc5\x62\x87\x39\x66\x97\x7f\x48\xe7\xc9\x46\xe8\xa7\x67\x42\xbc\xf0\x7a\x9d\x2b\xb2\x57\xbf\xbe\x28\x3c\x68\x15\x89\x6a\x38\xbb\x20\xb5\xf1\xe4\x05\x89\x96\x54\x74\x4f\x15\x99\xfa\xc7\x6a\x11\x4a\x0a\xfc\x67\xd4\x97\xec\xc6\xf9\x36\x6b\xbf\xf8\x68\xfd\xc2\xd3\xa1\xc6\x12\xaf\x78\x53\x77\xf8\x70\xf3\x16\xde\x9e\xe5\xc4\x83\xe0\xb1\x52\x97\x54\xef\x36\x0b\x49\x5e\xe4\x02\xb5\x0c\x57\xe4\xd8\xb0\x9a\x74\x9b\x45\xcb\x08\x16\x04\x11\x2e\x49\x87\xb0\x5e\x87\xb4\xe7\x84\xf4\x4a\xe6\xa9\xa9\x09\x8b\xdc\x6b\x3d\x53\xb5\x5f\x55\xab\xed\x9a\x96\x74\xf2\x32\x5f\xb5\xd1\x3d\xc9\xb8\x61\xe6\x7c\x11\x46\x2a\x99\x11\x95\x78\x6c\xa8\x1b\x50\x34\xad\xa4\x0d\x57\xc7\x49\x22\x2c\x90\x44\xfb\xa6\x53\xff\x29\x47\x8e\xe6\x2f\xa5\x6e\x70\xcc\x0c\x05\x7a\xc6\xec\xac\xd0\x59\x6c\x29\x3f\x92\x8e\xaa\x10\x61\x3e\x78\xae\xa7\xd5\x1a\x8d\x1b\xce\x1c\x4f\x37\xef\x84\xdf\x35\x5c\x76\x0d\x13\x08\x96\x01\x16\x37\xb3\xb1\x5b\xd7\x2a\xe7\x5c\x75\xf4\x70\x94\xe8\x51\x72\xf8\x5b\xbd\x08\x8f\x9f\xe7\xac\x1f\x7c\xdb\x33\x40\x2f\x82\x05\x15\xa3\xd5\x93\xe2\xdf\xb4\xe7\xf6\xa1\x39\x1c\x18\xf9\x6c\xd7\x7f\xf1\x4f\xe4\x70\x34\x6f\xd9\x59\xb8\x68\x8e\x7b\xe5\x21\xd5\xa4\xea\x6b\x49\x60\x32\xa6\x3c\xda\xae\xac\x11\x45\x33\xbc\xfd\x02\x49\x6a\x95\x38\x36\x7f\x5b\x53\xc0\xe7\x2d\x41\xe4\x11\x4e\x23\x58\x15\xc4\x1c\x97\x22\xbd\x37\xd8\x43\x08\xd7\xf5\xdd\x91\xb2\xfa\x87\xe1\x9a\x45\xc9\x5c\x94\x0b\x75\x54\x50\x05\xab\x9d\x12\x1e\x2e\xc6\x57\x22\x61\x13\x85\x7f\x87\x00\x38\x55\xb4\x8e\x96\xc3\x82\x83\xc7\xf0\x61\xd8\xf5\xf4\x0f\xf8\xeb\x04\x1f\xb4\x36\xc0\xea\xdf\x21\xa1\xfd\x8a\x83\x11\x5e\x51\x16\xb9\x58\x31\xb2\xb8\x20\x9f\xf7\x81\xcc\xc9\x1b\x0b\xfb\x6f\x3e\x86\x31\x04\x7f\x34\xbc\x3f\x67\xff\x47\x7b\xcc\x04\x99\x81\x46\x47\x4e\xcd\x33\x49\x0f\xdc\x84\x2d\x13\xe7\xaa\x22\xe2\xed\x2a\xcb\xee\x3c\x47\xe3\xe6\x29\xa7\x6d\x29\x39\x6f\xd4\xc6\x81\x80\x09\x59\x7a\xd4\x60\xd9\x61\x71\x9c\x6e\xae\x81\xf6\x7b\xd7\x9c\xee\x71\xa7\x92\x9f\x67\xf1\x91\x8a\x19\x16\x1b\xb9\x79\x87\x35\x0f\x36\x68\xe5\x10\x48\x0d\xd4\xdb\xd0\x11\x8c\xdc\xcd\x8f\xc4\xb1\x73\x8e\xcb\xf0\x23\x61\x5b\x5b\x1b\x98\x5c\x5f\x1d\x49\xf5\xf4\xd8\xbc\xc4\x89\xb2\x47\x22\x4a\xb0\x2e\xdc\xae\xa3\x60\x63\xdf\xf7\xb1\xc3\x88\x0a\x04\x8f\x47\x6e\x0b\xe4\x1c\xf5\x28\xa7\xd2\x43\xac\x2f\x0e\xef\x80\x50\x95\x11\x9b\xb4\xb2\x9c\x68\x69\xc2\xab\x48\x58\xa9\xce\xe9\x40\xbc\x22\xc4\x08\xf2\x65\xa7\xcc\x62\x00\x07\x2a\xdc\x1c\xa8\x7d\x74\xb6\x37\x70\xd7\xb0\xbe\x97\x53\x1b\x4f\x1c\xdd\x70\xde\x4f\x0d\x37\x42\xdd\x77\xed\x47\x66\x33\xf4\x87\x5b\xae\xb6\x8a\x30\x0a\x3c\x3a\xd2\x12\x2c\xed\x1a\xa8\xa6\xf2\xdc\x50\xa0\x61\xff\xd2\xba\xb5\x5e\x7b\x5b\xaa\xcf\xa1\xfe\xf0\xba\xb4\x47\x61\xf9\x9b\xc1\xa4\x3f\x1b\xd7\x45\x50\x60\xe4\x7b\xd9\x58\x44\xd0\xcd\x6a\xda\xa0\x3e\x0b\x25\x04\xfe\xf9\xfa\x6a\x3e\xba\x02\xb8\xef\xdb\x6e\x5c\x0a\xcd\x5a\x22\xc6\x30\x02\x64\xa1\x55\x73\x8c\xe1\x39\xed\x9e\x06\x88\x75\x2b\xec\x1a\xbd\x65\x52\x03\x64\xa8\x5c\xec\x0c\x2d\x49\xab\x07\xd5\x76\x09\x82\x3b\xe5\xdd\x8a\x35\xd4\xca\xaa\x3b\x76\x6a\x9a\x9e\xb5\x6f\x92\x3d\x79\x19\xcd\xb3\x5a\xb8\x6a\x1b\xa2\xba\x67\x0d\x34\x27\xd0\x7f\xa4\x96\x98\x8e\x33\x24\x0e\xe0\x9f\x25\x5e\x9f\x34\x00\x5e\xdf\x4c\x26\x13\xb2\xe9\xf4\x7e\xe9\x9b\x19\xd2\x2a\x76\xae\xc9\x8e\xf2\x1d\x86\x71\x03\x88\xd5\x6f\xe0\xa4\x28\x58\xe1\x2d\x80\xe9\x8a\xb4\x99\x6c\x55\x53\x76\xda\x3d\xab\xd6\xa3\xe9\xc4\x2c\x3c\x9d\x16\xc0\x00\x59\x06\x13\x10\x4d\xdf\x25\xed\xfe\x50\xfb\x1f\x9d\xaf\x48\x60\x26\x71\x69\x0e\x41\x46\xf1\xb8\x6e\x8b\x98\x05\x99\x44\x37\xb5\xb9\x08\x3e\xd4\xe7\x9a\x68\x96\x69\x72\xcd\x75\x8b\x9d\xd1\x59\x2a\x2c\x76\x89\xc2\xfc\xd6\xf7\x76\xf9\x67\x4d\xfd\x25\x4c\x09\x51\x0a\x4d\x26\x43\x13\x9a\x4a\xb8\x26\x35\x96\x9a\xdb\xfc\x0a\x1f\xae\x42\x93\x96\xaf\xf4\xad\x9d\x49\xc2\x9f\x5d\xeb\xfb\x78\x64\xe1\xf0\x6a\xfe\x28\xa9\x14\x61\x99\xea\x87\x93\xab\xff\xb9\xf0\xe8\x92\x5a\x6b\x9b\xeb\x01\xc6\x91\x2a\xf4\x01\x53\x37\x37\xed\x05\xde\x62\x40\xd2\x11\x8c\xeb\x9f\xe9\x0a\xac\xee\xd9\xb8\xd1\xf7\x05\x85\x8e\x7e\x72\x0f\x30\xd1\xcc\xa4\x17\x70\x96\xc6\x9d\xc0\xb8\xa5\xb9\x6e\x40\x53\x25\x47\xdc\xeb\x0a\x06\xa3\x66\xa9\x2f\xf8\x9e\x71\xfe\x92\x63\xa7\x33\x87\x4c\xc8\x75\x41\x17\x82\x6a\x29\x4f\xc5\xc3\x39\xaf\xd2\xc9\x96\xd0\xc3\x63\x39\x4d\x0d\x33\xd4\xb8\x9a\x8a\x27\x6e\xb7\xb7\x89\xde\xd9\x01\xcb\xcc\x5a\x6a\x08\x8d\xa0\x4e\x2a\xc0\x32\x29\x19\x0d\xa7\xa3\x62\x22\x4a\x53\x51\x38\x0e\x7e\x33\x30\xa5\x32\x62\x08\x14\x57\xa4\xcd\x73\x93\xd2\xe4\xd6\x33\x74\xf6\x04\xb7\x97\x39\x71\x92\x7b\x43\xe7\x9d\xfd\x0b\x60\x54\xc7\x8f\x48\x7a\x22\x73\xa0\x74\x34\xa8\xc5\x9d\x98\x8b\x28\x10\xef\x14\x46\x27\x5c\xf2\xb9\x41\x50\x81\xfc\x41\xc9\xbe\xd7\xa2\xff\xb3\xd0\x86\x47\x37\xd6\x2f\x8a\x8f\x3a\x2c\xde\xd9\xd9\x42\x62\xcf\xe0\x9c\x24\x81\xd7\x74\x12\x71\x3b\x6f\x2e\xfd\x6d\xcc\xc2\xb9\x02\x4d\x0f\x92\x17\xa8\xbf\xbd\xb7\xc0\xa8\x7b\x29\x99\x5a\x6e\x68\xa6\x2a\x34\x23\xf0\x38\xba\x79\x16\xf8\x8d\xd2\x88\x1d\xc5\x96\x68\xdc\x47\x4b\x63\x74\x45\x49\xcd\xc8\xa6\x61\xef\x3a\xb1\xb1\xbf\xb9\x99\x8d\xfd\x34\x32\xb5\xb1\xab\xfc\xb9\x4d\xcc\x73\x78\x72\x93\x0c\xd6\xf3\xb3\x9b\x78\xb2\x79\x0d\x08\x2c\xf4\x9b\x85\x90\x58\xd2\x6a\xd7\x76\x64\x4f\x5f\xd0\xff\xd0\x72\xad\xe2\x9e\xa4\xaa\x26\x5e\x5b\x0e\x6b\xb0\x6e\x65\x1f\xb4\x5a\x5f\x8f\xf2\xc4\x96\x50\x54\xf9\x20\x5b\xf4\xff\x0d\x00\x00\xff\xff\xd4\x96\x1a\x3b\xf0\x20\x00\x00")

func static_bleve_mapping_partials_mapping_type_mapping_tree_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_mapping_type_mapping_tree_html,
		"static-bleve-mapping/partials/mapping/type-mapping-tree.html",
	)
}

func static_bleve_mapping_partials_mapping_type_mapping_tree_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_mapping_type_mapping_tree_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/mapping/type-mapping-tree.html", size: 8432, mode: os.FileMode(420), modTime: time.Unix(1457043863, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_mapping_type_mapping_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x90\xb1\x4e\xc4\x30\x0c\x86\xf7\x3e\x45\x94\xa5\x03\xca\x65\x47\xbd\x2e\xbc\x02\xfb\xc9\x6a\xcc\x61\xc9\x75\xa2\xc4\x87\x40\x88\x77\xc7\xad\x72\x45\x47\xb6\xff\xff\xed\x2f\xb6\xa7\x44\x1f\xee\x46\x41\x2b\xe2\xd9\xe7\xa2\x94\xa5\xf9\x79\x70\x6e\xca\x7c\x0f\x82\xe4\x84\xcd\xbc\xed\xc9\x35\xac\x26\xf9\xec\x57\x28\x85\xe4\xda\x7c\x4f\x12\x28\x04\xfd\x2a\x78\x44\xaf\x26\x5e\xb2\x28\x90\x60\xdd\xa9\xc6\x65\xda\x18\x15\x0b\x82\x1e\x95\x8e\xc4\xfd\xe7\xb9\x87\xff\x0f\x73\x61\x68\xed\x68\xfc\x2b\x36\x68\x8f\xbe\x47\x4c\xa4\x16\x8e\xcf\x77\xe8\xe9\xd2\xad\x9f\x87\x06\x92\x85\x6f\xc9\x06\x6e\x0a\x4a\xcb\xa5\x54\x7c\xa3\x4f\xf7\xe4\xc6\x58\xa0\x2a\x01\xb7\xd8\x09\x71\xdb\x2c\x74\xb1\x8f\x75\x7a\xd7\x95\x47\x3f\x4f\x91\x69\xbf\x58\xcc\x3c\x0f\x53\xb4\x93\xce\xc3\x6f\x00\x00\x00\xff\xff\x6f\x9d\x14\xad\x59\x01\x00\x00")

func static_bleve_mapping_partials_mapping_type_mapping_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_mapping_type_mapping_html,
		"static-bleve-mapping/partials/mapping/type-mapping.html",
	)
}

func static_bleve_mapping_partials_mapping_type_mapping_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_mapping_type_mapping_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/mapping/type-mapping.html", size: 345, mode: os.FileMode(420), modTime: time.Unix(1453267781, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"static-bleve-mapping/js/mapping/analysis-analyzer.js":                       static_bleve_mapping_js_mapping_analysis_analyzer_js,
	"static-bleve-mapping/js/mapping/analysis-charfilter.js":                     static_bleve_mapping_js_mapping_analysis_charfilter_js,
	"static-bleve-mapping/js/mapping/analysis-tokenfilter.js":                    static_bleve_mapping_js_mapping_analysis_tokenfilter_js,
	"static-bleve-mapping/js/mapping/analysis-tokenizer.js":                      static_bleve_mapping_js_mapping_analysis_tokenizer_js,
	"static-bleve-mapping/js/mapping/analysis-wordlist.js":                       static_bleve_mapping_js_mapping_analysis_wordlist_js,
	"static-bleve-mapping/js/mapping/analysis-wordlist.js~":                      static_bleve_mapping_js_mapping_analysis_wordlist_js_,
	"static-bleve-mapping/js/mapping/analysis.js":                                static_bleve_mapping_js_mapping_analysis_js,
	"static-bleve-mapping/js/mapping/index-mapping.js":                           static_bleve_mapping_js_mapping_index_mapping_js,
	"static-bleve-mapping/js/mapping/type-mapping.js":                            static_bleve_mapping_js_mapping_type_mapping_js,
	"static-bleve-mapping/partials/analysis/analyzer.html":                       static_bleve_mapping_partials_analysis_analyzer_html,
	"static-bleve-mapping/partials/analysis/analyzer.html~":                      static_bleve_mapping_partials_analysis_analyzer_html_,
	"static-bleve-mapping/partials/analysis/analyzers.html":                      static_bleve_mapping_partials_analysis_analyzers_html,
	"static-bleve-mapping/partials/analysis/charfilter.html":                     static_bleve_mapping_partials_analysis_charfilter_html,
	"static-bleve-mapping/partials/analysis/charfilters/generic.html":            static_bleve_mapping_partials_analysis_charfilters_generic_html,
	"static-bleve-mapping/partials/analysis/charfilters/regexp.html":             static_bleve_mapping_partials_analysis_charfilters_regexp_html,
	"static-bleve-mapping/partials/analysis/charfilters.html":                    static_bleve_mapping_partials_analysis_charfilters_html,
	"static-bleve-mapping/partials/analysis/tokenfilter.html":                    static_bleve_mapping_partials_analysis_tokenfilter_html,
	"static-bleve-mapping/partials/analysis/tokenfilters/dict_compound.html":     static_bleve_mapping_partials_analysis_tokenfilters_dict_compound_html,
	"static-bleve-mapping/partials/analysis/tokenfilters/edge_ngram.html":        static_bleve_mapping_partials_analysis_tokenfilters_edge_ngram_html,
	"static-bleve-mapping/partials/analysis/tokenfilters/elision.html":           static_bleve_mapping_partials_analysis_tokenfilters_elision_html,
	"static-bleve-mapping/partials/analysis/tokenfilters/generic.html":           static_bleve_mapping_partials_analysis_tokenfilters_generic_html,
	"static-bleve-mapping/partials/analysis/tokenfilters/keyword_marker.html":    static_bleve_mapping_partials_analysis_tokenfilters_keyword_marker_html,
	"static-bleve-mapping/partials/analysis/tokenfilters/length.html":            static_bleve_mapping_partials_analysis_tokenfilters_length_html,
	"static-bleve-mapping/partials/analysis/tokenfilters/ngram.html":             static_bleve_mapping_partials_analysis_tokenfilters_ngram_html,
	"static-bleve-mapping/partials/analysis/tokenfilters/normalize_unicode.html": static_bleve_mapping_partials_analysis_tokenfilters_normalize_unicode_html,
	"static-bleve-mapping/partials/analysis/tokenfilters/shingle.html":           static_bleve_mapping_partials_analysis_tokenfilters_shingle_html,
	"static-bleve-mapping/partials/analysis/tokenfilters/stop_tokens.html":       static_bleve_mapping_partials_analysis_tokenfilters_stop_tokens_html,
	"static-bleve-mapping/partials/analysis/tokenfilters/truncate_token.html":    static_bleve_mapping_partials_analysis_tokenfilters_truncate_token_html,
	"static-bleve-mapping/partials/analysis/tokenfilters/wordmap.html":           static_bleve_mapping_partials_analysis_tokenfilters_wordmap_html,
	"static-bleve-mapping/partials/analysis/tokenfilters.html":                   static_bleve_mapping_partials_analysis_tokenfilters_html,
	"static-bleve-mapping/partials/analysis/tokenizer.html":                      static_bleve_mapping_partials_analysis_tokenizer_html,
	"static-bleve-mapping/partials/analysis/tokenizers/exception.html":           static_bleve_mapping_partials_analysis_tokenizers_exception_html,
	"static-bleve-mapping/partials/analysis/tokenizers/generic.html":             static_bleve_mapping_partials_analysis_tokenizers_generic_html,
	"static-bleve-mapping/partials/analysis/tokenizers/regexp.html":              static_bleve_mapping_partials_analysis_tokenizers_regexp_html,
	"static-bleve-mapping/partials/analysis/tokenizers.html":                     static_bleve_mapping_partials_analysis_tokenizers_html,
	"static-bleve-mapping/partials/analysis/wordlist.html":                       static_bleve_mapping_partials_analysis_wordlist_html,
	"static-bleve-mapping/partials/analysis/wordlist.html~":                      static_bleve_mapping_partials_analysis_wordlist_html_,
	"static-bleve-mapping/partials/analysis/wordlists.html":                      static_bleve_mapping_partials_analysis_wordlists_html,
	"static-bleve-mapping/partials/mapping/index-mapping.html":                   static_bleve_mapping_partials_mapping_index_mapping_html,
	"static-bleve-mapping/partials/mapping/type-mapping-tree.html":               static_bleve_mapping_partials_mapping_type_mapping_tree_html,
	"static-bleve-mapping/partials/mapping/type-mapping.html":                    static_bleve_mapping_partials_mapping_type_mapping_html,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type _bintree_t struct {
	Func     func() (*asset, error)
	Children map[string]*_bintree_t
}

var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"static-bleve-mapping": &_bintree_t{nil, map[string]*_bintree_t{
		"js": &_bintree_t{nil, map[string]*_bintree_t{
			"mapping": &_bintree_t{nil, map[string]*_bintree_t{
				"analysis-analyzer.js":    &_bintree_t{static_bleve_mapping_js_mapping_analysis_analyzer_js, map[string]*_bintree_t{}},
				"analysis-charfilter.js":  &_bintree_t{static_bleve_mapping_js_mapping_analysis_charfilter_js, map[string]*_bintree_t{}},
				"analysis-tokenfilter.js": &_bintree_t{static_bleve_mapping_js_mapping_analysis_tokenfilter_js, map[string]*_bintree_t{}},
				"analysis-tokenizer.js":   &_bintree_t{static_bleve_mapping_js_mapping_analysis_tokenizer_js, map[string]*_bintree_t{}},
				"analysis-wordlist.js":    &_bintree_t{static_bleve_mapping_js_mapping_analysis_wordlist_js, map[string]*_bintree_t{}},
				"analysis-wordlist.js~":   &_bintree_t{static_bleve_mapping_js_mapping_analysis_wordlist_js_, map[string]*_bintree_t{}},
				"analysis.js":             &_bintree_t{static_bleve_mapping_js_mapping_analysis_js, map[string]*_bintree_t{}},
				"index-mapping.js":        &_bintree_t{static_bleve_mapping_js_mapping_index_mapping_js, map[string]*_bintree_t{}},
				"type-mapping.js":         &_bintree_t{static_bleve_mapping_js_mapping_type_mapping_js, map[string]*_bintree_t{}},
			}},
		}},
		"partials": &_bintree_t{nil, map[string]*_bintree_t{
			"analysis": &_bintree_t{nil, map[string]*_bintree_t{
				"analyzer.html":   &_bintree_t{static_bleve_mapping_partials_analysis_analyzer_html, map[string]*_bintree_t{}},
				"analyzer.html~":  &_bintree_t{static_bleve_mapping_partials_analysis_analyzer_html_, map[string]*_bintree_t{}},
				"analyzers.html":  &_bintree_t{static_bleve_mapping_partials_analysis_analyzers_html, map[string]*_bintree_t{}},
				"charfilter.html": &_bintree_t{static_bleve_mapping_partials_analysis_charfilter_html, map[string]*_bintree_t{}},
				"charfilters": &_bintree_t{nil, map[string]*_bintree_t{
					"generic.html": &_bintree_t{static_bleve_mapping_partials_analysis_charfilters_generic_html, map[string]*_bintree_t{}},
					"regexp.html":  &_bintree_t{static_bleve_mapping_partials_analysis_charfilters_regexp_html, map[string]*_bintree_t{}},
				}},
				"charfilters.html": &_bintree_t{static_bleve_mapping_partials_analysis_charfilters_html, map[string]*_bintree_t{}},
				"tokenfilter.html": &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilter_html, map[string]*_bintree_t{}},
				"tokenfilters": &_bintree_t{nil, map[string]*_bintree_t{
					"dict_compound.html":     &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilters_dict_compound_html, map[string]*_bintree_t{}},
					"edge_ngram.html":        &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilters_edge_ngram_html, map[string]*_bintree_t{}},
					"elision.html":           &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilters_elision_html, map[string]*_bintree_t{}},
					"generic.html":           &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilters_generic_html, map[string]*_bintree_t{}},
					"keyword_marker.html":    &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilters_keyword_marker_html, map[string]*_bintree_t{}},
					"length.html":            &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilters_length_html, map[string]*_bintree_t{}},
					"ngram.html":             &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilters_ngram_html, map[string]*_bintree_t{}},
					"normalize_unicode.html": &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilters_normalize_unicode_html, map[string]*_bintree_t{}},
					"shingle.html":           &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilters_shingle_html, map[string]*_bintree_t{}},
					"stop_tokens.html":       &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilters_stop_tokens_html, map[string]*_bintree_t{}},
					"truncate_token.html":    &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilters_truncate_token_html, map[string]*_bintree_t{}},
					"wordmap.html":           &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilters_wordmap_html, map[string]*_bintree_t{}},
				}},
				"tokenfilters.html": &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilters_html, map[string]*_bintree_t{}},
				"tokenizer.html":    &_bintree_t{static_bleve_mapping_partials_analysis_tokenizer_html, map[string]*_bintree_t{}},
				"tokenizers": &_bintree_t{nil, map[string]*_bintree_t{
					"exception.html": &_bintree_t{static_bleve_mapping_partials_analysis_tokenizers_exception_html, map[string]*_bintree_t{}},
					"generic.html":   &_bintree_t{static_bleve_mapping_partials_analysis_tokenizers_generic_html, map[string]*_bintree_t{}},
					"regexp.html":    &_bintree_t{static_bleve_mapping_partials_analysis_tokenizers_regexp_html, map[string]*_bintree_t{}},
				}},
				"tokenizers.html": &_bintree_t{static_bleve_mapping_partials_analysis_tokenizers_html, map[string]*_bintree_t{}},
				"wordlist.html":   &_bintree_t{static_bleve_mapping_partials_analysis_wordlist_html, map[string]*_bintree_t{}},
				"wordlist.html~":  &_bintree_t{static_bleve_mapping_partials_analysis_wordlist_html_, map[string]*_bintree_t{}},
				"wordlists.html":  &_bintree_t{static_bleve_mapping_partials_analysis_wordlists_html, map[string]*_bintree_t{}},
			}},
			"mapping": &_bintree_t{nil, map[string]*_bintree_t{
				"index-mapping.html":     &_bintree_t{static_bleve_mapping_partials_mapping_index_mapping_html, map[string]*_bintree_t{}},
				"type-mapping-tree.html": &_bintree_t{static_bleve_mapping_partials_mapping_type_mapping_tree_html, map[string]*_bintree_t{}},
				"type-mapping.html":      &_bintree_t{static_bleve_mapping_partials_mapping_type_mapping_html, map[string]*_bintree_t{}},
			}},
		}},
	}},
}}

// Restore an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// Restore assets under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	if err != nil { // File
		return RestoreAsset(dir, name)
	} else { // Dir
		for _, child := range children {
			err = RestoreAssets(dir, path.Join(name, child))
			if err != nil {
				return err
			}
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

func assetFS() *assetfs.AssetFS {
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: AssetInfo, Prefix: k}
	}
	panic("unreachable")
}
