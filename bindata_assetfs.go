package mapping

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"github.com/elazarl/go-bindata-assetfs"
	"io"
	"io/ioutil"
	"os"
	"path"
	"path/filepath"
	"strings"
	"time"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindata_file_info struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindata_file_info) Name() string {
	return fi.name
}
func (fi bindata_file_info) Size() int64 {
	return fi.size
}
func (fi bindata_file_info) Mode() os.FileMode {
	return fi.mode
}
func (fi bindata_file_info) ModTime() time.Time {
	return fi.modTime
}
func (fi bindata_file_info) IsDir() bool {
	return false
}
func (fi bindata_file_info) Sys() interface{} {
	return nil
}

var _static_bleve_mapping_js_mapping_analysis_analyzer_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x57\xcd\x6e\xdb\x38\x10\xbe\xe7\x29\x18\xa1\xa8\x65\xd4\xb0\xb1\xd7\x35\x72\xe8\x16\x58\x60\x0f\xd9\x53\x6f\x86\x11\xb0\xe2\x28\x26\x4c\x51\x5a\x92\x72\xe3\x06\x7e\xf7\x1d\x52\x7f\xa4\x7e\x62\xb9\x45\xb1\xdb\x1c\x1c\x91\x33\xf3\x71\xe6\xe3\x70\xc8\x49\x4b\x99\x18\x9e\x4b\xf2\x87\x80\x13\x7c\x94\x54\x9c\xbf\x81\x7a\xcc\x19\x15\x9f\x8c\x12\xf1\x3b\x9d\xe4\x05\xac\xc8\xbb\xcc\x4e\xfd\x25\xb5\xa1\x32\xb1\xe3\x83\x31\xc5\xea\x8e\x5c\xf9\x93\x34\x43\xe5\x13\x15\x25\xfe\xcb\x68\x51\x70\xf9\xbc\x22\x08\x62\x78\xf2\x54\x28\x48\xf9\xcb\x92\xbc\x3a\x98\x6a\xa5\x75\xae\xf8\xf3\xdf\x68\x45\x1e\x9c\xf1\xd6\x97\xc9\x89\x79\x50\x2a\x57\x8f\xa0\x35\x7d\xb6\xf2\x28\x0a\xa4\x69\xae\xb2\x82\x9a\xc3\x50\x52\x3b\x84\x82\xfa\x2b\x90\x06\x5e\xa2\x4e\x30\xde\xde\xf9\xaa\xb4\xe6\x0d\xb5\x5e\x2f\x15\xc8\x66\x43\x50\x74\x26\x5c\x56\xe1\x13\x74\x83\x00\xe3\x06\x97\x71\x0a\x76\x1c\x9f\xa8\x22\xc7\x56\xa7\xa1\xa2\xb6\x97\x00\x8c\x30\x80\x02\x81\x1d\x56\x9e\xe2\x9c\x36\x38\x4b\x95\xa2\x67\xdd\x2a\xf3\x94\xc4\x47\xf2\x80\x01\x26\x07\xaa\x9e\x52\x2e\x0c\x28\x1d\xf9\x78\x6e\x37\xe0\xab\x95\xd7\x62\x74\x76\xb7\xdf\x06\x0a\xad\x4f\x49\xca\x5b\xaf\xd6\x3e\x66\x1f\x72\x08\xbb\x2e\x4a\x7d\x88\x87\x96\x3b\xc4\xdc\x2f\xc3\xf5\x2e\xc1\xa8\x47\x66\x60\x6d\xb7\x3d\x58\xa6\x03\xba\x10\x10\x1a\x3c\x0e\x4c\x7e\x04\xf9\x16\x09\x4e\x61\x06\x0b\xc6\x67\x21\x40\x9d\xa0\xc1\x07\xf6\x79\x08\x6c\x77\xe6\x56\x22\x02\xf3\x8a\x09\x7f\xa5\x01\x15\xaf\x6f\xa1\xed\x8e\x7b\x84\x70\x7e\xe1\xa7\x67\x7b\x57\xfd\xfa\x79\xed\x56\xe1\x68\x64\x4f\x64\x43\x95\xaf\x20\x72\xca\x3e\xf7\x95\x9a\x9a\x12\xfb\x2c\xb9\x82\xb1\x2e\x72\x6d\xe2\xc5\x86\x16\x7c\xf3\x14\x82\x2f\x56\xf5\x19\x5c\xae\x75\x99\x24\x78\x98\xe3\x16\x87\x51\x43\xfb\x8c\x4f\x79\x68\x75\xbb\x59\x9f\x9b\xe5\xba\xfd\x76\x05\x23\xc4\x5f\xe1\x11\x63\x30\xb1\x4a\xaf\xc0\x58\x7d\x1f\xb8\xfa\xbe\x5c\xa3\x26\x5e\x86\x1a\x36\x9b\xff\x74\x5b\xf8\x16\xbd\x9f\x06\x5a\x33\xf9\xed\xc1\x7f\x27\xc1\x43\x27\x1d\xc3\xfe\xd9\xfc\x6f\x39\xee\xf1\xd3\x27\x99\x32\x4f\xc3\x27\xcf\x89\x7d\x5f\xd2\x46\x25\x30\xa4\x09\x4e\x76\xf8\xdb\xa0\xe6\xd6\x26\xf7\x58\x75\x4a\xc9\xf0\x5e\x90\x58\x9b\xdf\xbf\x27\xde\x7c\x34\x28\x40\xcd\xf5\x02\x02\x10\x9b\x7d\x1c\x2b\x77\x55\xf1\xa8\x06\xcb\xc1\x19\x0d\x23\x54\x90\xe5\x27\x18\x0f\x92\xa3\x57\x2f\x41\x9a\xcc\x59\x5c\x17\x82\x27\x50\x19\xaf\xc8\x6f\xe3\xdc\xbb\x33\x76\x3d\x7d\x3f\x0f\xd5\x6e\xa9\x0f\x3f\x9e\xc0\x23\x7e\x76\x35\xe2\xff\x91\xc2\x7d\x8e\x7e\x99\x1c\x1e\xbd\xaa\x7f\x76\xee\x8e\x2f\x3a\x2b\x67\x91\x0f\x8f\xeb\x1b\x99\xec\xed\xd2\x4f\x60\x31\x48\xc9\xdb\x69\x9c\x08\xed\x2a\x8f\xe1\xb2\xb3\x88\x4c\x6c\x17\x20\xbc\x55\x48\x78\x98\x83\x6e\x61\xcd\xb8\xce\x38\x1e\xd7\x45\x65\xb6\x18\xc7\xfc\x52\x72\xc1\xa6\xca\x03\x3e\x87\xb3\x52\x1b\x72\xa0\x27\x20\xd4\xb5\x00\x01\xff\xf7\x5e\x8b\x30\xef\x74\x46\xae\xcb\xe0\x9a\x28\xf8\xa7\xe4\x0a\x58\x14\x3e\xc9\x14\x98\x52\x49\x9f\xf8\xe0\x6d\x6e\x8d\x9d\x47\x32\x37\x84\x0a\x05\x94\x9d\xc9\x17\x20\xa5\x06\x16\x78\xe6\xf7\x2e\xf7\x0f\x83\x36\x07\x73\x24\xec\x46\xaa\x7d\xd1\x5c\xb7\x1b\xa4\x77\x1e\xc6\x7e\x66\x74\x4d\x65\x77\x9e\x32\xb2\x88\xc8\x87\xa0\x8d\xfa\x40\xa2\x45\xeb\x37\xbc\x70\x6d\xf4\x4d\x04\x80\xd4\xa5\x02\x62\x0e\xd4\xe0\x0f\xd2\x88\x8f\xd2\xa6\x8d\xc2\x1a\x99\x15\xb9\x04\x69\x2c\xbf\xf8\xd4\xe4\x1d\x25\x4d\x74\x5e\xab\x64\xff\xda\x37\x37\x75\xed\xd0\x04\x25\xfd\xd8\x9b\xf9\x1d\x75\x8f\xda\x09\x2b\x2b\xed\x1f\xa0\xd6\xfa\x5b\xf5\xa4\xf6\x7d\x19\xe7\xbd\xc3\x6f\xe4\xdb\x41\x50\xbb\xa8\xb5\x8d\xac\x41\x3b\xda\x76\xdc\x19\xec\xe0\x1e\xdb\xc6\x33\x8c\x27\x6a\x80\xa2\xdf\x5b\xcc\xce\x71\x0f\x64\x78\x5b\x3a\x96\xa9\x81\x1a\x7a\xb1\xf2\xd6\x99\x79\x61\xe2\xae\x62\xc2\x72\x53\x6f\x59\x9d\x00\x38\xd1\x4b\x0b\x5d\x0a\xd3\xa3\xac\x13\xcc\xe6\xcc\x85\x11\xd6\x89\x44\xe4\x1a\xe2\x0a\x67\xf9\x83\x57\x32\x06\x93\x9b\x03\xa8\xaf\x1c\x1b\x22\x2c\x40\x85\xa0\xe7\xca\xfa\xbb\x6e\xee\xa6\x60\x5d\xb6\xff\x06\x00\x00\xff\xff\x36\xf6\x5e\x36\x32\x11\x00\x00")

func static_bleve_mapping_js_mapping_analysis_analyzer_js_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_js_mapping_analysis_analyzer_js,
		"static-bleve-mapping/js/mapping/analysis-analyzer.js",
	)
}

func static_bleve_mapping_js_mapping_analysis_analyzer_js() (*asset, error) {
	bytes, err := static_bleve_mapping_js_mapping_analysis_analyzer_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/js/mapping/analysis-analyzer.js", size: 4402, mode: os.FileMode(420), modTime: time.Unix(1445359170, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_js_mapping_analysis_charfilter_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x56\x4b\x6f\xe3\x36\x10\xbe\xef\xaf\x60\x84\xc5\x4a\x46\xbd\xd2\xbd\xc6\x5e\x9a\xa2\x40\x0f\xe9\x69\x6f\x86\x61\x30\xd2\xd8\x26\x22\x51\x2a\x49\x39\x31\xb2\xfe\xef\x1d\x92\x7a\x90\x7a\xd8\xda\xa6\xd5\xc1\x96\x38\xc3\x99\xe1\x37\x0f\x7e\x87\x9a\xa7\x8a\x95\x9c\xfc\x96\xc3\x19\x1e\x4f\x54\xfc\xc1\x72\x05\xe2\xa9\xcc\x68\xfe\xa8\x44\x1e\x7d\x96\x69\x59\xc1\x9a\x7c\x2e\xf4\xd2\x9f\x5c\x2a\xca\x53\xfd\x7d\x52\xaa\x5a\x7f\x22\x77\x1f\x4e\x0b\x54\x3f\xd3\xbc\xc6\xbf\x82\x56\x15\xe3\xc7\x35\x41\x33\x8a\xa5\xfb\x4a\xc0\x81\xbd\xad\xc8\xbb\x31\x64\x7d\xc5\xa5\x60\xc7\xbf\x70\x17\xf9\x66\x36\x6f\x5c\x19\x9f\x59\x07\x21\x4a\xf1\x04\x52\xd2\xa3\x96\x07\x81\x27\x3d\x94\xa2\xa8\xa8\x3a\x8d\x25\x4d\x40\x28\x68\xde\x3c\xa9\x17\x25\xea\x78\xdf\x9b\x4f\xae\x6a\x8a\xd8\x1d\x0c\x76\xa8\xf7\x7e\xb5\x66\x92\x84\xa0\xf0\x42\x18\xb7\x00\x10\x0c\x84\x40\xc6\x14\x3a\x32\x0a\xfa\x3b\x3a\x53\x41\x5e\x3a\x9d\x16\x8c\x49\xdb\xdb\x97\x1d\x9a\x37\x7a\xf8\x6a\x9d\x5c\x6d\x1c\xda\x8a\xac\x50\x1a\x4d\x06\xff\xe3\x07\x09\x13\xbb\xf4\xf5\x59\x27\xfb\x6b\x73\xe0\x70\xe5\x1f\xa4\xe6\x2f\xbc\x7c\xe5\x7d\x2d\x7c\xbf\x54\xf0\x1d\x8a\x2a\xa7\x0a\xa1\xed\x62\x43\x5f\xbf\x90\x20\xa9\xa8\x50\x8c\xe6\x32\xa1\x9c\xe6\x17\xc9\x64\xd2\x47\x2b\x93\x23\x70\x10\x2c\x8d\x4f\xaa\xc8\x83\x31\x60\x63\x07\x52\xa3\xd7\xf9\x08\x04\x1c\xe1\xad\x0a\x7e\x5d\xe6\xcd\x6a\x5b\x67\xb6\x34\xaf\xb7\x7c\xfe\x0e\x07\x5a\xe7\x6a\xce\x65\xdb\x1b\x91\x9b\x11\xfd\x08\x50\xb5\xe0\x83\x45\x7f\x6f\x10\x8c\x5b\x03\xa5\x78\xc4\x14\x8c\xd8\x93\x36\xd5\x62\x93\x79\x37\x6c\x1d\xef\x76\xd7\x68\xd4\x55\x86\xa8\x3d\x8e\x14\x26\x83\x37\x3d\x1b\x1f\x41\x45\x61\x42\x2b\x96\xec\x07\x86\xc3\x55\x2c\xeb\x34\xc5\x2e\x8a\xba\xfd\x68\x9e\x0e\x01\x98\x0d\x4b\x2b\x9b\xe5\xbd\x4d\xc9\x5e\x69\x81\x73\xba\x55\xdc\xbd\x9b\x8e\xf5\xfd\xac\xb1\x5b\x32\x98\xf1\x36\xe8\x70\xad\xef\x1a\xde\x78\xc0\x4d\xc2\x12\xb5\x95\xce\x0e\x24\x7a\x18\xf5\x56\xac\x83\x75\x9d\x67\xb6\x3e\xf4\x5e\x3d\x38\x9a\xe4\xf6\x4e\xb5\x99\x9b\x85\xb5\x75\x2c\xec\x6e\x80\xd8\xcd\x8d\xe5\xd6\xa2\xd5\xb0\x66\x0c\xa6\xb9\x84\x05\x6e\xde\x47\x05\x37\xa9\x69\x00\xd1\x50\xf7\x7e\xbd\x89\x33\x1e\xae\xb7\x5b\x7b\x3b\xed\x61\x77\xab\xd8\x31\x85\xdc\xe4\x7b\xb2\xa0\x39\xbc\x36\xd9\x99\x36\xfd\x33\xb9\x9a\x09\xee\xe3\x69\x9b\x31\xec\x65\xf0\x7f\xca\x5c\x83\xcf\x02\x18\xee\x26\x69\x06\x87\xff\x20\xf9\x4b\x40\x70\xdc\xdc\xbc\x9f\xee\x0d\x52\xcd\x5d\x72\xa7\x9a\x88\x3f\x1f\x3d\x8e\x13\x67\x4c\x16\x0c\x67\x61\x68\xb7\x85\x83\x19\xd3\xd8\x7c\xae\x59\x9e\xcd\x15\x28\x12\x80\xa2\x96\x8a\x9c\xe8\x19\x08\x35\xb4\xc5\xcb\xc5\x83\x43\x6b\x96\xcd\xbd\xc0\x30\x23\x26\xf1\x16\xfa\xbb\x66\x02\x32\x67\x20\xe9\xc7\x5e\x4e\x2e\x0e\x6e\x30\x86\x3e\x99\x88\x78\xa9\x08\xcd\x05\xd0\xec\x42\x9e\x81\xd4\x12\xb2\xa9\x2a\x31\x1b\x1e\xbe\x8d\xa8\xd9\x97\x2f\x03\x06\x15\xb7\x37\xb2\x3b\xff\xbb\xac\x6b\x33\x73\x25\x34\x3c\xa0\xce\x2c\x4d\x75\xbd\x37\x65\xaf\x37\x67\x24\x0c\x90\x01\xb8\x51\x21\x1f\x08\xbb\x23\xc0\x1b\x93\x4a\xfe\x14\x16\xc0\x65\x2d\x80\xa8\x13\x55\xf8\x83\x88\x62\xb7\xb4\x2c\x10\x2f\xa2\xa2\x2a\x39\x70\xa5\xa1\x46\xbe\xc5\x7a\x74\xfa\x02\x97\x83\x8e\x74\x24\xde\xc1\xa7\xe6\xd3\xa6\x8f\x05\xbb\x43\x3d\x75\x3c\xd4\xc7\x28\x68\x61\x45\xd6\x30\x41\x38\x5c\xac\x51\xc3\x09\xc0\x27\x18\x3d\x04\x8e\x5f\x4b\x07\xaa\x52\x76\x7c\xc0\x1c\x14\xdb\xa8\x89\x26\x5c\x3b\xa1\x2d\xe4\x06\x08\x2c\x96\x0f\x53\x0d\x6a\x2d\x59\x62\x6a\x90\x19\x89\xb3\x71\x00\x5f\x2f\x58\x80\x9e\x57\x48\x7e\xdf\xa6\x79\x29\x21\xb2\x96\x56\x1f\x24\x1f\x78\x9c\x52\x9d\x40\xbc\x32\x1c\x4d\x38\x10\x70\xca\x5c\xec\xee\x7f\xc5\x51\xda\x01\x72\xdd\xfc\x13\x00\x00\xff\xff\x61\x9e\x3f\x26\x7a\x0d\x00\x00")

func static_bleve_mapping_js_mapping_analysis_charfilter_js_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_js_mapping_analysis_charfilter_js,
		"static-bleve-mapping/js/mapping/analysis-charfilter.js",
	)
}

func static_bleve_mapping_js_mapping_analysis_charfilter_js() (*asset, error) {
	bytes, err := static_bleve_mapping_js_mapping_analysis_charfilter_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/js/mapping/analysis-charfilter.js", size: 3450, mode: os.FileMode(420), modTime: time.Unix(1445445471, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_js_mapping_analysis_tokenfilter_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x58\xcd\x6e\xe3\x36\x10\xbe\xef\x53\x30\xc2\x62\x25\xa3\x5e\xab\x48\xb1\x97\x1a\x7b\xe9\x16\x05\x7a\x48\x4f\xbe\x19\x86\xc1\x48\xb4\x4d\x98\x22\x55\x92\x72\xe2\x26\x7e\xf7\x0e\x25\x59\x22\x25\xca\x56\x9c\x14\xf5\x21\xb1\xc5\x99\x6f\x86\xdf\xfc\x68\xc8\x4d\xc1\x13\x4d\x05\x47\xbf\x31\x72\x20\x0b\xb1\x27\xfc\x0f\xca\x34\x91\x0f\x22\xc5\xec\x87\x96\x2c\xfa\xac\x12\x91\x93\x29\xfa\x9c\x99\x47\x7f\x72\xa5\x31\x4f\xcc\xef\x9d\xd6\xf9\xf4\x13\xba\xfe\xe1\x38\x03\xf9\x03\x66\x05\xfc\xcb\x70\x9e\x53\xbe\x9d\x22\xc0\xd1\x34\x59\xe7\x92\x6c\xe8\xf3\x04\xbd\x94\x48\x95\xb1\x99\x90\x74\xfb\x17\x68\xa1\xef\xa5\xf2\xdc\x5e\xe3\x03\xcf\x89\x94\x42\x3e\x10\xa5\xf0\xd6\xac\x07\x81\xb3\xba\x11\x32\xcb\xb1\xde\xf5\x57\x6a\x87\x60\xa1\xfe\xe6\xac\x3a\x5e\x82\x8c\xf3\x7b\xfe\xc9\x16\xd5\x86\xbd\x4d\xc9\x1e\x08\xbe\x9c\x2a\x9c\x38\x46\xb0\x7a\x44\x94\x57\x0c\x20\xf0\x04\x91\x94\x6a\xb0\x54\x0a\x98\xdf\xd1\x01\x4b\xb4\x6f\x64\xce\x6c\xf8\xc1\x97\xfb\x15\xe0\x97\x82\xf0\xb5\xb2\x72\xea\x7b\xf2\x80\x73\x43\xa1\x02\xd9\xe5\xca\xf5\x94\x09\x9c\x2e\x3a\x32\xe7\x4c\x88\x1c\xe3\x26\xc6\xb3\x5c\x28\x1d\x85\x31\xce\x69\xbc\x76\xa0\xc3\x69\x4d\xd9\x64\xa6\x8a\x24\x01\xee\xa3\x06\x26\xc5\x1a\xdb\x50\x17\xdc\x33\xa2\xd5\xc3\x35\xe0\xa9\x79\xa3\x73\x9a\xcc\x9a\xef\x65\x78\x5d\xf8\x29\x30\x9b\x92\x01\x23\x9d\x74\x30\xf2\x36\x70\x4d\xdb\x15\x5e\xa2\x49\x2d\x60\xe2\xa3\x72\xc0\x89\xbc\x79\xf1\xfa\x8a\xc2\xb8\x7a\xf4\xf5\xd1\x54\xd2\xd7\x9a\x98\x70\xe2\x5a\x28\xf8\x9e\x8b\x27\x6e\x15\xda\xe2\x98\x93\x05\xc9\x72\x86\x35\xf8\xd9\x78\x08\xc6\x7e\x42\x41\x9c\x63\xa9\x29\x66\x2a\xc6\x1c\xb3\xa3\xa2\x2a\xb6\x12\x41\xc5\x5b\xc2\x89\xa4\xc9\x6c\xa7\x33\x16\x78\xb2\xb1\x6f\xc2\xf0\xdd\xf2\x15\xa4\x34\xd1\xeb\x44\x64\xb9\x28\x78\x1a\xfc\x3a\xd2\xac\xa3\x55\x19\x6f\x1b\x41\x40\xd2\x2d\x59\xf3\xad\xc4\xd9\x68\xc0\x56\xa5\x8f\xc6\xa8\x82\x80\x8f\x87\xaa\xe4\x7b\x38\x7b\x72\x7c\x12\x32\x85\x0c\x93\x7b\x22\x47\xc3\xb9\x6a\x3d\x54\x46\xf8\x56\xef\x46\xa3\x55\xe2\x3d\x94\xb7\x91\xe5\xe7\x89\x43\x83\xc3\x8c\xfe\x43\xd6\x05\xa7\xa6\x2e\xc6\xe3\x75\x35\x7b\xd8\x6a\x07\xa9\xcc\xc6\x23\xd6\xf2\x7d\x1c\x2d\xf2\xaa\x83\xa8\xf1\x58\xad\x4e\x0f\x4f\x4b\x68\x07\x90\xd4\xd5\xfa\x68\x48\x57\xcd\x46\x3d\x5d\xac\xa1\xdf\xc9\x06\x17\x4c\x5f\x29\x21\x6f\x23\x35\x1f\x49\x74\x21\x79\xe7\x61\x0b\xd1\x34\x40\xc0\xf0\x35\xca\xe5\xcf\x2b\x47\xf3\x64\xb5\xb3\xa1\xea\xbb\xc1\x17\xa3\x0f\x9a\xc1\x46\x0a\xae\x83\xfe\xfb\x3d\xc8\xa8\x61\xfa\x17\xdf\x0a\x7e\xee\xaf\x0c\xb9\xd9\x94\xf5\x0d\x3e\x9a\xf0\x26\x8c\xa8\x8f\xe2\xac\xd7\x1b\x6e\xf0\xa9\xc6\xf8\x30\x9f\x9a\xce\x72\x83\x2f\xd7\x42\x74\xff\xed\xdb\x18\x17\xde\x91\x45\x57\x93\x64\x94\x7d\x4f\x4b\xbb\xc1\x17\x33\xfa\x99\x8c\xe6\x9b\x24\x18\x63\xb6\xed\x76\x37\x6f\xfc\x7e\x98\x7a\xcf\x8a\x28\x74\x5e\xe8\xb5\x19\x7a\x29\x34\x2c\x63\x18\x9a\x17\xf1\x48\x2a\x02\xad\x0d\x6b\x61\x72\x34\xf0\x15\x27\xb4\x38\x46\xaa\xd5\x51\x5b\x75\x1a\xf2\x0d\xdb\x6d\x01\xde\x9f\xf1\xbd\x6e\x7e\x83\x3f\x4d\xd5\xdc\x5f\xcb\xf0\xcb\xad\xde\x99\x9a\x8b\x1c\xa6\x47\xb2\xe8\x4b\x5c\x98\x99\xb7\xc4\x1d\x99\x2d\xc5\xf0\x86\x69\xd9\xb5\x6b\x0d\xcc\xd5\x3b\x6d\xad\xcd\xca\xff\x30\x38\xfb\xa9\x69\xc6\x66\xba\x41\xd1\x5d\xff\x04\x33\x33\xee\xda\xe6\xd3\xea\xcd\x6a\x94\xcd\x01\xad\x8e\x62\x6b\xd6\xe0\x5c\x7e\x27\x2f\x2d\x88\xd5\x25\x26\x9b\x03\xda\x1b\xf0\xa2\x89\xc5\x40\x4b\x2c\xd4\xe8\x18\x43\x2f\x27\x9f\xf6\x00\x2b\x86\xf1\xd6\xf2\xf9\x70\x67\x29\x58\x07\xd9\x2b\x93\xfe\x72\xc0\xc4\xea\x62\xe6\xff\xd8\x61\x5e\x06\xde\x9b\xdc\x9c\x3c\xd5\x41\x1a\x00\x7f\x53\xcc\x86\x1c\xfc\x88\xf8\x0d\x61\x3b\xb1\xfc\xcf\x62\x58\xf3\x34\x86\x8d\xeb\xf1\x1a\xa0\xe3\x43\x32\x61\x0c\x15\x7d\x43\x97\x8f\xb1\x5d\xaa\x3a\xad\x36\x31\xf7\x47\xcc\xca\x30\xe4\xf6\x4f\xe7\x9e\x69\x96\x52\x95\x51\x68\x95\x61\xa5\x16\xfa\x4f\xee\x8f\x05\x65\xe9\x50\xd2\xc6\x31\xca\x0a\xa5\xd1\x0e\x1f\x08\xc2\xe5\xcd\x91\x13\x97\x3b\xeb\x66\x69\x5c\x53\x0c\xca\xcb\x29\xaa\xe0\x4d\xf4\x77\x41\x25\x49\xad\x5e\x65\x3e\xd5\x0b\xca\xe6\xc1\x76\xa6\xbc\xc1\x2a\x3d\xe2\x42\x23\xcc\x24\xc1\xe9\x11\x3d\x12\x54\x28\x92\xfa\x32\xa6\x54\xb8\xfb\xde\xbb\x1d\xfb\xf2\xc5\xe7\x6b\x7d\xf5\x30\x3b\x1f\x7e\x9c\x37\x45\x93\x0b\x06\x73\x28\xb3\xba\xbb\x2d\xe3\x8c\xea\x62\x30\x8a\x29\x0a\x03\x38\x69\xd9\xee\xc1\xb9\x2b\x6c\xf6\x42\x9e\xa9\xd2\xea\x4d\xa4\xc0\x08\x52\x48\x82\xf4\x0e\x6b\xf8\x03\xd4\x42\x09\x9d\x6f\xe4\x50\x79\xbc\xe2\x84\x6b\xc3\xf9\x01\x66\xc2\x96\x26\xfb\x64\xd7\x29\x54\x7b\xc9\xd9\xb6\xb7\x7d\xcd\x5b\x77\xa0\x64\xf4\x43\x73\x2d\xe8\x52\x14\x9c\x69\x85\x21\xc3\x33\x80\x38\x5c\x83\x88\xed\x83\x67\x5e\x6b\x6f\xbd\xda\xd9\x69\x20\x7e\x46\xc8\x9d\x69\x5a\x26\x2d\xdf\xfb\x57\x76\x25\x5f\x50\x96\xf5\x8e\xc2\xa9\xb5\xbd\x91\xa3\x08\xc4\x07\xd2\x91\xea\x9a\xfc\xf3\x00\x46\x75\x27\xc0\x0a\x5a\x6f\x27\x08\xed\xc2\x98\x10\xd8\x5a\x9d\x46\x90\x30\xa1\x48\x54\x41\x4d\xde\x39\xea\xc0\x7e\x84\xde\x11\xf9\x44\xa1\xe7\x41\x87\x81\xb6\x75\xac\xb4\xdf\x33\x11\x9d\xe6\xff\x06\x00\x00\xff\xff\x57\x18\x23\x5f\x4f\x17\x00\x00")

func static_bleve_mapping_js_mapping_analysis_tokenfilter_js_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_js_mapping_analysis_tokenfilter_js,
		"static-bleve-mapping/js/mapping/analysis-tokenfilter.js",
	)
}

func static_bleve_mapping_js_mapping_analysis_tokenfilter_js() (*asset, error) {
	bytes, err := static_bleve_mapping_js_mapping_analysis_tokenfilter_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/js/mapping/analysis-tokenfilter.js", size: 5967, mode: os.FileMode(420), modTime: time.Unix(1445445498, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_js_mapping_analysis_tokenizer_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x57\xcd\x72\xe3\x36\x0c\xbe\xe7\x29\x18\xcd\xce\x4a\x9e\x7a\xe5\xe9\xb5\x9e\xbd\x74\xdb\x43\x0f\xe9\xc9\x37\x8f\x27\xc3\x48\xb0\xcd\x89\x44\xa9\x24\xe5\x9f\x66\xfd\xee\x05\xa9\x3f\x52\xa6\x2c\x6f\x32\x9d\xf5\x21\x91\x44\xe0\x03\xf0\x01\x20\xc1\x6d\xc5\x13\xc5\x0a\x4e\x7e\xcf\xe0\x00\xab\xe2\x15\x38\xfb\x17\xc4\x53\x91\xd2\xec\x9b\x12\x59\xf4\x49\x26\x45\x09\x73\xf2\x29\xd7\x9f\xfe\xe2\x52\x51\x9e\xe8\xf7\xbd\x52\xe5\xfc\x81\x4c\xfd\x38\xcd\x51\xfa\x40\xb3\x0a\xff\xe5\xb4\x2c\x19\xdf\xcd\x09\xa2\x28\x96\x3c\x97\x02\xb6\xec\x34\x23\x6f\x06\xa7\x36\x15\x17\x82\xed\xfe\x46\x2d\xf2\xd5\x28\x2f\xed\x35\x3e\xf2\x1d\x84\x28\xc4\x13\x48\x49\x77\x7a\x3d\x08\x9c\xd5\x6d\x21\xf2\x92\xaa\xfd\xf5\x4a\xe3\x10\x2e\x34\x4f\xce\xaa\xe3\x25\xca\x38\xef\xcb\x07\x5b\x54\xb5\xcc\xa1\xd8\xdb\xa5\x46\x59\x2c\x08\xae\x9d\x09\xe3\x75\xfc\x04\xfd\x20\x90\x32\x85\x76\x8c\x80\x7e\x8f\x0e\x54\x90\xd7\x4e\xa6\xe5\xc2\x07\xbd\x7e\xdd\x20\xba\x11\xc3\xc7\xda\xc6\xc5\xef\x85\xe6\x4f\xa2\xf0\x7a\xe3\xba\x99\x15\x34\x5d\x0d\x85\xda\x1a\x88\x1c\xe3\x3a\xbf\x71\x59\x48\x15\x85\x0b\x5a\xb2\xc5\xb3\x0b\x1e\xce\x1b\xc6\x66\xb1\xac\x92\x04\xa9\x8f\x3a\x9c\x94\x2a\x6a\x63\xdd\xf2\x50\xcb\xf6\x5f\xe5\xb2\x53\xba\xcc\xe2\xee\xd9\xa4\xd7\xc5\x9f\x23\xb7\x29\x8c\x58\x19\x94\x83\x96\xb7\x81\x1b\xea\xa6\xa8\x89\x66\x8d\x84\x4e\x91\x2c\x11\x28\xf2\x16\xc6\xf7\xef\x24\x5c\xd4\x9f\xbe\xbc\xe8\x36\xfa\xd2\x50\x13\xce\x5c\x13\x15\x7f\xe5\xc5\x91\x77\x56\x56\xe7\x12\x56\x90\x97\x19\x55\xe8\x66\xe7\x20\x9a\xfa\x85\x04\x8b\x92\x0a\xc5\x68\x26\x17\x94\xd3\xec\x2c\x99\x5c\xf4\x34\x2d\x76\xc0\x41\xb0\x24\xde\xab\x3c\x0b\x46\x4a\xd1\x86\xd7\x54\xf7\x54\x05\x02\x76\x70\x2a\x83\xdf\xee\xb2\x55\x0b\xd7\xa6\xfa\x8e\x0f\xe0\x94\x40\xa9\xf3\x71\x27\x4c\x27\x5f\x23\xf9\x72\xe0\xb8\xfe\x07\x6c\x69\x95\xa9\x31\xcf\xbd\x55\xab\x7f\x02\x54\x25\xf8\xe0\xa3\xab\x1b\x04\xce\xe2\xc5\x2a\x8e\x91\x00\xdf\x61\xad\x53\x97\xa8\xbf\xde\x5c\xef\x95\x41\x17\xae\x76\xa9\xe2\x4c\x57\xf4\xb8\x67\x93\x84\x39\x0d\x5f\x95\x58\xf5\xb0\x1a\xae\xdf\xe8\xf5\x1d\x5c\xb7\xba\x51\x0b\xdf\xd9\xe2\xad\x4d\xb7\xc5\x9f\x95\xfe\xfc\x13\xfa\xdc\xc7\x48\xd7\xe2\x6c\x4b\xa2\xc7\x61\x00\xb1\x76\xd5\x36\x9d\xd6\x25\xa9\x55\xf5\x59\xd2\xd4\x53\x6f\x52\xa3\xdc\x2a\xe5\xb5\x05\xb0\x99\xa2\x0f\x2d\xdc\x8d\x15\xcd\x86\x85\x62\xe8\xcc\x24\x4c\x1b\x79\xbb\x2a\x32\x9f\xa0\xe1\x42\x73\xdc\x5b\x6d\x4f\x20\x4b\xdc\x3a\x69\x6f\xee\x46\x6b\x2f\xfc\xe6\x46\x71\x7f\xdb\x53\x6e\x92\xec\xad\x60\x0e\xc7\x26\x29\x5e\xe0\x1f\xc8\x90\xdf\xb1\x8f\xe6\xca\x8f\xea\x64\xed\x7f\xc9\x56\xc3\xcb\x74\xfc\x53\x99\x19\x21\xe0\xc3\xf9\xbe\x27\xfc\x6b\x23\xb7\x0e\xd2\x89\x1d\x93\xa6\xe9\x9f\xed\xc6\x6c\x57\x93\x59\xb5\xa3\xd4\x4c\x35\x43\x27\x1c\xeb\x4e\x9f\xaa\x82\xb8\xdf\xf2\xe3\xb2\x92\xfb\x2b\xfd\xa5\xa3\x3e\x58\xb5\xa6\xd3\x51\xef\x05\xe4\xc5\x01\xbc\x01\x30\x9e\xc2\xe9\xd6\xf8\x68\x7b\x27\xcb\x8c\x25\x50\xeb\xcc\xc9\xaf\xfe\x89\x28\xd1\x93\x7e\x66\xd9\x20\xee\xa9\xe1\xdc\x08\xe2\x94\xc9\x9c\xe1\x11\x11\xd6\x6a\xa1\x1f\xf3\xa5\x62\x59\x3a\xd6\xc5\x38\x30\xe7\x95\x54\x64\x4f\x0f\x40\xa8\x99\xf2\x9d\x74\x3c\x5a\xb7\x80\xfb\x4e\x84\xc0\x5c\x24\x98\xc4\x63\xfa\x9f\x8a\x09\x48\x83\xa5\xe7\xf4\xb6\x49\xb7\x9d\x31\xb7\x0d\xe3\x11\x2f\x14\xa1\x99\x00\x9a\x9e\xc9\x0b\x90\x4a\x42\xea\x6b\x29\xa3\xf0\xf8\xf5\xea\x26\xf3\xf9\xb3\xcf\xd7\x66\x4a\x8c\xdb\x61\xc9\x1a\x83\xd7\x16\xe0\x58\xef\x0d\x43\xed\xba\xc1\xf8\x9d\x92\x30\xc0\x99\xcc\x76\x0c\x27\xb4\xb0\x8b\x02\x4e\x4c\x2a\xf9\x43\x74\x00\x97\x95\x00\xa2\xf6\x54\xe1\x1f\x24\x15\x4b\xb7\xbd\x37\xe1\x29\x9d\x97\x05\x07\xae\x34\xdb\x78\x47\x61\x3d\x41\x7d\x58\x83\xfd\x6b\x24\x5e\xcf\x66\xb2\xb4\xfd\xc0\x16\xd6\xf7\x25\x9a\x65\xe8\x06\xd4\x91\x68\x17\x7a\x38\xbc\x60\x32\x2c\x42\x72\xc4\xf4\xb1\xdd\x5e\xe9\x9c\xe1\xac\x0e\x02\x78\x62\x24\xf7\x90\x77\x88\xdd\x2d\x4c\x69\xd4\xe9\xdc\x0c\xd3\x61\x45\xa1\x2c\xdf\x6f\x65\x57\x6d\xbc\x1c\xe3\x46\xa9\x9e\xba\x1b\xa9\x6b\x25\x68\x71\x70\x56\xf4\x0c\x9b\x3d\x38\xae\xf7\x2f\xee\x30\xd9\xdb\x5c\x3e\xdc\xb8\xe8\x99\xec\xe1\x4e\xda\xb8\x12\xce\x2d\xbf\xee\x1c\x05\x31\x4b\xd8\x16\x4c\x35\xa5\xd0\x4e\xc9\x4c\x0d\xca\x4d\xe2\xe9\x38\x28\x8a\x7e\xe1\xfe\xa2\x30\x71\xb8\xdb\x51\x92\x15\x12\xa2\x1a\x68\xf6\xc1\x69\x13\xa3\x29\xb0\x64\xc4\x91\xe1\x11\x85\xfb\x1c\x9e\x33\xe7\x5a\xfb\x5d\x43\x69\xbb\x2f\x5e\x96\xff\x05\x00\x00\xff\xff\x27\x1e\x7c\xf5\x7e\x11\x00\x00")

func static_bleve_mapping_js_mapping_analysis_tokenizer_js_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_js_mapping_analysis_tokenizer_js,
		"static-bleve-mapping/js/mapping/analysis-tokenizer.js",
	)
}

func static_bleve_mapping_js_mapping_analysis_tokenizer_js() (*asset, error) {
	bytes, err := static_bleve_mapping_js_mapping_analysis_tokenizer_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/js/mapping/analysis-tokenizer.js", size: 4478, mode: os.FileMode(420), modTime: time.Unix(1445445509, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_js_mapping_analysis_wordlist_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x54\xc1\x6e\xdb\x30\x0c\xbd\xe7\x2b\x58\xa3\x68\x1c\xd4\x73\xb7\xeb\x8c\x5e\xb6\xd3\x80\x75\xd7\x1e\x8a\xa2\x50\x2c\xa6\xd1\x26\x4b\x9e\x28\x37\x0d\x8a\xfc\xfb\x28\x39\x49\x2d\x27\xe9\x92\x43\x9c\x88\x7c\xcf\x8f\x8f\xa4\x16\x9d\xa9\xbd\xb2\x06\xbe\x69\x7c\xc1\x7b\xeb\xe4\x4f\x45\xfe\xce\x4a\xa1\xbf\x7b\xa7\xf3\x4b\xaa\x6d\x8b\x05\x5c\x36\xe1\xe8\x87\x21\x2f\x4c\x8d\xc5\x04\xfe\xf3\x31\xa2\x61\xd4\x8a\xf9\xa8\x80\x46\xb4\xad\x32\xcf\x05\x30\xda\xab\xfa\xa9\x75\xb8\x50\xaf\x33\x78\x8b\x34\xfd\x2b\xca\x80\x80\xdb\x08\xac\x86\xe7\xd6\xa9\xe7\x5f\x27\x62\xe8\x9c\x75\x77\x48\x24\x9e\x43\x3c\xcb\x92\xa8\xc1\x55\x28\xe8\x30\x10\x65\xf1\x71\x7c\x96\xa4\x55\x8d\xf9\xe7\x59\x05\x37\x37\x50\x3b\x14\x1e\x81\xd3\xd6\x43\x04\xa1\xc6\xda\xa3\xbc\xdf\x22\x1f\x1e\x13\xc2\x6d\x81\x1c\xd8\xfe\x4a\xa2\x49\xd5\x9c\x93\xfc\xaf\x26\xc3\xd4\x3a\xb8\xab\x39\x67\xdf\x97\x7c\x67\x53\xcc\x4a\xba\x50\x4a\x45\x8d\x22\xca\xa7\x3d\x6c\x3a\xeb\x5f\xbb\x49\x39\x85\x94\x5b\x1b\x76\xa4\x09\xa7\x5a\x40\x9e\x1a\x36\x8c\x8e\x5d\x2b\xdb\x8e\x96\xe3\xfc\xea\x58\xfa\xa1\xfb\x51\xdb\x31\x85\x0e\x1b\xdb\x0f\xdf\x29\x91\xdc\x19\xb2\xce\x83\x5f\x22\xec\x7a\x11\xdb\x07\xca\x48\x7c\x45\xe2\xa7\xb7\x20\x91\x6a\x34\x32\xb4\x82\x63\xe8\x52\x3c\xac\xb8\xb1\xc2\x70\x96\x46\xee\xb1\xf2\xd8\x10\xac\x94\x5f\xda\xce\xc3\x52\xbc\x04\x18\x93\x08\xf9\xbb\x23\xbf\x23\x9e\x8c\xca\x4a\x26\xa1\x0c\xa2\xf2\xbd\x62\x51\xcc\x67\x6f\xe0\xd0\x77\xce\xc0\x1c\x3e\x81\xa8\x60\x33\x70\x67\x61\x1d\xe4\x2f\xc2\xf5\xdc\xfc\x7d\x94\xf4\x43\xfb\xa9\x8d\xd3\x7a\x0c\xf7\x10\x59\x1f\x0b\xf8\x32\x1b\xfb\x7d\xc6\x24\x8f\x5a\x32\xef\x94\xfe\xa8\x1b\x4d\xb0\x88\x3d\x43\x10\x71\x2d\x93\x71\xba\x18\xac\xf4\x89\x6a\xc6\x9b\x1b\x37\x5c\x11\x9b\xf7\xb7\x53\x0e\x65\x96\xce\x54\xef\xe9\xb0\xac\xa1\x98\x78\x75\x44\x45\xc6\x7a\x10\x9a\x77\x58\xae\x61\x8e\xd0\x11\xca\xa3\x83\x1e\x00\x17\xb7\x07\x57\xcc\xd5\xd5\x68\xa3\x4b\x61\x84\x5e\x93\xa2\xd2\xdb\x3f\x68\x9e\xf8\x98\x1e\x06\x24\x8f\x67\x96\x17\x67\x5b\xab\xa0\x90\x51\x12\xa6\x19\x5c\x27\x17\xdf\x35\x64\xd3\xbd\x72\x7c\xe5\x4c\x3a\xdf\x02\x87\xd4\x69\xcf\xef\x79\xdb\x54\xa3\xc3\x44\x6c\xc8\x48\x38\x33\xbf\x6e\x31\xfb\x0a\x59\xcd\xe6\xd9\x26\x2b\x46\xd1\x50\x33\x71\x7c\x38\x82\xef\x02\xaa\xc9\xa9\x8b\xa9\xd6\x96\x30\xef\x15\xbc\x5f\x4a\x9b\xea\x5f\x00\x00\x00\xff\xff\xd3\xa0\x01\xf2\x6e\x06\x00\x00")

func static_bleve_mapping_js_mapping_analysis_wordlist_js_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_js_mapping_analysis_wordlist_js,
		"static-bleve-mapping/js/mapping/analysis-wordlist.js",
	)
}

func static_bleve_mapping_js_mapping_analysis_wordlist_js() (*asset, error) {
	bytes, err := static_bleve_mapping_js_mapping_analysis_wordlist_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/js/mapping/analysis-wordlist.js", size: 1646, mode: os.FileMode(420), modTime: time.Unix(1445359196, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_js_mapping_analysis_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5a\x51\x6f\xdb\xb6\x13\x7f\xcf\xa7\x60\x85\xa2\xb6\x9b\xd4\x79\x4f\x10\xfc\xd1\x7f\xbb\x01\xc1\xd6\xed\x25\xc5\x1e\x8c\x20\xa0\x25\xba\x26\x2a\x53\x86\x48\x27\x75\xd7\x7c\xf7\xdd\x51\x12\x45\x52\x94\x4c\x27\xc5\xd6\x26\xf6\x43\x1b\x8b\x77\xc7\xe3\xef\x8e\xc7\x1f\x4f\x3e\x3d\x25\x69\x21\x54\x59\xe4\x39\x2b\x49\xc9\xe4\xba\x10\x92\xcf\x73\x46\x16\x45\x49\xe6\x1b\x9e\x67\x5c\x7c\x22\x94\xa4\x1b\xa9\x8a\x15\xa1\x82\xe6\x5b\xc9\x25\x68\xad\x40\x94\x09\x25\x8f\x8e\x16\x1b\x91\x2a\x5e\x08\xf2\xff\x9c\xdd\xb2\xb7\xb5\xc8\x3b\x55\xe6\xe3\x97\x32\x2d\xd6\xec\x84\xbc\x5c\x2a\xb5\x86\xff\xf2\xe2\x13\xfc\xbb\x2a\x32\x9a\x4f\xc8\xdf\x47\x04\x3e\xb7\xb4\x24\xb7\x9c\xdd\xfd\x29\xf2\x2d\xb9\x20\x95\xc6\xb4\x79\x72\x7e\xa4\x85\xea\xa7\x82\xdd\x69\xf3\x5f\xc1\xd9\x0b\xd2\xcc\x3b\x6e\x4c\xe1\xa7\x64\x6a\x53\x8a\x46\x81\x65\x5c\x35\x1a\xe3\x24\x39\xb1\x04\xf1\x93\xa8\xed\x9a\x25\x67\x24\xa9\x96\x97\x9c\xb8\xa3\xe9\x92\x96\x37\x0b\x9e\x2b\x56\x4a\x90\x9a\x5d\x7b\xe3\xaa\xf8\xcc\x04\x07\xd3\x68\x62\x23\x78\x5a\x64\xcc\xb7\xa1\x65\x1c\x23\x66\xfc\x7e\x72\xae\xff\xbe\x77\x17\x99\xb1\x9c\x29\x16\x5a\xa7\xa0\x2b\x66\xaf\x75\x23\x59\xd6\x42\xc6\x65\xa3\xf3\x11\x9e\x57\xc2\xe7\x46\x96\x2f\xc8\x18\xe5\x27\x1e\x04\x14\x02\xaf\xc6\xc9\xd5\x12\x82\x4a\x9b\x39\x53\x2a\x44\xa1\xc8\x9c\x91\xca\x99\x2c\x39\x76\x94\xea\xb5\x81\x40\x4a\xc1\x28\xe1\x8a\x80\xfa\x9c\x61\xae\x68\xa7\xe6\x5b\xa2\x96\x0c\x24\x8e\xab\xef\xc7\x24\x99\x26\x96\x37\x6d\xa4\xda\x67\xf7\x8e\xaf\x90\x96\x0b\x5e\xae\xc6\xc9\xdb\x92\x91\x6d\xb1\x21\x72\x53\xff\x71\x47\x85\x22\xaa\xa8\x5d\x23\x23\x9c\x04\x17\x8b\x93\x8c\xfe\x97\x4c\xfc\x15\xd6\x72\x0d\x4a\x22\x63\x5f\x3e\xd0\xf5\x1a\x7c\x9d\x36\xe9\x3c\x6d\x56\x2e\x67\x68\xe9\xda\x77\xca\x8b\x90\x8b\xf4\x50\x84\x60\x7f\x19\xd3\x84\xc2\x02\x34\x1a\x5c\x90\x55\xe5\x81\x24\x63\xf8\x02\x5b\x80\x17\x1b\x49\xd6\x39\x4d\x99\x9c\x1c\xd9\xea\x00\x82\x54\x24\x5d\xb2\xf4\x33\xd1\xbe\x13\xdc\x64\x39\xac\x6a\x41\x37\xb9\x32\xe6\x1d\xf0\x42\x6b\xad\x15\x6e\x4c\x90\x2f\x2e\x88\xef\x6e\x1b\x16\x92\x54\x93\xd5\x7e\x76\xa6\x4b\x6c\x88\x6c\x7f\x21\xec\xa2\x76\x17\x33\xa0\xd1\xcb\x8a\x74\xb3\x82\xb8\xd5\xf6\x8c\x06\xee\xfe\x6c\x65\x25\x71\xc8\xe5\x5a\xe9\x3c\x2a\xf1\x2f\xc5\xfb\x22\xad\x2d\xe8\x78\x9c\xc0\x04\x27\x24\x49\x22\x36\x43\xb3\x76\xc7\x6b\xd6\xba\x6d\x12\x3a\x76\xf5\xbe\x3e\x56\x55\x46\xd3\x25\xc1\xc2\x63\x14\xf1\xe9\x58\x23\x51\xa4\x57\x30\x80\x09\x12\xc2\x03\x95\x64\x27\xbd\xcd\x6a\x7b\x50\xd4\x5a\xb3\xda\xf4\xb5\xbb\x07\xf7\x05\xd2\x3c\xf0\x00\x1d\x02\xd5\x01\xd6\x07\x04\x9d\xab\xb6\x70\xb3\x76\xdc\xc5\x24\x71\x4d\xdf\x87\xe0\xae\x6d\x8a\x4d\x9e\xbb\x75\x14\x37\x1d\x8c\xa6\x9b\x52\xf2\x5b\x46\x96\x2c\x5f\xd7\xfb\x63\xe7\x3a\xfd\xbd\xec\x2e\x79\x4d\xd5\xd2\xdb\xdd\xf6\xf6\x74\x22\x1e\xb1\x4b\x5b\xd3\xd1\x9b\x13\xd5\x7c\x2f\xfa\x92\xd7\xd8\xa2\x4a\xe7\x2d\xea\x79\xb0\x12\x96\x43\xf5\x8e\x37\x15\x13\x16\x00\x45\x14\x77\x35\x24\x0b\xce\xf2\x4c\xa2\x07\x0a\x0f\x18\x0d\x4a\x37\xed\xb5\xd4\xa5\xae\x37\x90\xf9\x16\x2c\x95\xba\xbf\x58\xfd\x14\x22\xd5\x11\x9c\xb5\x86\xae\xbb\xb9\xa9\x07\xa7\xbb\x10\x76\xa5\xfb\x24\x6c\x90\xc0\x65\x8c\x7c\xe5\x15\x2a\x64\x1a\xee\xd6\xc0\x79\x47\xfd\xbe\x17\x71\xc7\x18\xc0\x86\x41\xeb\x8b\xde\x4e\xf4\x75\xa5\x11\x4c\xc2\x01\x4e\xd6\x25\x64\x7e\xa9\xb6\x5d\xf4\x9b\x91\x3f\xf0\x0c\x75\xf1\xaf\x87\x78\xb7\xea\xc8\xcd\x1c\x76\x8d\x1b\x84\x56\x7a\x66\xdb\x0c\x84\x62\x47\x0a\xc7\x96\xa3\xca\x89\x93\x60\x74\xa2\x3e\xe8\xc7\x31\x30\x93\x63\xdb\xdf\xc9\x7e\x9b\xe4\xdf\x73\x76\xc0\xc7\xbd\xea\x63\x80\x1b\x77\xeb\xde\x2d\xcd\x37\xf8\x5f\xcd\xc3\x2f\x85\x1d\x2f\x9b\xb3\x7f\x40\x32\xdf\x25\xee\xcd\xe3\xd6\x00\xf9\xf6\x8d\xb4\xb4\xde\x36\xa5\xef\x03\x97\x42\x2a\x2a\x52\x86\xa6\xf4\x83\x29\x98\x13\x63\x1b\x77\x3d\xc3\x59\x3d\x93\x8d\x24\x15\x7c\x45\xd1\xf9\x66\x70\x6a\x9e\xc8\x5f\x04\x85\xfb\x4c\x66\x8b\x2b\xb6\x02\xaa\xa5\xd8\xc7\x32\x3f\x33\x64\x09\x66\x57\x3c\xbd\x59\x97\x6c\xc1\xbf\xa0\xaf\xa3\xd3\xea\xd1\x9b\x39\x96\xad\x37\xf5\x89\x35\x9a\x90\x2e\x17\x1e\x9d\xae\x29\x24\x3e\xcd\xe5\x69\x43\x29\x4f\x9b\x42\x33\x5d\xaa\x55\x3e\xb2\xa7\x6f\x6f\x5c\x67\x64\xd4\xde\x99\x40\x56\x83\x86\x17\x27\x47\x1e\xae\x65\x45\x7e\x0b\x0b\x77\x73\x10\xe3\x74\x16\xbe\x04\xf9\x29\xd0\x29\x42\xf7\x6e\x1e\xea\x60\xc7\xd9\xd2\xa2\x83\xc6\x6a\xa0\xe2\xcc\x05\x08\xcb\xa0\x71\x27\x4a\x7b\x4d\xe1\x68\x0e\xa3\x61\xa7\x70\x24\x2a\xb6\x4a\xdf\xde\x74\xf6\xe9\xe4\xbc\xdd\xa9\x4e\xfe\x4f\x21\xdc\x70\xe6\x4e\x91\x4a\x8e\xcd\xdc\xd5\x43\xdf\x83\x9e\x3d\xb7\x80\x44\xf4\x62\x84\x9c\x28\xcb\xaa\x53\xb8\xb2\x85\x57\x28\x3c\x6a\x7c\x46\x8e\x1f\x73\x36\x54\xa2\xbf\xb1\x2d\x1e\x0c\x61\x1f\xf0\x83\x35\x5d\x5f\xc1\x5e\xc0\xa9\x9a\x24\xe4\xd5\x2b\x4b\xf3\x45\xff\x41\x5b\x7b\x56\xb2\x55\x01\x44\x0d\xbd\x29\xea\x33\x34\x28\xfa\xa8\x9b\x5c\x28\x1e\x0e\x8a\xbb\xec\x99\x15\x5d\x93\x8b\x1e\x42\x80\x02\x96\x9c\x15\x62\x67\xb5\x79\x41\xe1\x70\xbf\xa5\x3c\xc7\xd2\xd4\xde\x10\x3b\xd2\x18\x82\x9c\x8a\x9e\xf9\x6a\xbf\xd1\x5a\x53\x40\xf0\x6c\x90\x50\xbc\x86\xe4\x5f\x42\xad\x02\x86\xda\xd5\xeb\x62\x85\x71\x85\xf9\xfb\x42\x07\x43\xe3\xc9\x2e\x84\xad\x9c\x3f\xe9\xdb\x4b\xb1\x79\x8c\xfd\x23\x88\xd3\xa2\x18\x8f\x2a\x99\x8c\xcb\x15\x97\x78\x89\xa1\x0a\x8a\x29\x76\x02\xd8\x1d\x79\x0f\xb5\x7d\x3c\xb1\x3c\xf3\x3b\x2d\x10\x85\xbb\xa2\xcc\x48\xce\x25\x36\xb0\x2c\x17\x40\xfd\x2f\x18\xf9\x1d\x06\xe2\x3b\x4c\x8d\x46\xd5\x61\xd2\x1d\x1f\x79\x36\xbb\x1e\xec\xef\x84\x66\xd9\xd5\xdf\x69\x74\x1e\xda\xdf\x31\x6b\x7e\x7e\x0d\x9e\xaa\x0d\x07\xb5\x2e\xb6\xc3\x63\x63\xbd\xa3\xc3\xd3\xa6\x92\x6e\xf1\x14\xd8\xc8\x34\x20\xe1\xbc\xa4\x6e\xff\x75\xb9\xb7\x1e\xfe\x55\x8f\x36\xf4\x3b\x62\x19\xb5\x39\x1f\x07\xcb\x58\xa0\x62\xc4\xdb\x9d\x79\x5e\x5d\x77\x8e\x12\x6f\xc5\x6c\x35\x67\x59\xd5\xd7\xa2\xba\x99\xc5\xd4\x96\x14\x0b\xd8\x9d\x8b\x05\xc3\x5a\x63\x5d\x8e\x64\xe7\x32\x60\xcd\x36\xcd\x78\xaa\x6e\x4c\xac\x9a\x3b\x5a\xa8\xa0\xd9\x5a\xc8\xbd\xd2\x9c\xc9\xfd\x35\x3f\xb3\x2d\xae\xe5\x01\x9a\x52\x15\xeb\xae\xd6\xd0\xbd\xdc\x4e\x85\xfa\x9e\xa8\x53\xdb\xcf\x01\xcc\xf2\x81\x8b\xb6\x67\x76\x90\xde\xf7\x15\x99\x03\xbd\x7f\x34\xbd\xc7\xb4\xc1\x1d\x10\x43\xef\x9b\x30\xfc\x57\xf4\x5e\xa7\xf8\x1e\xf4\xbe\x2a\x07\xf2\xc0\xf2\x7d\x70\x0e\x2c\xff\x07\x61\xf9\xfd\xc7\x79\x28\x20\x0e\x8c\x3b\x0d\x3e\x84\xe7\x87\x67\xfe\xa1\x08\x2f\xbe\xcc\xa4\x29\x9e\x3d\x0d\x1b\xf1\x78\xef\x3b\x10\x68\xd8\x43\x2c\xf3\x6d\x75\x2a\xee\x3b\x48\x79\xc3\x13\xec\x22\xbd\xad\xd6\x43\x69\xaf\xbf\xf2\xe7\xc7\x7e\xed\x17\xd9\x91\xfc\xd7\x85\x7d\x07\x03\xee\xe4\x16\x42\x5c\x11\xe1\x39\x33\x90\x75\xef\xb9\xa6\x02\x51\xeb\x1e\xba\x93\x04\x1b\x3b\x9d\xa0\xb7\xdd\xcc\xc8\x3b\xbd\x3d\xaf\xb7\x8d\x8d\x6f\xa9\x41\xc2\xbc\xa2\x30\xbd\x3d\x1b\xd8\x50\xe9\x6b\x75\xf5\xca\x2e\xc2\x9a\x33\x6f\x8a\x40\x39\xd3\x39\xe3\x19\x1b\xae\xb8\x0d\xed\x34\xa0\x58\x94\xd3\x81\x3b\xc0\x37\xdd\x7c\x75\xbf\xed\xc7\x40\xfb\xf7\xfc\x81\x83\x3e\x9a\x83\x62\x42\x54\x29\x14\xc3\x42\xdb\x50\x1c\xda\xcc\x07\x02\x7a\x20\xa0\x8f\x22\xa0\x43\x27\x6a\x28\x24\x0e\x90\x11\x26\x9f\x28\x09\x35\xbf\x98\xeb\xb0\xcf\xab\x66\x24\x9e\x7c\x1a\x95\x08\xee\x19\x34\xbf\x8b\x7a\x1a\xa5\x87\x32\x4f\xb3\xdc\xe7\x47\x39\xdb\x48\x47\x12\x4e\x07\xec\x1d\x7c\xb3\x35\xae\x89\xa6\xc5\x31\x5f\x17\x80\x52\xf9\xda\x4e\xb4\x46\xcf\x6d\xba\xf2\x58\xb6\xd9\x5a\x0a\xf6\x5b\x79\x04\xdf\xb4\xb0\x70\xe6\x0e\xfc\x32\xc2\x8c\x4f\x2d\xeb\x91\xbd\x45\xfe\x35\xd0\x58\xe4\x03\x34\xaf\xef\x17\x24\xfd\xf0\xfe\x5c\x14\x1e\x01\x35\x84\x7b\x2f\x3c\x1f\x42\x9a\x1f\x4a\x91\x7b\x4b\xd3\x81\x21\x3f\x9a\x21\xb7\xdb\x29\x82\x20\x9b\x40\x1c\xf8\xf1\x81\x1f\x1f\xf8\xf1\xe3\x1b\xb4\xc1\xe3\x3f\x14\x10\x07\xc6\x9d\x06\x9f\x32\x37\xee\x6b\xce\x5e\xd9\xef\x76\xf7\x22\xc8\xd1\xed\xd9\x9e\x29\xa2\x48\xf2\xe3\x1a\xb4\xce\x9b\xd1\xe7\xc9\x94\xf7\xec\xce\x7a\xa0\xc7\xd0\xe5\xa7\xd8\x9a\xb5\x5e\x9d\x77\x7b\xb3\x83\xbf\x95\xc0\x8f\xff\xe2\xfd\xa2\x47\x77\xe6\x4f\xd3\xd3\x9f\xed\xd8\xfb\x19\x1a\xb4\x03\xbb\xfe\xc0\x3f\xbf\x0f\xff\x8c\x6f\xd1\x5a\xc1\x38\x70\xd0\x03\x07\x3d\x70\xd0\xef\xf0\x23\x81\xef\xdb\xa4\x75\x6d\x3e\x31\x26\x7a\x7f\xf4\x4f\x00\x00\x00\xff\xff\x0b\x26\x20\x9a\x10\x3e\x00\x00")

func static_bleve_mapping_js_mapping_analysis_js_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_js_mapping_analysis_js,
		"static-bleve-mapping/js/mapping/analysis.js",
	)
}

func static_bleve_mapping_js_mapping_analysis_js() (*asset, error) {
	bytes, err := static_bleve_mapping_js_mapping_analysis_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/js/mapping/analysis.js", size: 15888, mode: os.FileMode(420), modTime: time.Unix(1447347900, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_js_mapping_index_mapping_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x56\xdf\x6f\x22\x37\x10\x7e\x86\xbf\x62\x8a\xa2\x63\x57\x22\xd0\xe7\x44\x79\xe0\x92\x97\x6b\x95\x4b\x75\x8d\xfa\x12\x45\xc8\xec\x0e\xe0\xe0\xb5\x57\xb6\x37\x39\x7a\xe1\x7f\xef\x78\x7f\xb0\xde\x1f\x10\xda\xaa\x2a\x0f\x09\xd8\x33\xdf\x8c\xe7\xfb\x66\xec\x55\x26\x23\xcb\x95\x04\x2e\xb9\xfd\x2c\xf0\x15\xbf\xc8\x18\xbf\xdf\xb3\x34\xe5\x72\x7d\xab\xa4\xd5\x4a\x08\xd4\xc1\x10\xe8\x73\x61\x22\x95\xe2\x04\x2e\x36\xd6\xa6\xf4\x4f\xa8\x35\xfd\xcd\xf8\xf2\x5e\xc5\x4c\x4c\x08\xa4\xf6\xfd\x22\x27\xa0\x52\x87\x6d\x42\xf8\x91\xbb\x97\x3f\xe1\xe6\xf0\xed\xfd\x1d\x7e\xec\xaf\x87\x1e\xf8\xd4\x58\x66\x79\xb4\x48\x35\xae\xf8\x77\x32\xed\x5d\x26\xbf\x71\xb1\x72\xb9\x74\x49\x5f\x26\x45\xd0\x31\x61\x0d\x5e\x99\x6e\x64\x02\x37\x39\xbe\x17\xa3\xb9\x0b\xbf\xfc\xfe\xf0\x75\x9a\x32\x6d\x30\xc8\xbf\x1a\xab\x69\x83\xaf\x76\x41\xf3\x40\x61\x58\xa6\xea\x2f\x4f\xed\x2e\x45\xe3\xc5\xe8\xd9\x2c\x8f\xd9\xd9\x65\x92\x89\x9d\xe1\x47\xbd\x0f\xfb\x25\xc0\xa0\x77\xb7\xf8\xf2\x27\xea\x0f\x71\x3c\xcb\xd3\x88\xd1\x86\xe9\xc5\x8a\x0b\x7b\x0e\x68\xc3\xf8\x34\xae\x55\x5b\x94\xfc\xac\x54\x3d\xd3\xf7\xf7\x8f\x20\xcf\xce\xb5\x69\x7d\x46\xb2\x0b\x52\xd6\xb9\xb0\xb9\xa9\x2f\x69\xbe\x82\x86\x84\x9e\x46\x31\xae\x58\x26\xec\xa2\xd4\xeb\xe8\xb9\xea\x8d\x7e\xe5\x3c\x8d\x46\xcf\x24\xd0\x0f\x30\x0a\x65\xed\x8b\x98\x4e\xfd\x36\x89\x72\xaf\xb2\xa5\x1f\x09\xaa\xdb\xd1\x55\x33\x77\xa3\x86\xcd\x8e\xe4\xe6\x0f\x26\x78\x4c\x88\xd5\xb4\x08\x28\x6b\xd0\x68\x33\x2d\x5d\xac\xca\x22\x08\xaf\xa1\xd5\xcd\x3e\xf8\x37\x34\x94\x76\xeb\x38\xc5\x62\xe9\x94\x67\x3b\x2f\x8b\x7a\x6b\xb5\x08\x4e\x4f\x9c\x2a\xd1\xd9\x0c\x2e\xff\xe6\xa7\x91\x65\xd5\x16\x5f\x59\x82\xde\x78\x6a\xad\x13\xb3\x4f\x54\xeb\x41\xe9\x24\x14\x8b\xe7\x2d\x47\xbf\x40\xf5\xd0\x71\xb9\x4f\x53\x65\x6c\x30\x9e\xb1\x94\xcf\x16\x0d\xdc\xf1\xe4\x78\xb1\x82\x30\x9c\x1e\x70\x4c\x16\x45\x68\x4c\x70\x08\x12\x33\xcb\xfc\x40\x27\x4e\xe4\x4c\xeb\xee\xbf\x3e\xb8\xec\x3d\x7c\xd4\x5a\xe9\x26\xfa\x04\x22\x15\xa3\x8b\x31\x18\x54\xe7\xce\xcd\xee\x29\x11\xb6\xc6\x12\xd9\xc7\xa3\x02\x55\xa3\x8e\xd4\xdf\x5f\xc9\x9b\x1b\x90\x99\x10\x39\xae\x97\x74\xa7\xa2\x24\x28\x5f\xda\xa5\x19\x45\xc4\x47\x9e\xe0\x6f\x6e\x62\x77\x38\xeb\xdb\xed\x61\xee\x8e\xcc\x6c\x07\xe4\x4c\xfe\xe2\xae\xf3\x7f\xc2\x62\xff\x49\x73\x2e\xab\x14\x16\xf9\xbd\xf5\x7f\x50\xda\x9b\xdc\x71\x62\x7b\x0a\xde\x4f\xef\x72\x67\x71\xae\x35\xdb\xd1\xac\x7a\x45\x6d\xbb\x14\x1f\xb3\x70\x34\x8f\x5f\x8c\x92\xe3\xe7\x7a\x30\x3c\x3e\xdc\x3d\x5c\x81\xcb\xe0\xf3\x11\xb7\x95\x56\x09\x50\x4e\xb4\x36\xfd\x97\xf3\xa4\x9c\x89\x35\x99\x84\x34\x17\x42\xbd\x19\xb0\x1b\x84\x88\xb9\xc9\x0b\x56\x41\x8c\x14\x3e\xe1\x12\x5d\x49\x69\x4b\xe3\xd8\x00\xa3\xe1\xed\x06\x6d\xae\x20\x28\xc7\x7b\x4d\x66\x39\x65\xaf\x5a\x73\x79\x32\xfc\x30\x1a\xa5\xa5\x39\x8d\xd6\x62\x39\xd3\x1a\xa5\x6d\x46\x99\xf8\x18\x29\xea\x8d\xbb\xca\xb8\x24\x4f\x93\x52\xc9\xd1\xa1\x30\xc8\xa8\x4a\x94\xe7\xad\x46\x22\x73\x76\xa7\x24\xce\x1e\x7e\x85\x65\x66\x2d\xbd\x20\x23\xc1\xa3\xed\xb5\x8f\xa3\xf4\x24\x8f\xe8\xdc\xe0\x8d\x49\xeb\x9e\x5b\x04\x64\xb0\xc8\xa4\x91\x41\xf1\x0a\xeb\xbd\x0b\xaf\x8e\xb7\x96\xaf\x9f\x7f\xcc\x9a\xf7\x08\xee\xb6\xae\x7f\x3f\x93\xfa\x7f\x6a\x16\x9f\x5a\xbb\xd5\xba\xa5\x04\x5c\x1b\x78\x3d\x54\x73\xe4\xee\x67\x7d\xf2\xd1\xd9\x73\xd8\xc3\xcb\x33\x8f\x50\x3d\x39\xf3\xbb\xd7\xd6\x97\x7b\xd5\x4f\x85\x51\xeb\x99\x40\xe6\xba\x7e\x54\xd4\x86\x31\x0a\xd2\x62\x73\x6f\xd8\x3a\xcc\xf1\x5c\x4d\xa4\xb3\x65\xa0\xc3\xb0\xd9\xca\x44\xc5\x37\x24\xa1\x19\xfe\x8a\x62\x47\x30\x89\x22\xf5\x91\x02\xf5\x0e\x48\x7b\xf4\xf7\x8d\xdb\x0d\x8c\x2f\xc6\x50\xbc\xe8\x27\xf0\xb6\xe1\xd1\x06\x12\xbe\xde\x58\x58\x62\x85\x12\x67\x85\xf4\xe4\x3a\x13\x4c\xbf\x18\x48\xd0\xb2\x7c\x00\x36\x99\x2b\xf2\x48\xda\x6c\xb9\x33\xa9\x95\x5b\xa7\xc9\x34\x52\xcb\x17\x8c\xec\xa8\xcd\xd8\x4a\x69\x08\x1c\x2d\x5b\xa7\xf8\xa4\xbd\xdd\xc2\xda\x16\x58\x45\x09\x46\xf0\xe9\x13\x6c\xf3\x17\xf0\xdc\x06\x3f\x17\x5b\x17\x9d\x08\xad\x5a\x27\x4f\x5b\x8f\x00\xff\x13\x29\xd7\x24\x19\x76\x77\x3d\x05\x55\x1f\x07\x43\xac\x96\x47\xa7\x1f\x61\xd3\x6d\xdf\x27\xbf\x92\xd1\xa4\xa2\x6b\x3f\xfc\x2b\x00\x00\xff\xff\x5f\x50\x03\x26\x03\x0e\x00\x00")

func static_bleve_mapping_js_mapping_index_mapping_js_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_js_mapping_index_mapping_js,
		"static-bleve-mapping/js/mapping/index-mapping.js",
	)
}

func static_bleve_mapping_js_mapping_index_mapping_js() (*asset, error) {
	bytes, err := static_bleve_mapping_js_mapping_index_mapping_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/js/mapping/index-mapping.js", size: 3587, mode: os.FileMode(420), modTime: time.Unix(1445455002, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_js_mapping_type_mapping_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x59\x5f\x8f\xdb\xb8\x11\x7f\xdf\x4f\xc1\x13\x82\x93\x8c\xf5\xea\xd2\x57\xbb\x41\x91\xcb\xe5\x80\x14\x68\x6f\xb1\x4d\xef\xc5\x58\x18\xb4\x44\xef\xb2\xd6\x1f\x83\xa2\x7c\x71\x2f\xfb\xdd\x3b\x43\x8a\x14\x49\x51\x5e\xa7\x40\x84\x00\x91\x35\xc3\xe1\x70\x38\xf3\xfb\x0d\xb9\xfb\xbe\x29\x24\x6f\x1b\xc2\x1b\x2e\x7f\xae\xd8\x89\x7d\x3e\x1f\xd9\x3f\xe8\xf1\xc8\x9b\xa7\x0f\x6d\x23\x45\x5b\x55\x4c\x64\x6f\xba\xa2\x3d\xb2\x25\x91\xa3\xf4\x53\xb3\x20\x7f\xde\x10\x78\x6a\xfd\xa1\x23\xef\xc8\x0e\x4d\xc0\xb8\x13\x13\xf2\x57\xd1\xd6\x8e\xb5\xcc\x1f\x7b\xa3\x86\x6a\xbb\xf9\x9e\xb3\xaa\x44\x5d\xb4\xb1\x49\x25\xfb\x22\xd3\x25\x49\x9b\xbe\xde\x31\x81\x6f\x25\x95\x4c\xf2\x9a\xa9\x77\xde\x51\x98\xa7\x4c\x1f\xd7\xda\xc8\x89\x0a\x72\xe0\x4d\xf9\x5e\x4a\x81\x06\xb4\x57\xf8\x24\xca\x70\xb2\x72\x3e\xe1\x93\x1e\x05\xcc\x2a\xe4\x39\x5d\x91\xa6\xaf\xaa\xa5\x2f\x6d\x28\x4c\x14\x95\xe0\x12\xe2\x12\xda\xd0\xea\xfc\x5f\x70\x36\x2a\xed\x64\x2b\x66\x06\x82\xdf\xec\xcb\x9c\xa8\xa8\xfa\x92\x6d\x25\x13\xf5\xf6\xc4\x0a\x30\xd2\x5d\xd6\xe4\xcd\x96\x56\x55\x5c\x07\x43\xb8\xdd\xb7\xa2\xa6\x72\xa2\xf0\x32\xbe\x26\xc3\x6e\x4e\x83\x36\x1f\x16\xd6\xe8\x0d\x89\xcf\x7b\x86\x81\xbc\x98\x11\xb2\x3d\xed\x2b\xb9\x0d\xc2\x37\x3a\xa6\xde\x5e\x86\x8d\xb6\x9b\xbc\x49\x07\x2f\x31\x67\xd2\x47\xd8\xf3\xa9\xc8\xa6\xc7\x4f\x3f\x91\xbb\xff\xef\xf1\x72\xd4\xc9\x72\xf3\xba\xf6\x14\x58\xc9\x25\x7c\x05\x39\x2e\xc1\x97\x1d\xdb\x63\x7f\x9c\x97\x7c\x6e\x9f\x9e\x2a\x06\x72\x53\x8f\x59\xbb\xfb\xcf\xc2\xd9\x80\xc0\x4c\xe6\xff\x7e\x47\x94\xfa\xdf\x94\x79\xb2\xc2\x5f\x6b\x1d\x38\x6f\x2a\xc1\xea\xf6\xc4\xb0\x2c\xef\xa9\x60\x8d\x0c\xe6\x5b\x12\xa5\x16\x99\x16\x57\xa6\x82\xfb\x4b\xdb\x30\xad\xba\xa7\x55\xc7\x16\x6b\x0c\xee\x07\xda\x14\xac\x22\xb4\x39\x13\x54\xec\xf2\x1b\x3b\xde\x9d\x37\x5b\xc4\x7c\xa2\x65\xf9\xe1\x99\x57\xe5\xaf\x58\xa8\xae\x43\x43\x8c\x5d\x6f\xf8\xde\x2e\x7c\x88\xf5\x22\xc8\x51\xc1\x64\x2f\x9a\xb5\x93\x3e\xf6\x15\x41\x62\xef\x81\x03\x3e\x5b\xcc\x9b\x15\x49\x15\x4e\xa4\x7e\x72\x1a\x90\x58\x91\x24\xf1\x25\x58\x09\xd3\xaf\x08\x0e\xf0\x15\xc1\x2b\x90\x98\xec\x9e\x8e\x51\xc0\xb0\x22\x52\xf4\xcc\x17\x28\x58\x88\x0b\xa6\xa0\x70\x49\x4f\x43\x42\x4c\xc3\x01\x84\x09\x1e\x8c\x21\xdc\xe7\xdb\x31\xb1\xed\xee\x40\xe0\x89\xde\xd6\x8f\xc0\x11\x67\xb3\x5b\x1a\xc8\x3b\x48\x0f\x48\x0d\xc7\x88\x2f\xce\xfb\xa6\x7b\xe6\x7b\x99\x81\xd6\x4d\x2c\xd7\x86\xc9\xd6\x73\xe9\xaf\xab\x48\x39\x1a\x4d\xa6\x81\x65\xbe\x67\x3a\xe1\xe0\xda\x4c\xa3\x3d\x0a\x47\x5b\xf1\xe0\xde\x6c\x5a\xd6\x73\x69\xe9\x4c\xa0\x4d\x40\x89\x7b\xc8\x07\xb5\x6e\xe1\xee\x9a\x14\x1d\x80\x3a\x9a\x0d\x1a\xa6\x63\x22\xbd\x6b\x2b\xb2\x79\x5c\xc6\x16\xa8\x24\xb1\xd4\xa9\xbf\x29\x75\x8c\xb5\x25\xa9\xe3\xc9\x63\x14\x6c\xfa\xd4\x17\xd3\xa7\xfe\xe6\xf4\xb1\x30\x77\x01\x88\x71\xbf\xe8\xa0\x33\x72\x0e\x28\xe5\x6a\xcf\x1e\x9d\xc2\x69\x05\xc9\x8c\x3a\x94\xa3\x1e\x16\x26\x09\x8c\xdc\x24\xdb\x84\xdc\x6a\xb5\x5b\x92\x6c\x3f\x3e\x3c\x24\x8f\x9e\x9b\x17\x94\xef\x1f\x3e\xfe\xae\xb4\x51\x86\x5f\x1f\xa3\x69\xa6\x1c\x1c\x63\x83\x7b\x3c\x09\xcf\x28\x9e\xe1\x0f\x8f\x06\x26\xe4\xd1\x1e\xc2\x38\x9d\x68\xc5\x4b\x3b\xdb\x77\x0b\xa1\x51\xf8\x1d\xa7\xa3\x80\x87\x60\x57\x29\x9a\x78\xf8\xb8\x08\x85\xeb\xbb\xea\x4a\x3c\x3b\x31\x25\x3d\xa1\x5e\x97\xa7\xac\x83\x80\x9f\x16\xe4\xc7\x1f\xb5\xce\x7a\x32\xfc\xc5\xfb\xf2\x42\x18\xb0\x28\xd4\x83\x65\x51\x28\xce\x7c\x32\xc8\x6e\xed\xb0\xcd\xd1\x14\xf0\xe7\x7a\x99\xc3\xac\x1f\x94\x63\xdf\x00\x74\xd7\xed\x41\xc9\x2a\x26\xd9\x6c\x36\xaf\xaf\x54\x0e\x97\x12\x3a\xdf\x1e\x30\xb6\x48\xb4\xed\x3e\x73\x73\x7a\x81\x18\x99\x9a\x84\x4c\x23\x55\x66\x55\x33\xdd\xb5\x7c\x6a\x4e\xed\x81\x11\x93\xf4\x85\x0e\x3f\x55\x87\xa1\x02\x18\x73\x47\x8b\x43\x1e\x73\x64\xf4\xde\x9a\xbc\x50\x4a\x73\x58\x53\x3c\xd3\xe6\x89\x95\xf7\x43\x8f\xe1\x56\x93\x82\xdb\x90\xa8\xd4\xc7\x7c\x8b\xb0\xae\xa2\x84\xeb\x1d\xbe\x99\x3e\x45\x7d\x0f\x57\xae\x75\x70\x18\x31\x03\x8c\xfe\x3a\xec\xb2\x3d\x07\xdb\x23\x3a\xe3\x1f\xa7\x68\x51\xb0\x23\x34\x0b\xd6\xd5\xae\xed\x45\xc1\xde\xab\xcf\x4b\x88\x4c\x27\xdd\xf7\x4f\xd8\xc3\x84\x0e\xbd\xce\xba\xf8\xe8\x84\xd4\x5d\x66\x98\xd9\x93\xe2\xd7\x5e\xfc\x42\x25\x05\x6f\x5d\x97\xf2\x37\x75\x0b\xdb\x05\x35\xda\x07\x56\x70\x18\xba\x88\x2c\x0a\x83\x46\xcf\xf3\x37\xb0\xbd\x35\x34\xc7\x39\x26\x65\x86\xa7\x26\x7a\xa7\x8e\x7d\x8b\x00\x48\x06\x17\xb3\x71\x76\x8d\x5f\xb7\x09\x9e\x9b\x29\x6f\x98\x48\x54\x5a\x9a\x79\x66\xe2\x6d\x8f\xe0\x2e\x29\x52\x21\x96\xc0\xd6\xf0\xea\x46\xc7\xd6\x22\x07\x9f\xdf\xae\xe1\xbf\xbf\x12\xd0\xcc\x2b\xd6\x3c\xc9\x67\xf8\x7d\x7b\x1b\x0b\x37\xa8\x6c\x38\x80\x07\xf8\x32\x31\x69\xb7\x16\xcc\x74\xc7\x8a\x17\x2c\xe3\x4b\xf2\x97\xc5\x3c\x9c\x38\xae\x0f\x21\x70\x32\xb5\x53\x78\xb8\xf2\xd8\x3e\x16\x35\x9f\x80\x9c\xe3\xa7\x73\x49\xf0\xba\x15\xf7\xb6\xe1\x73\xeb\xde\x35\x04\x67\xb6\xc5\x34\xf6\xb0\x04\x44\x5d\x3d\x98\xec\xe1\x50\x44\x28\x69\x18\x15\x77\xca\xea\xdd\x5e\x70\xd6\x94\xd5\x99\x38\x66\xb1\x65\xa6\xd0\xb3\x8b\xbe\x80\xf9\x19\x91\x2d\xa1\x68\xe5\xdf\x9f\x46\x75\x5f\x25\x27\xe4\xe7\x33\x49\xd0\x6e\x02\xec\xd0\xe8\x0d\x20\x7f\x70\xf9\x0c\xcd\x19\x39\xb0\x33\x8e\x17\xec\x28\x58\x07\xa2\x8e\xc8\x67\x46\x86\x43\xb1\x8a\x85\xed\x7e\x6e\x6c\x9e\x5c\x79\xc7\x62\x62\xa6\x3a\xcc\xf1\xec\xba\x31\x84\xe8\xa8\xc2\xe7\xbf\xff\xeb\xb7\x7f\xe6\x47\x2a\x3a\x96\xa9\x57\x58\x01\x08\xf8\xfe\xec\x99\x1c\xe2\x68\xf3\x50\x79\x08\x9c\x10\x99\x36\x98\x1a\xdb\x80\x51\x69\x83\xef\x2e\x33\xdb\xde\xee\xd8\x77\xcf\xb6\x59\x9f\xf6\x80\xaa\xc2\xc0\x96\xd7\x05\xaf\x27\xe0\x3c\x48\x37\x09\x02\x9f\x4b\x28\x58\x0e\x38\xf7\x4c\xaf\x6e\x80\x52\x9e\x67\xda\xf5\x42\x87\x3d\xf0\x70\x50\xb0\x8b\xe8\x5a\x50\x29\x39\xd4\x13\x3d\xff\x26\x4a\x26\x3e\xb4\x35\xc4\x56\xf5\x14\x6b\xaf\x74\x82\x9b\x04\xbb\xc7\xf1\xc1\x19\x5d\x92\x9d\xeb\xba\xc1\x20\x9a\x0f\x03\xb6\x2d\x8e\x20\x5f\xbf\x92\xb7\x0b\x72\x47\xb2\x5d\x4c\xb0\x8e\xc2\x0f\xef\x3e\xd6\x47\x79\x0e\x1b\x5e\xbb\xd7\x07\xdc\xe8\x40\xe8\xf8\x10\x40\xf5\x4b\xe8\xe3\x58\xf1\xe1\xc4\x61\x4c\xe3\x09\x64\x72\xd7\x15\xe9\x83\xc9\x78\x21\x33\x9c\x2f\x71\x95\x1b\x37\xbb\xec\x1a\x0c\xf5\xe1\x52\xcc\x98\xe1\x1b\x67\xd1\xc6\xb2\x76\xac\x8f\x9a\x1b\x63\x28\xe8\x6c\x30\xbd\x4c\x1c\x6b\xd7\x72\x0c\x72\xa1\xf0\x81\xfe\xeb\x16\xf3\x35\xed\xcc\x62\x78\x03\xa8\x02\xff\xec\xe0\x72\x90\x4c\xfb\x42\x87\x0e\x70\x3d\xc3\xea\xe7\xbb\xd6\x21\x60\xb8\xa2\x41\x17\x68\x61\xda\xa3\x2a\xd3\x5e\xa7\x00\x23\xa6\x4d\xc3\x44\x7d\x28\x5e\xdd\xbe\x5c\xdb\xfa\x4e\xd4\xea\x49\x8d\xa7\x53\x5b\xb5\x29\xd4\x79\xb7\x02\x44\x09\xd9\x1b\x1f\x9b\x78\x17\xd8\x2e\xc6\xbd\x10\xec\x78\xa8\x6d\x50\xc7\x35\xe8\x8b\xa5\x28\x96\x84\x58\x35\xa6\x4b\x12\x85\xc6\xcb\xa8\xe2\xfb\x70\x0d\x04\x39\xc6\xe3\x97\x9b\xa1\x92\x2d\x37\xfd\xb2\x9e\x65\x52\x7a\x81\x11\x15\x69\xc6\x88\x16\x8d\xcc\x73\xed\xf7\x26\x52\xbf\x7d\xb0\x7d\x83\xc3\xa1\x3e\x5f\xfe\x69\xee\xa4\x9d\xc8\x75\x85\xe8\x77\xd9\x3c\x93\x5a\xab\x13\x1e\xe5\x0e\x20\x75\xf3\x0c\x6a\x34\x54\xd9\xc6\x5a\xa6\x8d\xc7\x63\x00\x83\x89\xba\x1b\x18\xbe\x5e\xc1\x93\x21\xd1\xdd\x5b\x14\x52\x17\xb4\x9d\x43\x7c\x93\xf4\xf0\x99\xe6\x1d\xe1\xeb\x48\xaf\xe8\x38\x3b\x5e\xcf\x3f\xb0\xa2\x17\x1d\x3f\x31\xc8\x16\xdd\x05\x13\xd8\x19\xd8\x5e\x67\x93\xd3\x6d\x0a\xd5\xce\xf6\xfc\x4b\xee\xd3\x87\x8e\x7a\x1d\x1e\x98\x86\x43\x62\xad\x5a\xf0\x04\x78\x8b\x15\x32\x99\x14\xac\x47\x6e\xf5\xdc\xad\xc0\x60\xeb\xa0\x6d\xe9\x0d\x4d\xf0\x24\x7a\xc0\x73\x9c\x78\x2f\xb3\xb7\x5a\xb4\x9d\xcc\x10\x06\x7c\x73\x98\x41\x5c\x08\x38\x1c\x86\xc2\x73\x8a\x13\x40\xf7\x41\x33\x36\xe1\xf0\xc7\x35\x08\x66\x5a\x0e\x6f\x5b\x82\xe8\x17\xa6\x8a\x75\xa9\xeb\xf2\x32\x20\x9b\xa8\x83\x3a\xdf\xf5\x92\x69\x9a\xa2\xc6\x44\xd9\x16\x3d\x1e\x9a\x6c\xae\x62\x4f\x08\x05\x38\x42\x1a\x4a\xf2\x28\xef\x4f\x53\x2c\x2c\x00\xc7\x8a\x2e\x3c\x57\x68\x41\x29\xce\xf8\x17\xa9\xf1\x2a\x4a\x1c\x4f\xdf\x96\x0e\x7f\xb0\x17\xbe\xb8\x78\x80\x1f\xde\x11\x5a\x55\xed\x1f\xb1\xdb\x1b\xaf\xef\x78\xe7\x2c\x66\xe3\x5b\x8d\xe4\x05\x4e\x3d\x0e\x8d\xdf\x32\x9b\xe7\xaa\x29\x26\x17\xcd\xee\x73\xe1\x72\xd8\x7d\xec\x45\xb1\xea\xf8\xe6\xf5\x46\x2f\x56\xb0\x69\xf3\x7a\xe3\xed\x72\x54\xe5\xe5\xaa\x82\x30\x2b\xcc\x5f\xeb\x44\x66\xfb\x8e\x57\x07\xfa\x93\x0e\xf5\xac\x34\x37\x63\x85\x04\x9b\xa8\xc3\x3f\x03\x8c\x81\xd5\x30\x65\x63\x74\x80\x4f\x40\x09\x79\x9c\x14\x9c\xa0\x60\x1e\xb8\xbc\x10\x67\x04\x67\x51\xb3\xa7\x27\x7c\x2e\xa0\xbd\xa7\xf7\x3a\x81\x44\x62\x60\x51\xd2\xfc\x15\x3a\x68\x85\x72\x0f\x0a\xc6\x1f\xee\xdf\x1c\x66\xbb\x94\xff\x05\x00\x00\xff\xff\xc8\x18\x29\xc5\xec\x20\x00\x00")

func static_bleve_mapping_js_mapping_type_mapping_js_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_js_mapping_type_mapping_js,
		"static-bleve-mapping/js/mapping/type-mapping.js",
	)
}

func static_bleve_mapping_js_mapping_type_mapping_js() (*asset, error) {
	bytes, err := static_bleve_mapping_js_mapping_type_mapping_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/js/mapping/type-mapping.js", size: 8428, mode: os.FileMode(420), modTime: time.Unix(1445644945, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_analyzer_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x57\xcf\x6f\xeb\x28\x10\xbe\xe7\xaf\xe0\x59\x7b\xe8\x3b\xf8\xb9\xdd\x5e\x1d\x4b\x55\xa4\xbd\xb5\x7b\xd8\xbd\xaf\x88\x4d\x62\x14\x0c\x16\xc6\x69\xd3\x28\xff\xfb\x0e\xe0\xd8\x60\x93\x1f\x6d\xb3\x52\x0f\x6b\xa9\x09\x81\xe1\xe3\x9b\x99\x8f\x99\x3a\x2d\xe8\x16\xe5\x0c\x37\xcd\x3c\x5a\x32\xb2\x25\xcf\xa2\xc0\x2c\xca\x66\x33\x77\xa5\xd2\x93\x71\x49\x70\x41\x24\xac\x21\x78\xd2\xf2\xd1\x5f\x55\x54\x31\x12\x65\x8b\xb6\x51\xa2\x42\x4f\x1c\xb3\xdd\x3b\x91\x69\x52\x3e\x66\xb3\x34\x01\xb0\x20\xe6\x52\x14\xbb\x23\xa2\x5e\xe4\xeb\xb8\x29\xc5\xeb\x3c\x22\x52\x0a\xf9\x4c\x9a\x06\xaf\x49\x64\xd6\xcd\xd3\x6d\xc6\x8c\x48\x85\xcc\x67\x5c\x60\xbe\x26\x52\xef\xcc\x99\xc0\x1b\xc7\x58\x0a\x46\x3a\xdb\x28\x43\xfb\xbd\x8b\x79\x38\xd8\x43\x3b\x66\x66\xbc\x12\xb2\x3a\x9e\xa0\xc7\x51\x87\x60\xc6\x59\x8f\xeb\x7a\xa1\x97\xe2\xb5\x14\x6d\xed\x18\x18\x23\x86\x97\x84\x21\x58\x07\x06\x1c\x57\x10\x9a\x17\xf8\x4c\x13\x33\x3f\xb2\xa5\xbc\x6e\x95\xf6\xa0\xa0\x0d\x86\x34\x14\xf3\x68\x4b\xc9\xeb\x9f\x9c\xed\x6c\x3e\x3c\xf3\xee\x01\x73\x88\x21\x61\xf3\xc8\xc0\x23\xb5\xab\x81\xab\x22\x6f\x2a\x68\xee\x12\xce\x05\x57\xe0\x5a\x84\x28\x9c\xa4\xec\xf6\x9a\xe1\x9c\x94\x82\x41\x8a\xe7\xd1\x8b\x21\x3c\x78\xec\x44\xe9\xca\x08\x58\xff\xb3\x45\x89\x25\xce\x15\xe4\xe7\x0f\xca\xe0\xab\x09\x04\x20\x6d\xd9\x11\x8c\xd1\x46\x75\x60\xb3\x89\xb7\x56\x18\xb8\x53\xd6\xaf\x1c\xa0\xff\x59\x59\xd4\x5f\x8c\xf0\xb5\x2a\x51\x8a\x1e\x26\x79\xa0\x53\xf0\x98\x2a\x02\x19\x7d\x11\x5c\x27\x84\x7a\x64\x92\xf6\xbf\x22\x97\xa1\xfb\xf1\xc6\x96\xc6\x8d\x90\x4a\xe7\x7c\x0a\xd9\x65\x37\x88\x79\xbd\x97\x13\x2d\x00\xb2\x24\x35\xc1\x6a\x80\xd6\x59\xb2\xf9\x41\x94\xa3\xe0\x81\x48\x41\x1e\x37\x68\xb9\x43\xbf\x51\x5e\x90\xb7\x11\x01\xa0\xd0\xd4\x98\x1f\x49\xac\xd9\xae\x2e\x29\xc8\x0c\xf5\xa3\xb8\xa2\xbc\x05\xde\x69\xa2\x0d\xf5\x75\x44\x81\xe3\xbb\x6b\x39\x86\x05\xce\x74\x35\x8f\x7e\x5c\xbe\x15\xb6\x0e\xd0\x7c\x33\x8f\x24\xa9\xc4\x96\x0c\xe0\x77\x96\xf9\xcf\xf0\xbe\x33\xcc\x2d\x10\xaa\x5b\xc6\x62\x49\xd7\xa5\xea\xbd\xf0\x93\x10\x94\x92\x3b\xd1\x55\xb8\x2b\x5c\xb9\xae\xbc\x64\xe1\x72\xe2\xdc\xce\x5c\xb0\xb8\xa9\xe2\x87\xfb\x40\xbe\x08\x23\xb9\xa9\x3a\x90\x67\x28\xa1\x20\x87\xa2\x18\xa2\xb5\x30\x93\xc5\xdd\x89\x70\x79\x0a\xb5\xfb\xcc\x3d\xb7\x9b\x4d\xfd\x38\xb1\x2f\x54\x88\xc2\xa6\xba\x3a\x4d\xb1\xc7\xda\x37\xce\x88\x5a\x51\xc1\x5d\x6d\xe7\x9e\xa6\x87\x5f\x9a\x1a\x40\xec\xf7\xc3\xd4\xe1\x90\x26\x16\x60\x12\xa4\xc4\x46\x69\x9c\x68\x53\x0e\x2f\xc4\xfc\xf7\x69\xc8\x97\xad\x52\x96\x65\x27\x51\x2f\xe2\x77\xaa\xa4\xcd\xcf\x63\x21\xb7\xb6\x17\x82\xb8\x54\x1c\xc1\x5f\x5c\x90\x15\x6e\x99\xf2\x24\xfa\x54\x14\x69\x62\x51\x2e\xd0\x1f\x4d\x7c\xba\xda\xf7\xdd\xce\xdc\xea\xbf\xc5\x86\x70\xfa\xae\xff\x63\xe8\x87\xa1\xea\x3f\xe8\xf0\x03\xdd\xcf\x51\xad\x3a\x82\x9f\x55\x6c\xa0\x9e\xf6\x1b\x43\xf6\x57\xaa\xd4\x48\x74\xea\xb0\x1f\xef\xa9\x38\xfb\xa3\xb5\x36\xfb\x1f\xbd\x34\xfb\x99\xb0\x32\xa7\xaa\xfc\x7c\x83\x36\xa4\x6f\xdf\x9c\x8d\x07\xdf\xb6\x3b\x07\xd9\x7d\xb5\x3d\x7b\xa0\xb7\xed\xcf\x26\x49\x81\x06\x7d\xee\xc8\x2f\x75\x64\xf7\xc0\xdb\xb7\x64\x07\xfd\xff\x9e\xec\x47\x36\xd4\x93\x9d\x70\x7d\xac\x29\x3b\x1b\x6f\xd3\x90\x8f\x1d\xd9\x01\xbe\xb2\x1b\x2b\x5f\xc1\xca\x67\x36\x14\xbd\x6f\xd0\x90\x5d\x75\x7e\xaf\x8e\x6c\x87\x3a\x4f\xe7\x5e\xa9\x57\x42\xa8\xe1\x35\x7d\xf0\x50\x2b\xdc\x17\xf8\x09\xce\xbe\x87\x43\x6c\x72\xcc\x73\xc2\x40\x7b\xd9\x82\x89\x86\xf8\xae\x8c\x0e\xfa\x71\xab\x93\xcc\xe8\x23\x47\x9d\x80\x5c\xb6\x94\x4d\xee\x8d\x97\xd7\x31\xc7\x5a\xd2\x0a\xcb\x9d\x97\xc1\xbf\xf0\xd6\xf1\xbb\xcf\x81\xfd\xfe\x37\x00\x00\xff\xff\x68\x6a\xf9\x0a\x4c\x11\x00\x00")

func static_bleve_mapping_partials_analysis_analyzer_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_analyzer_html,
		"static-bleve-mapping/partials/analysis/analyzer.html",
	)
}

func static_bleve_mapping_partials_analysis_analyzer_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_analyzer_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/analyzer.html", size: 4428, mode: os.FileMode(420), modTime: time.Unix(1447346848, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_analyzers_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x54\x4d\x8f\xda\x30\x10\xbd\xf3\x2b\x5c\x9f\x16\x69\x03\x6a\xcf\x49\xa4\x4a\xed\x71\xb7\xa7\xfe\x80\x21\x1e\x12\x6b\xbd\xb6\x65\x4f\x80\x74\xb5\xff\xbd\xe3\x84\x7c\x40\x51\x51\xab\xaa\x08\xc1\xb3\xe3\x79\xf3\xfc\x66\x26\x39\xc1\xce\xa0\xa8\x0c\xc4\x58\xc8\x61\xd1\xff\x66\x91\x82\xf6\xa8\x64\xb9\x12\x22\xa7\x06\x41\x25\x94\x70\x18\x40\xbf\x5d\x3e\xc3\x2b\xe6\x5b\x06\x8b\xbd\x79\xcd\xa8\x3f\x9d\x76\xce\x0c\x39\xed\x9c\xea\x26\x2e\x61\xeb\x2c\xa0\x47\xa0\x42\x3e\x80\x65\xb6\x47\x38\x80\x59\x0b\x6d\xf9\xab\xf0\xf4\x04\xde\x6b\x5b\x6f\xf8\x99\xe9\xa2\x8e\x03\xf8\x81\x21\xca\x39\xa7\x2a\x73\x48\x4c\x95\xd1\xd5\x4b\x21\x51\x69\xfa\x7c\x3e\x76\x26\x15\x89\xf5\x51\x50\x68\x71\x2d\xcb\xb7\xb7\x7e\xf7\xfd\x3d\xdf\x42\x92\xab\x96\x54\x67\xc8\x0b\xa5\x0f\xa3\x35\x3b\xb2\x59\x1d\x5c\xeb\xc5\x84\xb2\x53\x94\x22\x38\x83\x85\xec\xd7\x72\x8e\xe4\xd8\x5d\x4b\xe4\x6c\x12\xa5\xf7\x85\xfc\x70\xd0\x78\xfc\x66\x4d\xf7\xe4\x14\x18\xb9\x38\x38\x7e\xee\xab\x5f\x4b\x41\x9d\xe7\x6c\x03\xf5\x2d\x92\x59\x6c\x2f\x53\xe1\x1e\x5a\x43\x3d\x3e\xc5\x0b\x7d\xac\x30\x7a\xb0\x63\x44\x6d\x3a\xdf\xe8\x8a\x05\x4f\x28\x4b\x3a\x6e\x25\x81\xa0\x21\x6b\xb4\x52\x68\xb9\x65\xd8\x50\xc9\x16\x26\xb2\x52\x7c\xe5\x90\xa5\x09\xdb\x41\xea\x3f\x32\x46\xa1\x41\xc2\x4b\x6b\xfe\xb7\x29\x14\x20\x36\x7f\xe8\xca\x97\x5e\xf7\x6f\x7d\xc9\xb7\xdc\x6b\x53\x13\x4e\x0d\x39\xce\xcf\x34\x2a\xb1\x71\xc7\x42\x7e\x27\x6d\xe2\xe6\x05\xbb\xf8\x70\x67\x46\xd6\x1b\x83\xb6\xa6\x46\xe4\xe2\xe3\x72\x5e\x44\xe5\x4c\x12\x57\xc8\x4f\xb2\x7c\x76\x16\x7f\xcd\xc9\xff\xe3\xa4\xe6\xb4\x77\x8e\x6e\xcc\xff\x25\xcf\xea\x2f\x6b\x3c\x57\xd8\xe2\x71\x2a\xef\xdd\xca\x5e\xd5\x35\xbe\x5e\x94\xd7\xb7\xc6\x64\x41\xd7\x0d\xf1\x05\xf1\x28\x46\xde\x6b\xef\x6f\x5e\x7c\xb8\x2e\x83\xf4\x2a\x2c\x57\x3f\x03\x00\x00\xff\xff\xd9\xa5\x25\x52\x26\x05\x00\x00")

func static_bleve_mapping_partials_analysis_analyzers_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_analyzers_html,
		"static-bleve-mapping/partials/analysis/analyzers.html",
	)
}

func static_bleve_mapping_partials_analysis_analyzers_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_analyzers_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/analyzers.html", size: 1318, mode: os.FileMode(420), modTime: time.Unix(1447346381, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_charfilter_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x54\xc1\x6e\xdb\x30\x0c\xbd\xe7\x2b\x34\x9d\xb6\x83\x67\x6c\xbd\xda\xbe\x04\xd8\xad\xdd\x61\xfb\x01\x45\x62\x62\xa1\xb4\x65\x48\x72\xba\x20\xc8\xbf\x8f\x92\x9c\xc4\x56\xdd\x01\x1d\x6a\xa0\xaa\x42\x52\x8f\x8f\x8f\x94\x2a\xa5\x8f\x4c\xa2\x70\xae\xe6\x3b\x84\x23\x3c\x1a\x25\x90\x37\x9b\xcd\xdc\xd3\x05\x63\xd1\x82\x50\x60\xc9\xc7\xe8\xab\xda\x87\xa5\xd7\x6b\x8f\xc0\x9b\xed\xe8\xbc\xe9\xd8\xb6\x15\x96\xfd\xd0\xe8\xc1\x56\x65\xfb\xd0\x6c\xaa\x92\xf0\x56\x61\x77\x46\x9d\xae\xa0\xc1\xd9\x1f\x0a\xd7\x9a\x97\x9a\x83\xb5\xc6\x3e\x82\x73\xe2\x00\x3c\xfa\xe3\x37\x1d\x16\x08\xd6\xb3\xb8\x16\x4a\xf4\x07\xb0\xe1\xa4\x44\x23\x9e\x67\xc1\xd6\x20\x4c\xb1\xbc\x61\xe7\xf3\x1c\xf3\x72\x49\x49\x27\x66\x71\xbf\x37\xb6\xbb\x66\x08\x7b\x3e\x21\xc4\x7d\x73\xc3\x9d\x57\x11\x5c\xc5\xc1\x9a\x71\x98\x05\xc4\x20\x14\x3b\x40\x46\xfe\x9a\xfb\x5e\x74\xa4\xce\x13\xad\x55\x19\xed\x59\xac\xee\x87\xd1\x87\x0a\x94\x76\x82\x3a\xa1\x6a\x7e\xd4\xf0\xf2\xb3\xc7\x53\x6a\xc9\x22\x7c\xfa\x28\x9c\x34\x04\xac\x79\x84\x67\xfe\x34\x10\x57\x0f\x7f\xfc\x6a\xf8\x9c\xb0\x34\xbd\xa7\xd2\x38\xd3\xea\xca\x8e\x0d\x28\x24\xb4\x06\xa9\xcb\x35\x7f\x8a\x84\xef\x15\xcf\x54\xfa\x2f\x05\x24\x4d\xc4\x3e\x0e\x44\x60\xc9\x9b\xdf\xb4\xae\x4b\x31\x43\x96\x06\x0b\xd7\x15\xdf\xbe\xb3\xa8\xcf\x7a\x12\x07\x08\xf2\xdd\xda\xc5\x69\x69\xc3\xe0\x24\x6e\x69\x58\x03\xab\x6d\xb4\x7e\xfe\xf2\xe6\xb1\x49\xf3\x7b\x45\x5f\x63\x49\xab\xe1\x6b\x9a\xaf\x06\x86\x3e\xe4\x1a\xbd\x0a\xac\xcc\xe0\xb5\xe9\x03\x09\x0b\x03\x08\x9f\x71\x27\x99\xd8\xb2\x18\xc7\x9b\xf3\x79\x61\xba\x5c\xaa\x32\xc1\x64\x3a\x96\x49\xc8\xdc\x1a\xfb\x9e\xfd\x5c\x8e\xc1\xed\xc6\xe6\x8a\x04\x8f\xee\x25\x8e\x0a\x98\xb3\x32\xc9\x30\x08\xdf\xf2\x72\xba\xf0\x65\xb0\xfc\xeb\x75\xd8\x1b\xe3\xef\x8f\xce\x6e\xf4\x3e\x95\xaf\xf7\x79\x93\x6f\xcf\x98\xef\x19\xfd\x15\x0a\xf6\x62\xc4\xec\x26\xc4\x27\x42\xcb\x67\xe2\x2a\x7a\x09\x48\x5d\x6e\xb6\x68\x1c\x8d\x62\xc2\x5e\x4d\xf4\xe9\xa3\x32\xc5\xdd\x7b\x52\xbd\x01\xb9\x1b\x35\xaa\x7c\x42\xd3\xed\x4f\x70\xaf\x38\x0e\x56\x77\xc2\x9e\xd8\x30\x22\x16\x56\x1f\x5a\x7a\x0f\x7f\x89\xe3\xac\xee\x5b\x0f\xd2\xff\xbf\x01\x00\x00\xff\xff\x96\x74\x92\x13\x1a\x06\x00\x00")

func static_bleve_mapping_partials_analysis_charfilter_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_charfilter_html,
		"static-bleve-mapping/partials/analysis/charfilter.html",
	)
}

func static_bleve_mapping_partials_analysis_charfilter_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_charfilter_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/charfilter.html", size: 1562, mode: os.FileMode(420), modTime: time.Unix(1447346878, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_charfilters_generic_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func static_bleve_mapping_partials_analysis_charfilters_generic_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_charfilters_generic_html,
		"static-bleve-mapping/partials/analysis/charfilters/generic.html",
	)
}

func static_bleve_mapping_partials_analysis_charfilters_generic_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_charfilters_generic_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/charfilters/generic.html", size: 0, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_charfilters_regexp_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x90\x41\x6e\x86\x20\x14\x84\xf7\x9e\x82\xb0\xff\xfb\x5f\x00\xdc\x75\xd9\x34\xe9\x0d\x10\x9e\x4a\xf2\xe4\x91\x07\x5a\xbd\x7d\x29\x9a\xb4\x26\xa6\x9b\xc6\xd9\x40\xc2\x30\x93\xf9\x44\x91\x72\x7e\x11\x16\x4d\x4a\x5a\xf6\xc4\xd3\x63\x60\x9a\xa3\x6c\x1b\x71\x48\xa1\xe9\x00\x45\x79\xd3\xd2\x8e\x86\x7b\x8f\x19\xf8\x03\x06\x58\x8b\xad\x9c\x33\x1a\x16\xaf\x6b\x64\x48\xc9\x53\x50\xcf\xfa\xe1\x27\xa0\x86\xf8\x10\xe7\x2c\xc2\xf0\x70\x3e\x99\x0e\xc1\x69\xb9\x78\xf8\x7c\x0f\xb8\xbd\x91\x33\x28\x4f\xf6\x43\xc5\x3e\x91\x03\xfc\x5d\xfc\xc2\x7b\xf3\x95\x3f\x6f\x11\xb4\xcc\xb0\x66\x79\x9a\x64\x29\x64\xa6\xeb\x0e\xef\x2e\x66\x89\x88\xc6\xc2\x48\xe8\xa0\xac\x3e\x60\xa8\x67\x41\xd5\x36\xcd\xbf\xa8\xd5\xe0\x6f\x6c\xf5\x32\x41\xc8\xf7\xf3\xda\x3b\xef\x02\xb6\xa7\xff\x41\xec\x2b\x00\x00\xff\xff\x9a\x37\xb9\x1d\x66\x02\x00\x00")

func static_bleve_mapping_partials_analysis_charfilters_regexp_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_charfilters_regexp_html,
		"static-bleve-mapping/partials/analysis/charfilters/regexp.html",
	)
}

func static_bleve_mapping_partials_analysis_charfilters_regexp_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_charfilters_regexp_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/charfilters/regexp.html", size: 614, mode: os.FileMode(420), modTime: time.Unix(1447347374, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_charfilters_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x54\x4d\x6f\xdb\x30\x0c\xbd\xe7\x57\x68\x3a\x35\x40\x9d\x60\xd8\xd5\xf6\x65\x1f\xb7\x76\x97\xed\x3c\x30\x16\x6d\x0b\x55\x25\x43\x62\x3e\x8c\xa2\xff\x7d\x94\x5c\x7f\xa4\x09\xd6\x6d\x18\x16\x04\xc9\x13\x4d\x3d\x3d\x3d\x92\xce\x09\x76\x06\x45\x65\x20\x84\x42\x0e\x8b\xf4\x9b\x05\xf2\xba\x43\x25\xcb\x95\x10\x39\xb5\x08\x2a\xa2\x88\xfd\x00\x52\xb8\xbc\x87\x47\xcc\xb7\x0c\x16\xb1\x6f\x7d\x77\x11\x9b\xd7\x8c\x12\x43\x8c\xbc\xb0\xe6\xb4\x73\xaa\x9f\xf8\x85\x6d\x32\x8f\x1d\x02\x15\xf2\xa6\xaa\x2d\x1f\x71\x5b\xd5\x07\x30\x6b\xa1\x2d\x7f\x15\x9e\xee\xa0\xeb\xb4\x6d\x36\x60\xc1\xf4\x41\x87\x4d\xd5\x82\xff\x51\x6b\x43\xe8\x83\x9c\x0f\x56\x65\x0e\x91\xae\x32\xba\x7a\x28\x24\x2a\x4d\x1f\x39\xf3\x4b\x4a\x1c\xb9\x45\x22\xbf\x15\xe4\xf7\xb8\x96\xe5\xd3\xd3\x10\x7f\x7e\xce\xb7\x10\x85\xab\x25\x5f\x7c\xca\xd9\x1b\xe2\x4b\xc6\x8c\xf3\xa7\x2f\x90\x17\x4a\x1f\x46\x5b\x77\x64\xb3\xc6\xbb\x7d\x27\x26\x94\x9d\x82\x14\xde\x19\x2c\x64\x5a\xcb\x79\x27\xef\xdd\xed\x89\x9c\x8d\xba\x75\x5d\xc8\x77\x07\x8d\xc7\xaf\xd6\xf4\x77\x4e\x81\x91\x8b\xc4\xf1\xf3\x7b\x17\x5c\x4b\x11\x45\xb3\x9e\x44\x7f\x8d\x68\x16\x9c\xa4\x2a\xac\x61\x6f\x28\xe1\x53\x38\xd3\xc8\x2a\x43\x07\x76\xdc\xd1\x98\xbe\x6b\x75\xc5\xa2\x27\x94\x45\x2d\xd7\x0e\x01\xaf\x21\x6b\xb5\x52\x68\xb9\xe5\xd8\x73\xc9\x26\x47\xb2\x52\x7c\xe6\x2d\x4b\x23\xb6\x83\xd4\x7f\x64\x8e\x42\x83\x84\x17\xf6\xfc\x6f\x5f\xc8\x43\x68\xff\xd0\x98\x4f\x49\xfa\x2f\xad\xc9\xb7\xdc\x72\x53\x2f\x4e\x7d\x39\x8e\xdb\x34\x59\xa1\x75\xc7\x42\x7e\x27\x6d\xc2\xe6\x01\xfb\x70\xf3\xf6\x40\xad\x37\x06\x6d\x43\xad\xc8\xc5\xfb\xe5\x70\x89\xca\x99\xa8\xaf\x90\x1f\x64\x79\xef\x2c\x5e\x1e\xcb\xff\xe3\x6c\xe7\x54\x3b\x47\x57\xde\x22\xe7\x3c\xab\xbf\xac\xf4\x5c\x67\x8b\xc7\x45\x91\xdf\x2c\xef\xab\xe2\x86\xc7\xb3\x1a\x77\x7b\x63\x32\xaf\x9b\x96\xf8\x8a\x78\x14\x91\x19\x2a\x26\x16\x03\xff\xeb\x42\x5c\xb5\x60\xb8\x38\x83\xf8\x6a\x2d\x57\x3f\x03\x00\x00\xff\xff\xcb\x3b\x71\x01\x76\x05\x00\x00")

func static_bleve_mapping_partials_analysis_charfilters_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_charfilters_html,
		"static-bleve-mapping/partials/analysis/charfilters.html",
	)
}

func static_bleve_mapping_partials_analysis_charfilters_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_charfilters_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/charfilters.html", size: 1398, mode: os.FileMode(420), modTime: time.Unix(1447346445, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilter_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x54\xcd\x6e\xdb\x30\x0c\xbe\xe7\x29\x34\x9d\xb6\x83\x67\x6c\xbd\xda\xbe\x04\xd8\xad\xdd\x61\x7d\x01\x59\xa2\x6d\x21\xb4\x64\x48\x72\xba\x20\xc8\xbb\x4f\x3f\x4e\x6a\x3b\xee\xb0\x0e\x35\x50\x57\x21\xa9\x8f\x1f\x3f\xd2\x2c\x84\x3c\x12\x8e\xcc\xda\x92\xd6\x08\x47\x78\xd4\x82\x21\xad\x76\xbb\xb9\xa7\x0f\xc6\xac\x03\x26\xc0\x78\x1f\xf1\x4f\xd1\x3d\x2c\xbd\x4e\x3a\x04\x5a\xed\x47\xeb\x74\x4f\x9e\xf5\x01\x14\xf9\x21\xd1\x81\x29\xf2\xee\xa1\xda\x15\xb9\x07\xdc\xc4\xad\xb5\x38\x5d\x51\x83\x53\xb5\x99\xed\xf4\x4b\x49\xc1\x18\x6d\x1e\xc1\x5a\xd6\x02\x8d\xfe\xf8\x4c\x97\x19\x82\x71\x24\xbe\x33\xc1\x54\x0b\x26\xdc\xe4\xa8\xd9\x61\x16\x6c\x34\xc2\x14\x4b\x2b\x72\x3e\xcf\x31\x2f\x97\x94\x74\x62\x16\xcf\x8d\x36\xfd\x35\x43\x38\xd3\x09\x21\x9e\xab\x1b\xee\xbc\x8a\xe0\xca\x5a\xa3\xc7\x61\x16\x10\x83\x90\xd5\x80\xc4\xfb\x4b\xea\x14\xeb\xbd\x3c\x4f\xfe\x5d\xe4\xd1\xbe\x8a\x95\x6a\x18\x5d\xa8\x40\x48\xcb\x7c\x2b\x44\x49\x8f\x12\x5e\x7e\x2a\x3c\xa5\x9e\x2c\xc2\xa7\xc7\x87\x7b\x0d\x01\x4b\x1a\xe1\x89\x3b\x0d\x9e\xab\x83\xdf\x8e\x2e\xd8\x71\xad\x9c\xaf\x63\x13\x43\x8a\x2b\x3b\x32\x20\xe3\xd0\x69\xf4\x6d\x2e\xe9\x53\x24\xfc\x5a\xf1\x4c\xa5\xff\x53\x20\x8c\x44\x13\x27\x22\xd0\xa4\xd5\xb3\x7f\x6f\x6b\x31\x83\xe6\x1a\x33\xdb\x67\xdf\xbe\x93\x28\xd0\x76\x16\x0b\x08\xfc\xdd\xe2\xc5\x71\xe9\xc2\xe4\x4c\xe4\xd2\xb8\x06\x5a\xfb\x68\xfe\xfc\xe5\xcd\x7b\x93\xea\xb3\x9a\xbe\xc6\xa2\x36\xe3\xff\xb5\x13\xa9\x15\x6b\x99\xee\x22\x0b\x3d\x38\xa9\x55\xa0\x61\x60\x00\xe6\xd6\xf4\xbd\x54\x64\x55\x90\xa5\xd5\xf9\xbc\xb4\x5d\x2e\x45\x9e\x90\x56\x6a\xe6\x49\xce\xb5\x35\xb6\x7f\xf5\x73\x39\x0d\xb7\x0f\xf7\x4e\x96\xe0\x92\x8a\xe3\x28\x80\x58\xc3\x93\x16\x03\x73\x1d\xcd\xa7\x0f\x3f\x0f\x96\xbf\x6d\x89\x46\x6b\xf7\xba\x7d\xea\xd1\xb9\x24\x81\x6c\xd6\xbd\xbe\xed\x33\xa7\x88\xff\xcb\x04\x34\x6c\x44\xb7\x94\x3c\xae\x0a\xc9\x0f\x7e\xc2\x98\xe2\x80\xbe\xd7\xd5\x1e\xb5\xf5\x13\x99\xb0\x37\x13\x7d\xfa\xa8\x4c\xf1\xf4\x9e\x54\x6f\x40\xd6\xa3\x44\xb1\x9e\xd3\xb4\x05\x12\xdc\x1d\xc7\xc1\xc8\x9e\x99\x13\x19\x46\xc4\xcc\xc8\xb6\xf3\x7b\xf1\x17\x3b\xce\xea\xbe\xf5\x20\xfd\xff\x13\x00\x00\xff\xff\x15\x88\xae\xe7\x23\x06\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilter_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilter_html,
		"static-bleve-mapping/partials/analysis/tokenfilter.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilter_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilter_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilter.html", size: 1571, mode: os.FileMode(420), modTime: time.Unix(1447346482, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilters_dict_compound_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x90\x41\x6a\x03\x31\x0c\x45\xf7\x3d\x85\xf0\x3e\x9d\x0b\x78\xe6\x06\x69\x17\x2d\x74\x19\x34\x23\x25\x88\xca\x96\xb1\x9d\x94\x12\x72\xf7\x3a\x99\x4c\x99\x50\xfa\x57\xe2\xfb\x3f\xe4\x2f\x68\xf2\x24\x27\x98\x14\x4b\xe9\xdd\xde\x72\xd8\x1c\xb2\x1d\x93\x1b\x9e\xe0\x2e\xaf\x38\xb2\x42\x7b\xeb\x5d\xb5\x4f\x8e\x7b\xd1\xca\xf9\xfd\x3a\x6e\x31\x15\x37\xbc\x1d\x47\xf8\xb0\x4c\xc5\x77\xb7\xec\x8a\x2d\xac\x3c\x55\x88\x87\x0d\x49\xc1\x51\x99\x7a\x77\x12\xfe\x7a\x8d\xfa\xbd\x35\x42\x75\xbf\xd9\x45\x2d\x1b\x8c\x58\x1f\xb6\x3d\x93\x4c\x75\x77\x33\x76\x01\xd3\x5f\x6a\xdd\x60\xb2\x58\xb3\xa9\x03\xa1\xff\xbe\xfc\xc0\x7b\x4b\x55\x2c\x5e\x37\x67\x4e\x8c\xf5\x4e\xb5\x28\x48\x84\x65\x7e\xc1\xc0\x0d\x3d\x9f\x17\xe3\x72\xf1\xdd\x8c\xae\x1a\x77\x73\xe5\xd9\xf1\x5d\xbb\xee\xf0\x13\x00\x00\xff\xff\x10\xcc\xc5\x07\x67\x01\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilters_dict_compound_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilters_dict_compound_html,
		"static-bleve-mapping/partials/analysis/tokenfilters/dict_compound.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilters_dict_compound_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilters_dict_compound_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilters/dict_compound.html", size: 359, mode: os.FileMode(420), modTime: time.Unix(1447347385, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilters_edge_ngram_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x91\xc1\x4e\xc3\x30\x0c\x86\xef\x7d\x8a\xc8\xf7\xd1\x17\x48\x73\xe3\x38\xf1\x0c\x69\xe2\x96\x68\x6e\x1c\xa5\xe9\xd8\xde\x1e\xaf\x1b\x82\xb1\x80\x84\xd8\x7c\xb0\xd4\xf6\xff\xfb\xdb\x9f\x95\x94\xf6\x61\xaf\x1c\xd9\x79\xee\x60\xe0\x3c\x6d\xc6\xcc\x4b\x02\xd3\xa8\x4b\x69\xb2\x3d\x92\x92\x6f\x1d\x14\xde\x61\x1c\x02\x15\xcc\xcf\x7e\x44\x30\xa7\xae\xdb\x55\xf1\xe9\x58\x5d\x33\x12\xba\xa2\xe2\xb8\xf1\x61\xb6\x3d\xa1\xef\x60\x1f\xf0\xed\x25\xd2\x71\xcb\xde\x12\x5c\xe9\x3f\xea\xeb\x24\x8e\x63\xc9\x4c\xa0\x82\xbf\x8d\xae\xba\x25\x6d\x62\x8f\x74\x25\x7f\xc2\x75\xd4\x1b\x83\xe6\x54\x02\x47\x33\x64\xc9\xd1\xed\xe5\xe9\x47\x59\x6f\xdd\xae\xae\xd2\xed\x79\xd9\xf3\x5b\xdd\x0a\x51\xd3\x34\xff\x81\xbb\x0d\x11\x8c\xb4\x3a\xda\x10\xd3\xf2\x67\xb2\x75\x34\x93\x04\xd5\xd4\xe5\x98\xb0\x83\xb8\x4c\x3d\x66\xa8\x1e\xa5\xe6\xfa\x76\xa7\xd3\x16\x2a\x91\x75\xf8\xca\xe4\x51\x56\x84\x3b\x22\xb2\x07\x41\x64\x0f\x8f\x47\x24\x41\x8f\x43\x24\x3f\xff\x05\xd1\x7b\x00\x00\x00\xff\xff\x8f\xec\x87\x47\xa1\x03\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilters_edge_ngram_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilters_edge_ngram_html,
		"static-bleve-mapping/partials/analysis/tokenfilters/edge_ngram.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilters_edge_ngram_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilters_edge_ngram_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilters/edge_ngram.html", size: 929, mode: os.FileMode(420), modTime: time.Unix(1447347394, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilters_elision_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x90\xc1\x6a\xc3\x30\x10\x44\xef\xfd\x8a\x45\xf7\x54\x3f\x20\x1b\xfa\x01\x69\x2f\xbd\x87\x8d\xb4\x09\x4b\x57\x5a\x21\xa9\x29\x25\xe4\xdf\xab\xc4\x76\xb1\x29\x9d\xd3\x32\x9e\xc7\x78\x04\x5d\x2e\xf0\x05\xbc\x60\xad\x83\x39\x69\x89\xbb\x73\xd1\xcf\x6c\xc6\x27\x98\xe5\x04\x8f\x24\xd0\xbf\x0d\xa6\xe9\x07\xa5\x13\x4b\xa3\xf2\x7e\x3f\xf7\x98\xab\x19\x5f\x4a\x63\x2f\x54\x9d\x7d\x44\x57\x68\x25\x21\xdf\x20\x9d\x77\x81\x2b\x1e\x85\xc2\x60\x2e\x4c\x5f\x6f\x49\xbe\xf7\x1a\x50\xcc\x6f\x76\x51\xcf\x46\x0d\x24\x9b\xb2\x67\x9c\x2b\x0e\x0f\xf3\x10\x31\xff\x25\xd7\x23\xbc\xa6\x56\x54\x0c\x70\xf8\xef\xaf\x37\xbc\xd3\xdc\x58\xd3\xbd\xbd\x50\x26\x6c\x33\xd5\xa3\xc0\x09\x96\xfb\x15\x23\x75\xf4\x7a\x5d\x8c\xdb\xcd\xd9\x09\x5d\xad\xb6\xd3\xec\xc9\x71\xb6\x3f\xf0\xf8\x13\x00\x00\xff\xff\x4d\xe0\x0e\x69\x6a\x01\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilters_elision_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilters_elision_html,
		"static-bleve-mapping/partials/analysis/tokenfilters/elision.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilters_elision_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilters_elision_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilters/elision.html", size: 362, mode: os.FileMode(420), modTime: time.Unix(1447347401, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilters_generic_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilters_generic_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilters_generic_html,
		"static-bleve-mapping/partials/analysis/tokenfilters/generic.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilters_generic_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilters_generic_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilters/generic.html", size: 0, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilters_keyword_marker_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x90\xcd\x6a\xc3\x30\x10\x84\xef\x7d\x8a\x45\xf7\x54\x2f\x20\xfb\x05\x4a\xda\x4b\xef\x61\x63\x6d\x82\xc8\x4a\x2b\x24\x35\x21\x18\xbf\x7b\xe5\xbf\x62\x53\x32\xa7\x65\x3c\x1f\xe3\x11\x54\x19\xeb\xee\xd0\x31\xe6\xdc\xa8\x8b\x24\x7f\xb8\x26\xf9\x89\xaa\x7d\x83\x45\x86\xf1\x4c\x0c\xf5\x5b\xa3\x8a\xdc\x28\x5c\x1c\x17\x4a\xdf\xe3\x79\xc4\x98\x55\xfb\x41\xcf\x87\x24\x9b\x8d\x9e\xa2\x1b\x34\x13\x53\x57\x20\x5c\x0f\xd6\x65\x3c\x33\xd9\x46\xdd\x1d\x3d\xbe\x02\x3f\x8f\x62\x91\xd5\x5f\x76\x55\xcd\x7a\xb1\xc4\xbb\xb2\xf7\xdb\x52\x71\x9a\xcc\x93\xc7\xf8\x9f\xdc\x8e\xe8\x24\x94\x24\xac\xc0\xd9\x57\x7f\xbd\xe3\x8d\xc4\xe2\x24\x8c\xed\x89\x22\x61\x59\xa8\x1a\x05\x17\x60\xbd\x3f\xd1\x53\x45\xfb\x7e\x35\x86\xc1\xe8\x19\xdd\xac\xd6\xf3\xec\xd9\x31\xba\x3e\x70\xfb\x1b\x00\x00\xff\xff\xda\x20\xf1\xdb\x6a\x01\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilters_keyword_marker_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilters_keyword_marker_html,
		"static-bleve-mapping/partials/analysis/tokenfilters/keyword_marker.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilters_keyword_marker_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilters_keyword_marker_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilters/keyword_marker.html", size: 362, mode: os.FileMode(420), modTime: time.Unix(1447347412, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilters_length_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x90\x41\x6e\x85\x30\x0c\x44\xf7\x9c\x22\xf2\x9e\x72\x81\x84\x1b\xa0\x9e\x21\x10\x43\xa3\x3a\x71\x14\x02\x85\xdb\xd7\x42\x48\x15\x2a\xfa\x9b\x2f\x66\x91\xcd\x4c\x3c\x9a\xa7\x44\xda\xf9\x55\x0d\x64\xe7\xd9\xc0\xc8\x39\xd4\x53\xe6\x25\x41\x5b\xa9\x53\x9a\x6c\x8f\xa4\xc4\x33\x50\xf8\x1b\xe3\xe8\xa9\x60\xee\x7c\x84\x56\x1e\xdd\x1c\xfe\x5f\xfe\xf8\xe3\x63\x5a\x8a\x8a\x53\xed\xfc\x6c\x7b\x42\x67\x60\xf5\xf8\xf3\x19\x69\xef\xd8\x59\x82\x4b\xfc\x94\xc4\x03\x3b\xa4\x4b\xcf\x47\x90\xa2\xbb\x74\xd9\x13\x1a\x88\x4b\xe8\x31\xc3\x65\xc1\xc0\xb1\x64\xbe\xef\xf0\xee\xdf\x0a\x95\xc8\x0e\xf8\xc5\xe4\x50\x26\x9e\xcb\x75\x23\x5c\xda\xaa\x7a\x0b\x91\xdd\x04\x91\xdd\x9e\x47\x24\x45\xcf\x21\x92\xe3\x2f\x10\xfd\x06\x00\x00\xff\xff\x6f\xc7\x37\xc6\x44\x02\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilters_length_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilters_length_html,
		"static-bleve-mapping/partials/analysis/tokenfilters/length.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilters_length_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilters_length_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilters/length.html", size: 580, mode: os.FileMode(420), modTime: time.Unix(1447347419, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilters_ngram_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x90\x41\x6e\x85\x30\x0c\x44\xf7\x9c\x22\xf2\x9e\x72\x81\x84\x1b\xa0\x9e\x21\x10\x43\xa3\x3a\x71\x14\x02\x85\xdb\xd7\x42\x48\x15\x2a\xfa\x9b\x2f\x66\x91\xcd\x4c\x3c\x9a\xa7\x44\xda\xf9\x55\x0d\x64\xe7\xd9\xc0\xc8\x39\xd4\x53\xe6\x25\x41\x5b\xa9\x53\x9a\x6c\x8f\xa4\xc4\x33\x50\xf8\x1b\xe3\xe8\xa9\x60\xee\x7c\x84\x56\x1e\xdd\x1c\xfe\x5f\xfe\xf8\xe3\x63\x5a\x8a\x8a\x53\xed\xfc\x6c\x7b\x42\x67\x60\xf5\xf8\xf3\x19\x69\xef\xd8\x59\x82\x4b\xfc\x94\xc4\x03\x3b\xa4\x4b\xcf\x47\x90\xa2\xbb\x74\xd9\x13\x1a\x88\x4b\xe8\x31\xc3\x65\xc1\xc0\xb1\x64\xbe\xef\xf0\xee\xdf\x0a\x95\xc8\x0e\xf8\xc5\xe4\x50\x26\x9e\xcb\x75\x23\x5c\xda\xaa\x7a\x0b\x91\xdd\x04\x91\xdd\x9e\x47\x24\x45\xcf\x21\x92\xe3\x2f\x10\xfd\x06\x00\x00\xff\xff\x6f\xc7\x37\xc6\x44\x02\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilters_ngram_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilters_ngram_html,
		"static-bleve-mapping/partials/analysis/tokenfilters/ngram.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilters_ngram_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilters_ngram_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilters/ngram.html", size: 580, mode: os.FileMode(420), modTime: time.Unix(1447347425, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilters_normalize_unicode_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x91\xc1\x6e\x84\x20\x10\x86\xef\x7d\x0a\xc2\xdd\xf2\x02\xc8\xb1\xb7\xb6\xa7\x3e\x00\xc2\x68\x26\x8e\x8c\x01\x6a\xd3\x7d\xfa\x65\xd5\x64\xd7\xac\x6b\xfc\x4f\x64\xe6\xfb\x7f\xfe\x80\x28\xd2\x1e\x27\xe1\xc8\xa6\x54\xcb\x96\xe3\x50\x75\x91\x7f\x47\x69\xde\xc4\x2a\x4d\xb6\x01\x12\x65\x57\xcb\xcc\x3d\x84\x16\x29\x43\xfc\x2a\xac\x25\xbc\xc0\x4f\x40\xc7\x1e\xa4\xf9\x28\x13\xad\x66\xfa\xee\x9e\x13\x12\x10\xb8\x2c\x42\x57\x79\x4c\xb6\x21\xf0\xb5\x9c\x10\xfe\xbe\x03\xfd\x7f\xb2\xb7\x24\x37\xfc\xaa\xc7\x52\x8e\x43\x8e\xbc\xcf\xa1\x3f\x2e\xb6\xe7\x29\x55\x86\xb2\xa3\x8d\xf3\xfd\x76\x95\x34\x4f\xbc\xe6\x31\x23\x07\x13\x5a\xa7\xd5\x7a\x3e\x80\xfc\x19\xa8\x3f\x15\xd5\xbf\xc8\xd2\x6a\x79\xd2\x65\xaa\x55\xf9\x43\x73\x0d\x00\x00\xff\xff\x53\xe9\xaf\x34\xcd\x01\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilters_normalize_unicode_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilters_normalize_unicode_html,
		"static-bleve-mapping/partials/analysis/tokenfilters/normalize_unicode.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilters_normalize_unicode_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilters_normalize_unicode_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilters/normalize_unicode.html", size: 461, mode: os.FileMode(420), modTime: time.Unix(1447347433, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilters_shingle_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x93\xc1\x6e\x83\x30\x0c\x86\xef\x3c\x45\x94\x7b\xd7\x17\x00\x8e\x93\x76\xa8\x7a\xd8\xee\x53\x48\x0c\xb5\x6a\x62\x14\x42\x47\xdf\x7e\x6e\x9b\x6d\x42\xab\x38\x74\x8b\x0f\x06\xc9\x7f\xfc\xeb\xff\x94\x28\xa9\xd2\xe1\x49\x59\x32\xe3\x58\xe9\x96\x43\xbf\xe9\x02\x4f\x83\xae\x0b\x95\xaa\x24\xd3\x00\x29\x99\x55\x3a\xf2\x11\x7c\x8b\x14\x21\xec\xd0\xeb\x5a\x5a\xb9\xbd\xce\x7f\xf4\xd7\x33\xe8\x87\x29\x2a\xdf\x6d\x1c\x8e\xa6\x21\x70\x95\x3e\x21\x7c\xec\x3d\x9d\x77\xec\x0c\xe9\x85\x3c\x95\xc8\x7b\x76\x40\x0b\x9f\xa7\x5e\x8c\xee\xa9\xe3\x79\x80\x4a\xfb\xa9\x6f\x20\xe8\x45\x02\xcb\x3e\x06\xbe\xef\x81\xee\x57\x0a\x35\x90\xb1\x70\x60\x72\x20\x11\x53\xf2\x72\x2b\x5c\xea\xa2\xf8\x13\x22\x33\x0b\x22\x33\xe7\x47\x24\x46\xf9\x10\xc9\xf2\x6c\x88\x5e\xbc\xa5\xc9\x81\xae\xd3\x8f\xda\x07\xec\xd0\x1b\x52\x6f\x17\x51\x76\x72\x3c\x45\xd9\xf5\xce\xc9\x75\x85\xa2\x3d\x80\x3d\x36\x3c\x3f\xcc\xf1\x3b\xea\xbf\xc1\x7b\x05\x11\x49\x33\xc1\x44\x0e\xd9\x59\x8d\x5f\x4e\x2b\x94\x22\xcc\xf1\x61\x42\x97\x3c\xd9\x6e\xda\x33\x12\xc9\x2b\xa8\x6f\xdf\xec\xb0\xda\x9b\x5d\x26\x52\x29\xcc\x0a\xac\xcf\x00\x00\x00\xff\xff\x5c\xa7\xb5\x63\xdb\x05\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilters_shingle_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilters_shingle_html,
		"static-bleve-mapping/partials/analysis/tokenfilters/shingle.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilters_shingle_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilters_shingle_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilters/shingle.html", size: 1499, mode: os.FileMode(420), modTime: time.Unix(1447347442, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilters_stop_tokens_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x90\xcd\x6a\xc3\x30\x10\x84\xef\x7d\x8a\x45\xf7\x54\x2f\x20\xfb\x0d\xd2\x1e\x5a\xe8\x31\x6c\xac\x4d\x10\x5d\x69\x85\xa4\xba\x14\xe3\x77\xaf\xfc\x57\x6c\x4a\xe6\xb4\x8c\xe7\x63\x3c\x82\x2a\x63\x5d\x0f\x1d\x63\xce\x8d\xba\x49\xf2\xa7\x7b\x92\xaf\xa8\xda\x27\x58\x65\x18\xaf\xc4\x50\xbf\x35\xaa\xc8\x27\x85\x9b\xe3\x42\xe9\x7d\x3a\xcf\x18\xb3\x6a\xdf\x8a\x44\xf8\x90\x64\xb3\xd1\x73\x78\x07\x67\x62\xea\x0a\x84\xfb\xc9\xba\x8c\x57\x26\xdb\xa8\xde\xd1\xf7\x6b\xe0\x9f\xb3\x58\x64\xf5\x97\xdd\x54\xb3\x5e\x2c\xf1\xa1\xee\x39\xd7\x92\xcb\x6c\x5c\x3c\xc6\xff\xd4\x7e\x42\x27\xa1\x24\x61\x05\xce\x3e\xfa\xe7\x03\x6f\x24\x16\x27\x61\x6a\x4e\x14\x09\xcb\x4a\xd5\x28\xb8\x00\xdb\xfd\x82\x9e\x2a\x3a\x0c\x9b\x31\x8e\x46\x2f\xe8\x6e\xb1\x5e\x26\x2f\x8e\xd1\xf5\x79\xdb\xdf\x00\x00\x00\xff\xff\x7b\xb1\xcb\x2c\x68\x01\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilters_stop_tokens_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilters_stop_tokens_html,
		"static-bleve-mapping/partials/analysis/tokenfilters/stop_tokens.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilters_stop_tokens_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilters_stop_tokens_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilters/stop_tokens.html", size: 360, mode: os.FileMode(420), modTime: time.Unix(1447347447, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilters_truncate_token_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x90\x41\x0a\x83\x30\x10\x45\xf7\x3d\x45\x98\xbd\xf5\x02\x89\x27\x68\xe9\x19\xa2\x33\x6a\xe8\x38\x13\x62\xb4\x78\xfb\x06\x11\x8a\xd4\xbf\xc8\x26\xff\xf3\x78\x63\x4a\x2c\x86\xd5\x74\xec\xe7\xd9\x41\xaf\x69\xaa\x86\xa4\x4b\x84\xe6\x66\x8e\x58\xf6\x2d\xb1\x29\x7f\x0e\xb2\xbe\x49\xfa\xc0\x99\xd2\x83\x04\x9a\xf2\x0c\x79\xb4\xf5\x5e\xf9\x4d\xf6\x59\x90\xb8\x64\x23\x43\x85\x61\xf6\x2d\x13\x3a\x58\x03\x7d\x5e\xc2\xdb\x53\xd1\x33\x9c\xea\x47\x4a\x7d\x52\x24\x3e\xa1\xee\xbc\x63\x2e\x07\x79\x8b\xe4\x40\x96\xa9\xa5\x04\x27\x8f\x4e\x25\x27\xbd\xc6\x04\xfc\x73\x31\x91\x7d\x47\xa3\x32\x52\x11\x3d\xfc\x6d\x5d\xae\xd3\x7c\x03\x00\x00\xff\xff\x47\xb1\xf0\x08\x27\x01\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilters_truncate_token_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilters_truncate_token_html,
		"static-bleve-mapping/partials/analysis/tokenfilters/truncate_token.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilters_truncate_token_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilters_truncate_token_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilters/truncate_token.html", size: 295, mode: os.FileMode(420), modTime: time.Unix(1447347453, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilters_wordmap_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8f\x41\x8a\xc3\x30\x0c\x45\xf7\x73\x0a\xe3\x7d\x26\x17\x70\x72\x83\xb4\x9b\xee\x8b\x1a\x2b\xc5\x54\xb6\x8c\x2d\x1a\x4a\xc8\xdd\xeb\xe0\xa6\x34\x7f\xf5\x11\xef\x49\x48\x95\x98\x8c\x84\xa3\xa8\x70\x6f\xac\xcb\x70\x23\xb4\x9d\x7e\x3a\x9c\xcf\x81\x5e\x03\x5b\x20\xfd\xa7\x7e\x52\x38\xcf\x16\xa9\xd3\xc2\x0f\x0c\x93\x23\xc1\xf4\x3f\x73\xb2\x57\x0f\xf1\xc8\x8e\x04\x39\x77\x7a\xe2\xe4\x9b\x91\x83\x24\x26\xad\x9c\x3d\xa8\x97\xad\x0e\x10\xb3\xee\xbf\xae\xe1\x28\x8e\xc3\x76\x2b\x61\x44\x90\x8f\x51\x30\xe5\x82\xda\xfb\x09\x3c\x16\x6d\x59\xf6\xc1\xba\x9a\xb6\xaa\x75\x97\x69\xeb\x73\xfd\x3b\x00\x00\xff\xff\x5c\xa2\x5c\x50\xe9\x00\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilters_wordmap_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilters_wordmap_html,
		"static-bleve-mapping/partials/analysis/tokenfilters/wordmap.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilters_wordmap_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilters_wordmap_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilters/wordmap.html", size: 233, mode: os.FileMode(420), modTime: time.Unix(1447347466, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilters_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x54\xcd\x6e\xdb\x3c\x10\xbc\xfb\x29\xf8\xf1\x14\x03\x9f\x64\x14\xbd\x4a\x3a\xb5\xbd\x25\xbd\xa4\xe7\x82\x16\x57\x12\x61\x86\x24\xc8\x95\x6d\x21\xc8\xbb\x77\x49\x45\x3f\x8e\x8d\x36\x2d\x8a\x06\x81\x35\x5c\x2d\x87\xb3\xb3\x5c\x15\x28\xf6\x1a\x58\xad\x45\x08\x25\x1f\x17\xe9\x37\x0b\xe8\x95\x03\xc9\xab\x0d\x63\x05\x76\x20\x64\x44\x11\xfb\x11\xa4\x70\xf5\x20\x9e\xa0\xd8\x11\x58\xc5\x1e\x07\x77\x15\x5b\xd6\x84\x12\x43\x8c\xbc\xb2\x16\xb8\xb7\x72\x98\xf9\x99\x69\x33\x0f\x0e\x04\x96\xfc\x0e\x1b\x43\x47\xfc\x8f\xcd\x51\xe8\x2d\x53\x86\xfe\x25\x9c\xef\x85\x73\xca\xb4\xb9\x30\x42\x0f\x41\x85\x1c\xed\x01\xcc\xf7\x46\x69\x04\x1f\xf8\x72\xb2\xac\x0a\x11\xf9\x6a\xad\xea\x43\xc9\x41\x2a\x7c\x8c\xa9\x5f\x52\xe6\xc4\xce\x12\x3d\x3d\x7c\x0f\x5b\x5e\x3d\x3f\x8f\xf1\x97\x97\x62\x27\xa2\x74\xb9\x26\x8c\x6f\x29\x3b\x47\x2a\x33\x66\x5c\xbe\x7d\x85\xb4\x90\xea\x38\x19\xbb\x47\x93\xb5\xde\xf6\x8e\xcd\x28\x3b\x07\xce\xbc\xd5\x50\xf2\xb4\xe6\xcb\x4e\xda\xbb\xef\x11\xad\x89\xc2\x55\x53\xf2\xff\x8e\x0a\x4e\x5f\x8d\x1e\xee\xad\x14\x9a\xaf\x12\xa7\xbf\x77\x56\xb8\xe5\x2c\xaa\x26\x41\x89\xff\x16\xd3\xa2\x38\x69\x95\xd0\x88\x5e\x63\xc2\xe7\x70\x21\x92\x64\x06\x27\xcc\xb4\xa3\xd5\x83\xeb\x54\x4d\xaa\x67\x94\x45\x31\xb7\x0e\x11\x5e\x89\xac\x53\x52\x82\xa1\x5b\x47\xa6\x73\x72\x39\x92\x55\xec\x33\x6d\x59\x3b\xb1\x1b\xa5\xfe\x25\x77\x24\x68\x40\xb8\xf6\xe7\x5f\x1b\x83\x5e\x84\xee\x37\x9d\xf9\x94\xb4\xff\xd4\x9b\x62\x47\x97\x6e\xbe\x8d\xf3\xcd\x9c\x46\x6e\x9e\xae\xd0\xd9\x53\xc9\xbf\xa1\xd2\x21\x3f\xc0\x10\xee\xde\x31\x54\xdb\x5c\x83\x69\xb1\x63\x05\xfb\xb0\x1e\x30\x56\x5b\x1d\x05\x96\xfc\x23\xaf\x1e\xac\x81\xeb\x73\xe9\x39\x0d\x78\x81\x8d\xb5\x78\xe3\x53\x72\xc9\xb3\xf9\xc3\x5e\x2f\x9d\x36\x70\x5a\xb7\xf9\x97\x0d\x7e\xd3\xde\xf0\x74\xd1\x65\xd7\x6b\x9d\x79\xd5\x76\x48\x35\xc2\x89\x25\x6a\x36\x72\xbf\x6d\xc3\xcd\xfa\xc7\xaa\x09\xc4\x8f\x6b\xb5\xd9\xfc\x08\x00\x00\xff\xff\xb7\x3c\x3b\xe3\x79\x05\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilters_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilters_html,
		"static-bleve-mapping/partials/analysis/tokenfilters.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilters_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilters_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilters.html", size: 1401, mode: os.FileMode(420), modTime: time.Unix(1447346561, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenizer_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x54\xcf\x72\xdb\x2e\x10\xbe\xfb\x29\xf8\x71\xfa\xf5\xa0\x6a\xda\x5c\x25\x5d\x7c\x4e\x7a\x68\x5e\x00\xc3\x5a\x62\xbc\x02\x0d\x20\xa7\xae\xc7\xef\x5e\xfe\xc8\x0a\x52\x94\x4e\xd3\xa9\x66\x42\xf0\xee\xf2\xed\xee\xf7\x2d\x54\x42\x9e\x09\x47\x66\x6d\x4d\x0f\x08\x67\x78\xd4\x82\x21\x6d\x76\xbb\xdc\xd3\x07\x63\xd1\x01\x13\x60\xbc\x8f\xf8\xaf\xea\x1e\x96\x5e\x27\x1d\x02\x6d\xf6\xa3\x75\xba\x27\xcf\xfa\x04\x4a\xfe\x04\x53\x95\xdd\x43\xb3\xab\x4a\x8f\xb6\x09\x7a\xd0\xe2\x72\x87\x0c\x4e\xd5\x16\xb6\xd3\x2f\x35\x05\x63\xb4\x79\x04\x6b\x59\x0b\x34\xfa\xe3\x37\x1d\x66\x08\xc6\x91\xb8\x16\x82\xa9\x16\x4c\x38\xc9\x51\xb3\x53\x16\x6c\x34\xc2\x14\x4b\x1b\x72\xbd\xe6\x98\xb7\x5b\x4a\x3a\x55\x16\xf7\x47\x6d\xfa\x7b\x86\xb0\xa7\x13\x42\xdc\x37\x33\x6e\xde\x45\x70\x15\xad\xd1\xe3\x90\x05\xc4\x20\x64\x07\x40\xe2\xfd\x35\x75\x8a\xf5\x9e\x9b\x27\xbf\x56\x65\xb4\xaf\x62\xa5\x1a\x46\x17\x3a\x10\xd2\x32\xaf\x83\xa8\xe9\x59\xc2\xcb\x37\x85\x97\x24\xc8\x22\x7c\xfa\x7c\xb8\xe7\x10\xb0\xa6\x11\x7e\x2b\xc4\x5d\x06\x5f\xbe\x83\x1f\x8e\x2e\x0a\xe6\x5a\x39\xdf\xda\xe6\x19\x29\xee\x05\x93\x01\x19\x87\x4e\xa3\x97\xbd\xa6\x4f\xb1\x87\x57\x12\x32\xe2\xfe\x8e\x94\xfb\x88\x84\x22\x69\xf3\xec\xd7\x6d\x72\x32\x60\xae\xb1\xb0\x7d\xf1\xe5\x2b\x89\x8c\x6d\xe7\xb0\x80\xc0\x3f\xcc\x66\x9c\x9f\x2e\x8c\x52\x56\x5a\x28\x6a\x1f\x8d\xff\x7f\x7a\xf7\xd4\x24\xc2\x7c\xe8\x73\x6c\x68\x33\xfa\x4f\x35\x48\x22\x2c\x09\x7a\x13\x57\xe9\xc1\x49\xad\x42\x09\x06\x06\x60\x6e\x59\xb8\xa7\x88\x2c\x1a\xb1\xb4\xb9\x5e\x73\xcb\xed\x56\x95\x09\x63\xc5\x60\x99\x28\x5c\x5b\xa3\xe0\xab\x9f\x4b\xfd\xe7\xdb\xbb\x22\x23\x38\xa4\xe2\x38\x0a\x20\xd6\xf0\xc4\xc0\xc0\x5c\x47\xcb\xe9\xee\x97\xc1\xf2\xbb\x87\xe2\xa8\xb5\x7b\x7d\x7d\x0e\xa3\x73\xa9\x75\x79\x5c\xab\x3b\xbf\x67\x4e\x11\xff\x57\x08\x38\xb2\x11\xdd\x92\xe8\xf8\x5a\x48\x7e\xf2\x33\xc5\x14\x07\xf4\xfa\x36\x7b\xd4\xd6\xcf\x60\xc2\xde\x4c\xf4\xdf\xbf\xca\x14\x77\x1f\x49\xf5\x0e\xe4\x61\x94\x28\xd6\xb3\x99\x6e\x7d\x82\x7b\x53\xe3\x60\x64\xcf\xcc\x85\x0c\x23\x62\x61\x64\xdb\xf9\xa7\xf1\x3b\x3b\x67\x7d\xcf\x1a\xa4\xff\xbf\x02\x00\x00\xff\xff\x20\x78\x7a\x6b\x23\x06\x00\x00")

func static_bleve_mapping_partials_analysis_tokenizer_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenizer_html,
		"static-bleve-mapping/partials/analysis/tokenizer.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenizer_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenizer_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenizer.html", size: 1571, mode: os.FileMode(420), modTime: time.Unix(1447346588, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenizers_exception_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x54\x4d\x6f\xdb\x30\x0c\xbd\xf7\x57\x70\xc6\x0e\xed\xc1\x75\xbb\xb3\x63\x60\x18\x76\xd8\x61\xdd\x50\xec\x0f\x28\x16\x63\x13\x91\x25\x43\xa2\xf3\xb1\x20\xff\x7d\xb2\xe5\xcf\x34\x4d\x77\x08\x42\xc8\xe4\xe3\xd3\x7b\xa4\x52\x49\x3b\xc8\x95\x70\x6e\x15\x6d\x8c\xad\xe2\xc2\x9a\xa6\x8e\xb2\x3b\x80\x54\x89\x35\xaa\xec\xfb\x21\xc7\x9a\xc9\x68\xf8\x2d\x98\xd1\x6a\x97\x26\xe1\x4b\x9b\xd3\xa8\xa1\x5a\x91\xe3\xbe\x1a\x74\x11\xbb\xd2\xec\x57\x11\x9b\x2d\x6a\xfa\x8b\xf6\x11\x07\x18\xf7\xa8\x50\x17\x5c\x42\x0a\xcf\x5d\x9f\xb6\x13\xbd\x45\x89\x89\xb1\x8a\xb2\x17\xa3\xd1\x37\xa4\xae\x5b\xd2\xdc\xe8\xda\x41\xc1\xff\xf5\xce\xe0\x69\xc8\x6f\x28\x76\xc6\xb2\x58\x2b\x9c\x10\x2a\x23\x51\x5d\x87\xf8\x98\x73\x0f\xd3\x01\x59\xac\x51\xf0\x2a\x42\x20\x0d\xd7\xe0\x80\xad\xc8\xb7\xb0\x3e\xc2\x67\xd2\x12\x0f\x3d\xbc\x6f\xe0\x6a\xa1\x87\x16\x85\x3a\xd6\x25\xe5\xde\x84\x31\x8a\x2b\xd2\x8d\x67\x93\x26\x6d\x62\x06\xa7\x13\x20\x9c\xcf\x8b\x6a\x4f\x80\x36\xab\xe8\xd3\x8e\x70\xff\x4b\xab\xe3\x4f\x23\x85\x9a\xf8\xf5\x1c\x73\x45\xf9\x76\x15\x59\xac\xcc\x0e\x47\xbb\xef\x03\x9f\x87\x65\xfa\x0d\x3e\xa1\x1e\xea\x46\xa9\xd8\x52\x51\xf2\xc8\x2d\x08\xb6\x30\xb1\x0d\xda\xd1\xbb\xcd\xf0\xfa\x60\x8e\xa3\x39\x1b\xc4\x1e\xae\x2f\xc8\x8d\x8a\x5d\x15\x3f\x3f\x4d\x6a\x92\xae\x1b\x9e\x59\xab\x71\x6f\xb1\xc0\x83\x9f\x56\x3e\xd6\xe8\xbd\xc6\x03\x2f\xef\xba\x68\xef\x6f\xc8\xd6\x5c\x88\x07\x24\xbd\xb5\x83\x62\xaf\x01\x2f\x19\xee\xeb\x09\xbd\x4b\xed\xcb\xc4\x6c\xdd\x30\x1b\x3d\x33\x42\x48\x39\xb9\xc0\x25\xb9\x87\x81\x63\x48\xbd\xe0\x30\x20\xaf\x59\x83\xff\xc5\x12\x37\xa2\x51\xbc\x30\xe2\xab\x94\x69\x12\xaa\x2f\xd8\xf5\x41\xff\x77\xf7\xe1\x7b\x00\xfe\xd4\x53\xd4\x42\x1d\xfd\x20\xff\x19\x26\x3a\xca\xc6\xb0\xcd\x80\x57\xac\x04\x69\xd2\x05\xfc\x68\x85\x9f\x3f\x19\x0e\x15\xe6\x9d\x15\x92\x5c\xbb\x76\x5e\xc3\x77\x07\xb4\x55\xa5\x14\xba\xc0\xd9\x32\x7e\xeb\x0e\xe4\xfd\xc3\x45\xe2\x9b\xa5\x1d\xa3\xe8\xaa\x95\x9d\x7b\x53\x4e\x2f\x8c\x09\x8f\xdd\x6c\x77\xc7\x94\xc5\x0e\xbf\x88\x0a\xfd\xfa\x9d\x4e\xe3\xc9\xf9\x9c\x26\xa1\x3a\x08\x1b\x2e\x3a\x6a\xfb\x2f\x00\x00\xff\xff\xaa\x97\xb0\xd5\x6b\x05\x00\x00")

func static_bleve_mapping_partials_analysis_tokenizers_exception_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenizers_exception_html,
		"static-bleve-mapping/partials/analysis/tokenizers/exception.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenizers_exception_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenizers_exception_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenizers/exception.html", size: 1387, mode: os.FileMode(420), modTime: time.Unix(1447347332, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenizers_generic_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func static_bleve_mapping_partials_analysis_tokenizers_generic_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenizers_generic_html,
		"static-bleve-mapping/partials/analysis/tokenizers/generic.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenizers_generic_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenizers_generic_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenizers/generic.html", size: 0, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenizers_regexp_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x90\xc1\x0e\x82\x30\x0c\x86\xef\x3e\xc5\xb2\x3b\xf2\x02\x83\x9b\x47\x63\xe2\x1b\x0c\x56\x71\xb1\xac\x4b\x37\x10\x7c\x7a\x1b\x24\x51\x22\xff\xa5\x87\x7e\xed\x9f\xff\x57\x22\xe3\xfc\xa8\x5a\xb4\x29\x55\xfa\x46\xdc\x17\x1d\xd3\x10\x75\x7d\x50\xab\x0c\xda\x06\x50\xc9\xae\xd2\x99\x1e\x10\xfc\x0b\xf8\x0a\x1d\x4c\x42\xc9\x1c\xd0\xb2\x3a\x4d\x91\x21\x25\x4f\xc1\x94\x0b\xff\xbd\x5f\x7e\xf8\x10\x87\xac\x42\x57\x38\x9f\x6c\x83\xe0\x2a\x3d\x7a\x78\x5e\x02\xce\x67\x72\x16\xf5\x06\x5f\x25\x78\x4f\x0e\xf0\xc7\xf7\xc8\x1f\xe3\x3d\x3c\xcf\x11\x04\x85\x29\xeb\x4d\xa0\x96\x42\x66\xda\xb7\xf0\xee\x3f\x94\x8a\x68\x5b\xb8\x13\x3a\x90\xc8\x6b\x13\xa6\x94\x9e\xea\x77\x00\x00\x00\xff\xff\xcd\x92\xc8\xf0\x31\x01\x00\x00")

func static_bleve_mapping_partials_analysis_tokenizers_regexp_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenizers_regexp_html,
		"static-bleve-mapping/partials/analysis/tokenizers/regexp.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenizers_regexp_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenizers_regexp_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenizers/regexp.html", size: 305, mode: os.FileMode(420), modTime: time.Unix(1447347482, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenizers_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x54\x4d\x8f\xdb\x20\x10\xbd\xe7\x57\x50\x4e\x1b\xa9\x76\x54\xf5\x8a\x7d\x6a\x8f\xbb\xbd\x6c\x7f\x00\x31\xb3\x36\x0a\x0b\x08\xc6\x49\xdc\xd5\xfe\xf7\x0e\x24\xfe\x48\x36\xea\xb6\x55\xd5\x28\xb2\x1f\x63\x78\xbc\x79\xc3\x20\x50\x6e\x0d\xb0\xc6\xc8\x18\x2b\x7e\x1a\xe4\x67\x11\x31\x68\x0f\x8a\xd7\x2b\xc6\x04\x76\x20\x55\x42\x09\x87\x13\xc8\xe1\xfa\x41\x3e\x83\xd8\x10\x58\xc4\x1e\x07\xff\x26\x36\x8f\x09\x65\x86\x14\x39\xb3\x0a\xdc\x3a\x35\x4c\xfc\xcc\xb6\x45\x00\x0f\x12\x2b\x7e\x87\x96\x76\xf8\x88\x7b\x69\xd6\x4c\x5b\xfa\x2b\x38\xde\x4b\xef\xb5\x6d\x4b\x69\xa5\x19\xa2\x8e\x25\xba\x1d\x58\xfd\x03\x42\xe4\xf3\xa6\xaa\x16\x32\x51\x35\x46\x37\xbb\x8a\x83\xd2\xf8\x38\xce\x3b\xd3\xb2\xc4\x4b\xcf\xd0\xc3\x9a\xd7\x2f\x2f\x39\xfa\xfa\x2a\x36\x32\x09\x56\x4b\x2e\xfa\x48\x73\x4b\xa4\xdc\xd2\x84\xcb\x8f\x67\x48\x03\xa5\xf7\xa3\x9b\x5b\xb4\x45\x1b\x5c\xef\xd9\x84\x8a\x63\xe4\x2c\x38\x03\x15\xcf\x63\x3e\xaf\xa4\xb5\xdb\x1e\xd1\xd9\x24\x59\x3f\x55\xfc\xc3\x5e\xc3\xe1\x9b\x35\xc3\xbd\x53\xd2\xf0\xc5\xc4\xf1\xf7\x1b\xb9\xad\x39\x4b\x8a\x49\x4c\xe6\xbe\xc5\x32\xab\xcd\x3a\x15\x3c\xc9\xde\x60\xc6\xc7\x78\x21\x90\x24\x46\x2f\xed\xb8\xa2\x35\x83\xef\x74\x43\x8a\x27\x54\x24\x21\xb7\x36\x91\x41\xcb\xa2\xd3\x4a\x81\xa5\x63\x46\x76\x73\x32\x38\x91\xd5\xec\x2b\x2d\x59\xba\xb0\x39\x49\xfd\x47\xce\x28\x30\x80\x70\xe5\xcd\xff\x76\x05\x83\x8c\xdd\x1f\xda\xf2\x25\x0b\xff\xa5\x31\x62\x43\xa7\x6d\x3a\x86\xd3\x91\x1c\x1b\x6c\xea\xa5\xd8\xb9\x43\xc5\xbf\xa3\x36\xb1\xdc\xc1\x10\xef\xde\x6b\xa2\x75\x69\xc0\xb6\xd8\x31\xc1\x3e\x2d\x1b\x8a\x35\xce\x24\x75\x15\xff\xcc\xeb\x07\x67\xe1\xed\xa6\xf4\x1e\x7b\x59\xe0\x93\x73\x78\xe3\xd6\xb8\xe4\x59\xfd\x65\x95\xe7\x1a\x5b\x38\xcc\x05\x7e\xb7\xb6\x57\x95\x8d\xcf\x17\x05\xf6\xbd\x31\x45\xd0\x6d\x87\x94\x21\x1c\xd8\x44\x7c\x6d\xff\xcd\xd4\x4f\x09\x13\x48\x57\x68\xbd\x5a\xfd\x0c\x00\x00\xff\xff\x3a\x2b\x4b\xb4\x5f\x05\x00\x00")

func static_bleve_mapping_partials_analysis_tokenizers_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenizers_html,
		"static-bleve-mapping/partials/analysis/tokenizers.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenizers_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenizers_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenizers.html", size: 1375, mode: os.FileMode(420), modTime: time.Unix(1447346597, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_wordlist_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x55\x41\x8f\x9b\x3c\x10\xbd\xe7\x57\x78\x7d\xda\x95\x3e\x3e\x54\xad\x7a\xa8\x04\x48\xd5\x5e\xbb\x5b\xa9\x3d\xf4\xec\xe0\x09\x58\x6b\x6c\x64\x9b\x64\xd3\xd5\xfe\xf7\x8e\x0d\x6c\x0c\x21\x49\x53\xb5\x96\x92\x38\xcc\xe3\xcd\x9b\x37\x63\xc8\xb8\xd8\x92\x52\x32\x6b\x73\xba\x96\xb0\x85\x47\xcd\x99\xa4\xc5\x6a\x15\x47\x1a\x7f\x31\xa9\x81\x71\x30\x18\x23\xb8\xb2\xfa\x7e\x1a\x75\xc2\x49\xa0\xc5\x43\x67\x9d\x6e\xc8\x0f\x6d\x38\xf9\x22\xac\xcb\xd2\xfa\xbe\x58\x65\x29\xb2\x2d\x92\xae\x35\xdf\x8f\x94\x3e\xa8\xaa\xc4\xd6\x7a\x97\x53\x30\x46\x9b\x47\xb0\x96\x55\x40\x43\x3c\xac\xe1\x66\x26\xc1\x38\x12\xbe\x13\xce\x54\x05\xc6\xdf\x59\x4a\xcd\x9e\x23\xb0\xd1\x12\x06\x2c\x2d\xc8\xeb\x6b\xcc\xf9\xf6\xd6\x27\x1d\x94\x85\xfd\x46\x9b\x66\xcc\xe0\xf7\x74\x60\x08\xfb\xe2\x9d\x37\xae\xc2\x87\x92\xca\xe8\xae\x8d\x00\x01\x24\xd9\x1a\x24\xc1\x78\x4e\x9d\x62\x0d\x7a\xf3\x84\xdf\x59\x1a\xae\xcf\xb0\x42\xb5\x9d\xf3\x15\x70\x61\x19\xf6\x81\xe7\x74\x2b\x60\xf7\x55\xc9\x7d\xdf\x90\x09\x7c\x58\x08\x47\x0f\x41\xe6\x34\xd0\x13\xb7\x6f\x51\xab\x83\x17\xb7\x08\x8f\x05\x97\x5a\x39\x2c\x8d\x12\xc1\x47\x75\xa4\x95\xac\x84\x5a\x4b\xec\x71\x4e\x9f\x82\xe0\x43\xc5\x91\x4b\x7f\xe4\xc0\x0e\xe7\xc1\xd2\xc2\x8f\x85\x5d\xb6\xc0\x82\x84\xf2\x6a\x0f\x22\x13\x7a\x02\xe0\x21\x07\x25\x4d\x27\x9d\x68\x25\x04\xc4\xb0\xc7\x5a\x4d\x07\xcb\x44\xde\x89\x5e\x25\xb1\xe2\x27\x42\x3f\xd2\x45\xcb\x4e\xa9\xd0\xad\x13\x5a\x21\x5a\xf0\x17\xc2\x2c\xf1\x5c\xbe\x76\x72\x8b\x17\xfe\x0b\x7f\xef\x88\x50\x64\x70\x62\x5a\x7c\xda\x8b\xbf\x60\x38\x66\x11\x9b\x9c\xde\x9c\xb3\xe5\xaa\xa6\xd4\x0c\xcf\xc5\x72\x3b\xa2\x06\x97\x5a\x26\xb6\x49\x3e\xcd\x98\xe2\xb1\x1d\xe7\x10\x76\xde\xfd\x8b\xa3\x78\x66\x18\xdf\x29\x26\xe3\xe8\x4d\x3b\xf2\x2c\x38\x74\x41\xf4\xfd\x91\x68\x84\xad\x3b\xe7\xb4\xea\x1f\x18\xa2\x7c\xc6\x27\x04\x0f\x53\x73\x7b\x77\x42\x2d\xae\xbe\xa2\xfe\xce\xd3\xa8\xf1\x49\xea\x14\xc1\x0f\x0a\x08\x3f\x1c\x36\x0c\x27\x90\x16\x9f\x39\xcf\xd2\x9e\xe3\x77\x64\x19\x68\xf4\x16\x2e\x29\x9b\x9c\x98\xc9\x21\xf8\x5f\x82\xaa\x5c\x4d\x32\xf2\xe1\x9f\x16\x46\xda\x4e\xca\xc4\x88\xaa\xc6\x1a\xbf\x05\xd1\xcb\x65\xce\x7a\x16\xfd\xcd\x52\x3f\x0a\xe7\x5e\x14\x1b\xad\xdd\xe1\xed\x73\xf0\xca\x9f\x88\xe9\x81\x98\x8b\x1d\xed\x5f\xcd\x5c\x1b\x5c\x2e\x99\x2a\x41\xa2\xc3\xc5\x83\xd4\x76\xa6\x7c\x96\xe8\xe6\x6f\x65\x0a\xbb\x6b\x52\x9d\xa0\x5c\x77\x42\x1e\x4d\xc7\xa4\xa5\x73\x8d\xad\x11\x0d\x33\xfb\x49\xcf\xbe\xb3\xb8\x63\xef\x3d\xe8\x7f\x7f\x05\x00\x00\xff\xff\x91\x2d\x4c\x09\x23\x08\x00\x00")

func static_bleve_mapping_partials_analysis_wordlist_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_wordlist_html,
		"static-bleve-mapping/partials/analysis/wordlist.html",
	)
}

func static_bleve_mapping_partials_analysis_wordlist_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_wordlist_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/wordlist.html", size: 2083, mode: os.FileMode(420), modTime: time.Unix(1447346636, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_wordlists_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x54\x4d\x8f\xd3\x30\x10\xbd\xf7\x57\x18\x9f\xb6\x12\x69\x05\x67\x27\x27\xb8\xb1\xcb\x09\x71\x44\x6e\x3c\x4d\xac\x3a\xb6\x65\x4f\xda\x46\xab\xfd\xef\x8c\x93\xcd\x47\x4b\x45\x01\xa1\xad\xaa\xe4\xd9\x89\xdf\xbc\x79\x33\x13\x81\x72\x67\x80\x95\x46\xc6\x98\xf3\x61\xd1\x5f\xb3\x88\x41\x7b\x50\xbc\x58\x31\x26\xb0\x06\xa9\x12\x4a\x38\x0c\xa0\xdf\x2e\x9e\x64\x03\x62\x4b\x60\xb1\x37\xaf\x09\xf5\x6f\xa7\x9d\x57\x06\x81\x3b\xa7\xba\x89\x8b\xd9\x2a\x0b\xe0\x41\x62\xce\x1f\xb0\xb1\x44\xf7\x1e\x9b\xa3\x34\x6b\xa6\x2d\xfd\x15\x9c\x1f\xa5\xf7\xda\x56\x1b\x69\xa5\xe9\xa2\x8e\x1b\x74\x07\xb0\x3f\x1a\xe9\x23\x9f\xc3\xaa\x42\xc8\x44\x56\x1a\x5d\x1e\x72\x0e\x4a\xe3\x77\x17\xd4\x17\x1d\x71\xe4\x65\x3d\x31\xdd\x42\x0b\x6b\x5e\x3c\x3f\x0f\xfb\x2f\x2f\x62\x2b\x93\x68\xb5\x64\x5b\x3e\xbd\x7c\xf2\x0a\x69\xa1\xf4\x71\xb4\x6e\x87\x36\xab\x82\x6b\x3d\x9b\x50\x76\x8e\x9c\x05\x67\x20\xe7\xfd\x9a\xcf\x27\xe9\xec\xae\x45\x74\x36\x29\xd6\xfb\x9c\xbf\x3b\x6a\x38\x7d\xb5\xa6\x7b\x74\x4a\x1a\xbe\x78\x71\xfc\xfd\x49\x6a\x6b\xce\xb0\xf3\x14\x6f\x20\xbf\x45\x33\xcb\xed\x85\x2a\xd8\xcb\xd6\x60\x8f\xcf\xf1\x42\x21\x69\x8c\x5e\xda\xf1\x44\x65\x3a\x5f\xeb\x92\x24\x4f\x28\x4b\x4a\x6e\x05\x91\x41\xcb\xac\xd6\x4a\x81\xa5\xa6\x22\xb7\x39\xd9\x9b\xc8\x0a\xf6\x99\x8e\x2c\x6d\xd8\x0e\x52\xff\x93\x35\x0a\x0c\x20\x5c\x99\xf3\xd6\xae\x60\x90\xb1\xfe\x4b\x5b\x3e\xf5\xc2\x7f\x6b\x8c\xd8\x52\xbb\x4d\x7d\x38\xf5\xe4\x38\x62\xd3\x34\xc5\xda\x9d\x72\xfe\x0d\xb5\x89\x9b\x03\x74\xf1\xe1\xde\x10\xad\x37\x06\x6c\x85\x35\x13\xec\xc3\x72\xa0\x58\xe9\x4c\x52\x97\xf3\x8f\xbc\x78\x72\x16\x7e\x0d\x4a\xf7\x71\x9a\x05\xee\x9d\xc3\x1b\xdf\x88\x4b\x9e\xd5\x3f\x56\x79\xae\xb1\x85\xd3\x54\xe0\xbb\xa5\xbd\x2a\x6c\x6c\x2e\xea\xeb\x5b\x63\xb2\xa0\xab\x1a\x29\x41\x38\xb1\xc4\xcb\x12\xf1\xb5\xfb\x37\x33\x1f\xf2\x25\x90\xbe\x97\xc5\xea\x67\x00\x00\x00\xff\xff\xf6\x84\x08\x63\x4b\x05\x00\x00")

func static_bleve_mapping_partials_analysis_wordlists_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_wordlists_html,
		"static-bleve-mapping/partials/analysis/wordlists.html",
	)
}

func static_bleve_mapping_partials_analysis_wordlists_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_wordlists_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/wordlists.html", size: 1355, mode: os.FileMode(420), modTime: time.Unix(1447346653, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_mapping_index_mapping_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x58\x4f\x6f\xe2\x3e\x10\xbd\xf7\x53\xb8\xb9\xf0\xfb\x69\x95\x46\xbb\xc7\x15\x20\xb5\x54\xd5\x1e\xf6\x4f\xa5\xad\xb4\x47\x64\xe2\x81\x58\x75\xe2\xc8\x76\xa0\x74\xb5\xdf\x7d\xc7\x89\x93\x06\x08\x10\x20\xb4\x5d\x0e\x24\x38\xe3\x99\xf7\x9e\x67\x26\x36\x7d\xc6\xe7\x24\x14\x54\xeb\x81\xc7\x13\x06\x4f\xdf\x68\x9a\xf2\x64\xe6\x0d\x2f\xf2\x47\xc9\xcc\x77\x4f\x7f\xf7\xe6\x1c\x16\x3f\x12\xb1\xec\x7d\x26\xe5\xed\x1f\xb4\xbb\xe8\x5f\xfa\x3e\x19\x1c\xf7\x21\xbe\x6f\x3d\xd4\x50\x68\x08\x0d\x97\x89\xd7\x3c\xfc\x05\x28\x03\x45\x74\x24\x17\x0f\xcb\x14\x1c\x5a\xfd\xb3\x9a\x44\x48\x7d\x96\x92\x8b\x7c\x6c\x75\x34\x94\xc2\xd7\xb1\xff\xf1\x93\x7b\x86\x4f\xa9\x65\x6a\xbd\x0e\xbc\xcb\x6d\xce\x9d\x2d\x7e\x72\x55\x78\xf8\x88\xb0\x9a\x6d\xc9\x80\x18\x95\x41\xe5\x1f\x23\xf0\x32\xfa\x4c\x2c\xd3\x88\x87\x68\x54\xdd\xf9\x61\x04\x73\x85\x57\xc5\x67\x91\xf1\x86\xfd\x80\xd7\x66\x0a\x3a\x01\x31\xb4\x51\x48\x19\xa6\x1f\x14\x83\x25\xfc\x80\x36\x31\xe9\x86\xc8\x94\x0a\x7d\x38\x13\x26\x17\xc9\x09\x44\xfa\x01\xae\x57\xbe\x9a\xc5\x8d\xbb\x34\xa5\xc4\x8d\x64\x4b\x62\xb6\xd0\xdc\xab\x45\x43\xc6\x10\x60\xdc\xd0\x89\x80\x76\xa9\x33\xc9\x8c\x41\x09\x9c\x41\x9a\x09\x51\x2c\x23\xa1\x8c\xd5\x22\xd6\x54\x5f\x93\x1e\xed\x46\x11\x17\xcc\x19\xfe\x97\xa0\x8b\xff\xbd\xe1\x35\x63\xa4\xae\x55\x3f\x28\x22\x35\x0b\x74\x6c\xe2\xbb\x22\xe7\x49\x28\x32\x06\xa8\x93\xa1\x86\x87\xe3\x54\xc1\x94\x3f\x91\x0f\xa4\x17\xa4\x54\x19\x8e\x39\x10\xc4\x05\x8e\xc0\x6a\xed\xbb\x1f\x57\x91\x89\x45\xcf\x2e\xb4\x83\xb3\x63\xe9\xca\xeb\xdb\xb4\x8b\xeb\x84\x8a\xe5\x33\xa8\xee\x7b\xc5\x86\xe7\x6d\xf5\xb5\x6e\x78\x86\x2e\x51\x85\x68\xdf\x21\x4e\x81\xdf\x75\x6f\xd8\x0b\xff\xd0\xbe\x40\x9b\xc8\xed\xa6\x7f\x74\x5e\xac\x96\x12\xd1\x2a\xdc\x59\x4e\x39\x34\xcd\xdd\x8d\x45\xf0\xef\x14\xd3\x1d\x17\xe6\x1c\xa5\xb4\xe6\x77\x5b\x26\xae\x9a\x9d\xa1\x8c\x46\x99\x36\x32\x26\x2e\x4e\xfb\x5a\x3a\x16\x7f\xd7\x75\xd4\x0e\xff\xa1\xc5\x34\xdd\x64\xb7\x8b\xfd\xd1\x59\x91\xf1\x89\x8f\x2f\x60\x0d\xa6\x46\xcc\x0d\x92\x08\xb3\x10\x5f\x3c\x03\x6f\x14\x51\x45\x43\x0c\x58\xd2\xac\xe9\x77\x42\x35\x86\xe8\xd6\x11\x6d\xa8\xc7\x42\x36\x87\x65\x17\xba\x07\xf9\x08\x09\x7f\xee\x0c\x96\xa9\xfc\x9d\x8c\xaa\x5b\xbd\x72\x60\x1d\x08\xf6\x4b\x2a\x46\xbe\x72\x6d\x3a\xc2\xb5\x40\x7f\xc2\xba\x6b\x0b\xaa\x1a\xa8\xf2\xee\x9d\x36\xdf\x7b\x25\x53\x40\xba\xd0\x7d\xff\xdd\x74\xbd\xad\x85\x6d\x58\x9e\x63\x33\xc3\xe6\x34\x09\x81\xb5\xef\xbf\xa7\xe1\xef\x7c\x37\xb3\x07\xff\xa1\xfd\x37\x6d\x64\xb7\x47\x80\x93\xb6\x33\xee\xe9\x54\xaa\xd8\x9f\x29\x99\xa5\x5e\xf3\x71\xee\x8e\x83\x58\xa7\x69\xf5\x4b\xd2\xcc\xe4\x67\xb3\x81\x67\xe0\xc9\x78\x2b\x0e\x51\x44\xa3\xa4\x58\x3f\x18\x59\x42\x8c\x6b\x7b\x00\x63\x03\xaf\xfc\xa7\xa1\xc9\x2a\x96\x0c\xc4\xea\xff\x16\x57\x36\xd8\x78\x6a\xe1\x6c\xcc\x48\x05\x0d\x21\x92\x02\xeb\x08\xcf\x69\x2f\x3f\xbc\xe0\x65\x65\x6a\x2d\xa2\xad\x00\xb7\x30\xa5\x99\x30\xf9\x59\xed\x5d\x48\xc0\x0a\x40\x63\x1b\xf4\xb5\x45\x28\x77\xd3\x9b\x42\x68\x10\x98\x91\x2d\x99\xed\xa3\x56\x6e\x99\x1b\x27\xca\xd4\x26\x3e\x02\xc6\x23\xb8\x26\x86\x20\x6e\xfc\xe6\x49\x75\x18\xf8\x4e\x63\xd0\x9b\x53\x9b\x16\xa6\xfe\xbe\x28\x18\x74\x22\xd3\x2d\x35\x10\x3c\xf0\x18\xc8\x3d\x55\xfa\xec\x72\x31\x0c\x67\x30\xda\x38\xcd\xa3\x1d\xa6\x9a\x9d\x6c\xa1\x16\x48\xdf\x5e\xbb\xf7\xd3\x6b\x4a\x79\x5f\xb5\xdd\xdc\x2c\x0d\x90\x6b\xa5\xe8\x92\x8c\x64\x32\xc7\x66\x7f\xb6\xf4\x99\x60\xa8\x31\xb5\xa1\xc6\x61\x19\xea\xb0\xdc\xb1\x1e\x72\xac\x15\xd4\xae\xf3\xe7\x15\xf6\x68\x2b\x8e\xff\x06\x00\x00\xff\xff\xcc\x9a\x9f\xef\x31\x17\x00\x00")

func static_bleve_mapping_partials_mapping_index_mapping_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_mapping_index_mapping_html,
		"static-bleve-mapping/partials/mapping/index-mapping.html",
	)
}

func static_bleve_mapping_partials_mapping_index_mapping_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_mapping_index_mapping_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/mapping/index-mapping.html", size: 5937, mode: os.FileMode(420), modTime: time.Unix(1445528145, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_mapping_type_mapping_tree_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x58\x4b\x6f\xe3\x36\x10\xbe\xe7\x57\x70\x7d\x58\xef\xa2\xf5\xfa\x5e\xc4\x06\x8a\x14\x41\x2f\x5b\xe4\x90\xbb\xc1\x48\xb4\xc5\x86\x96\x04\x91\x4e\x93\xa6\xfe\xef\xe5\xf0\x21\xf3\xa9\x87\xb3\x28\x2a\x20\xb1\x44\x72\x9e\x1c\xce\x7c\xc3\xdb\x92\xbe\x6c\x6f\x10\x82\x5f\x74\xa2\x2b\xd1\x11\xb2\xaa\x70\x5d\x32\x22\x47\xd5\x53\x30\xcc\xf9\x66\x71\xc4\x6d\x4b\xeb\xc3\xef\x6a\x6e\xb1\x55\xb3\xb7\xbc\xc5\x35\xaa\x0f\x2b\xba\xef\x17\x7c\xdb\x3d\xd3\xba\x44\x9b\x0d\x5a\x9a\x91\xc7\xb7\x96\x2c\x0d\x85\xa4\xa1\x96\xe3\x81\xbd\xb5\x15\x2d\x9a\x1a\xf5\x6f\xab\x3d\x05\xe6\xb7\x6b\x2a\xff\x80\xf9\xa8\x9c\x4f\x39\x39\xef\x67\x4d\x6a\xd8\xe4\xf9\xd4\xf8\x48\x40\xdd\xfa\xc4\x98\xa3\xe5\xb6\x24\x7b\x7c\x62\x02\x74\x19\xe1\xf4\xa9\x57\x89\x94\x54\xc8\x97\x0b\x9b\x9c\xc0\x7e\x85\x54\xf4\xdd\x9d\x38\x9f\x2d\xa9\x2b\xce\x72\x32\x9e\xc3\x42\x74\xdc\x61\x91\xd6\x86\xd4\xf8\x89\x91\x72\xb1\xfd\x07\x95\x94\xab\x77\xd7\xa9\x59\xfd\x0c\x1d\xfa\xfc\x19\xd9\xa1\xf2\x4d\xea\x46\x0b\x47\x24\x42\x92\xab\x1e\xbd\x9a\xa9\x76\xf0\x0e\xd7\x98\xbd\xfd\x4d\xba\x80\xfb\xc5\x2f\xe1\xc2\xf3\xd9\x17\xe9\x85\xca\x68\xd8\x98\x3d\x72\x35\x51\x21\xf0\xc9\x84\x80\xa3\x44\x89\x05\x5e\xd5\x4d\xd9\xe1\xc3\x25\x30\xea\xf6\x24\x26\xc6\xbc\xc3\x4a\x3e\x42\x8e\x6d\x16\x82\xbc\x8a\x05\x6a\x19\x2e\x48\xd5\xb0\x92\x74\x9b\x45\xcb\x08\xe6\x04\x91\x5a\x90\x0e\x61\xb5\x0e\xa9\x20\xf1\xe9\xa5\xcc\x63\x53\x12\x16\x44\xd2\x7a\xa6\x6a\xd7\xaa\xd5\x76\x4d\x4b\x3a\xf1\x36\x5f\xb5\x81\x93\x63\x0f\x8c\xc3\xce\x89\xf1\xbb\xa6\x16\x5d\xc3\x38\x82\x65\x10\x3f\x97\x83\x85\xed\xba\x56\xee\xd9\xaa\xa3\x87\x4a\xa0\x27\x51\xc3\xdf\xea\x95\x3b\xfc\x9c\x3d\xbc\x71\xf5\x4d\x04\xe7\xc2\x5b\x50\x30\x5a\x3c\x4b\xfe\x4d\x7b\x6a\x1f\x9b\xc3\x81\x91\x2f\x66\xfd\x57\x37\x52\x87\xf3\x59\xcb\x4e\xdc\xe6\x33\xdc\x2b\x0f\xc9\x36\x56\x5f\x49\x02\x93\x31\xad\xe5\x69\x70\x3d\x9c\x34\x22\x6b\x86\x73\x14\x41\x92\x5c\xc5\xab\xe6\x2f\x63\x0a\x84\x82\x21\x08\x36\xd1\x6a\x04\xab\xbc\xb3\x68\x8b\x84\x33\x82\x1d\x0f\xe1\xb2\xbc\xab\x28\x2b\xbf\x6b\xae\x49\x2f\xe9\x87\xd6\x5c\x46\x10\x2a\x60\xb5\x55\xc2\xf1\x8b\x8e\x95\x40\xd8\x44\xe1\xf7\x94\xb0\x72\xaa\xe8\x3d\x2c\x1e\x16\xec\x7d\xfa\x1f\xc3\xa1\xa7\x7e\x20\x5e\x27\xc4\xa0\xb1\x01\x56\xff\x0a\x29\xfd\x9a\x00\x23\x75\x41\x59\x10\x62\xd9\x24\x68\x73\x5f\x3a\x06\x12\x27\x6f\x2c\x1b\x7e\xf8\x18\x86\x2e\xf8\xad\xa9\xfb\x73\xf6\x33\xda\x63\xc6\xc9\x0c\x6f\x74\xe4\xd8\xbc\x90\xf8\xc0\x4d\xd8\x32\x7e\x2a\x0a\xc2\x3f\xae\xb2\xe8\x4e\x73\x34\x6e\x9e\x53\xda\xe6\x6a\xd6\x46\x6e\x1c\x08\x98\x50\xbc\x46\x0d\x16\x1d\xe6\xd5\x74\x73\xb5\x6b\xef\xbb\xe6\xf8\x80\x3b\x59\x13\x1c\x8b\x2b\xca\x67\x58\xac\xe5\xa6\x03\x56\x7f\x98\xa4\x95\xf2\x40\x6c\xa0\xda\x86\x8e\x60\x64\x5f\xbe\x47\x81\x9d\x0a\x5c\x86\x9f\x08\xdb\x9a\x92\xa9\x4b\x60\x51\x91\xe2\xf9\xa9\x79\x5d\x24\xca\x99\x4d\xad\xeb\x20\xb1\x98\xf1\x3e\x4f\x68\xb6\x57\x0a\xb1\x28\x2b\x14\x62\xc6\x53\x42\xfa\xcc\x64\x5e\xe0\xad\x61\x3d\x92\x97\x46\x13\x7e\xd3\x6f\xe5\x40\xcd\x8b\xb5\x51\x49\xb2\x3f\x0f\xca\x87\xda\x04\x35\x71\xa9\x53\x46\x11\x46\x81\x47\x47\x5a\x82\x85\x59\x23\x93\x2e\x4a\x73\x43\x9e\x86\x37\xc1\x96\xaa\xb5\x97\xa5\x2a\x06\xd5\xc4\xfb\xd2\x84\xc1\xf2\x17\x9d\xc3\xfb\xb8\x38\x2f\xbc\xe2\x9a\xee\x64\x42\x11\x5e\x2f\xa3\x68\x3d\x6c\xe2\x4b\xf0\x4a\xca\xfb\xbb\x9e\xb4\x98\xa8\x47\xed\x17\x2e\x19\xa8\x1e\x89\xd1\x8c\xc0\xb3\x00\xd4\x2d\x63\xf8\x0e\x61\xee\x20\xb1\x6a\x84\x2c\xcc\x5f\x46\xf5\x2f\x41\x65\xf3\x86\x6f\x49\x5c\x39\x25\x14\xe7\x04\x77\x45\x05\xac\x11\xe6\xd0\x1b\x59\x35\x75\xc7\xd2\xb7\x48\x8e\xbc\x84\xe6\x49\x2d\x2c\xa6\x87\x8c\xe6\x58\x03\x78\x15\x20\x69\x6c\x89\x6e\x0d\x7c\x62\xcf\xfd\xb3\xc4\x4b\x6c\x4c\x5e\xc1\xf1\xea\x65\x32\x19\x17\x4d\xa7\xf6\x4b\xbd\xcc\x90\x56\xb0\x53\x49\x76\xb4\xde\x61\x68\x36\x41\xac\x1a\x81\x93\x22\xdd\x0a\xa3\xe0\x4c\x0b\x50\x66\xb2\x95\x38\xfd\xb8\x7b\x21\x85\xd4\x89\xcf\xf2\xa7\xd5\x02\x18\x20\xc3\x60\x82\x47\xe3\xb1\xa8\x15\x1c\x6a\x0d\x83\xf3\x15\x08\x4c\x24\x6d\xc5\xc1\xcb\xb0\x0e\xd7\x6d\xd6\x67\x5e\xfe\x55\x7d\x4e\xe4\x02\xf9\x0c\xb5\x3e\x3a\x9b\x25\xfa\x1e\xfd\x5c\x72\x67\x70\x96\x32\x8b\xe5\x51\xaa\x0f\xaa\x16\xc0\x6f\xf9\x60\x96\x7f\x51\xd4\x5f\xfd\xf4\x1f\x94\x94\xe8\x5e\x60\x42\x43\x05\xcf\xa4\xa6\x4a\x71\x9b\x8f\x6e\xe1\xc9\x34\x28\x69\x94\x6b\xec\x0c\x22\xf1\x0a\x9c\xeb\xfa\x23\xe9\x0e\x07\xef\x06\x45\x25\xeb\x96\xa9\x71\x38\x19\xf9\xce\x75\x8f\x82\x93\x4a\xdb\x14\xfe\x1d\xf7\x54\x06\x03\x4f\xdd\xdc\x18\x07\x7f\xc4\x80\x08\x0d\x8f\xeb\x9f\x40\xc4\x46\xf7\x64\xde\xe8\x31\x71\xa6\x9b\x9d\x8c\x7f\x27\x9a\x19\xe1\x60\x6b\x69\x88\x82\xc7\x2d\x4d\x21\x61\x45\x15\x1d\x71\x07\x11\x0f\x66\xcd\x1c\x26\xbe\x4f\x04\x7f\x2e\xb0\xe3\x7e\x3b\x91\x72\x6d\xd2\x85\xa4\x9a\xab\x53\x84\xc9\x4a\x12\x25\x47\x85\x74\x52\x89\x51\x7b\xb9\x69\x05\x6d\x6a\x69\x83\x00\xa8\x21\xd0\xbe\xe9\xe4\x7f\x59\x1e\x15\x35\x5c\xab\x85\x68\x4a\x09\xd3\x64\xe8\x05\xb3\x93\x4c\xac\x8b\x6d\xf3\xf4\xa7\x14\x7e\xbb\xd6\xe3\x09\x74\xa2\x94\x0b\xcb\x59\x64\x68\xf2\x36\x62\x26\xf8\x1a\x72\x9f\x07\xac\x32\x7e\x9c\x54\xbd\x86\xeb\x57\xb6\x72\xc5\xb5\xcb\xbf\x52\xfc\xb0\x63\x72\xb8\x63\xc8\x29\x16\xd5\xcd\x8b\xab\xfe\x16\xf9\x8a\xd8\xb2\xb4\x7f\x48\xe3\x27\x85\x17\xad\x2b\xd2\xd1\xff\x2e\xbe\xc0\x8d\xf2\xbc\x12\x41\x8f\x64\x8e\x2b\x2d\x0d\x6a\x71\xc7\xe7\x7a\xd4\x12\xef\x34\xf1\x35\x8e\x05\x16\x8f\x92\xc5\x83\xe2\xf0\xbf\x75\xaf\x7f\x7c\x43\xfd\x82\xa4\xaa\x72\xe9\x9d\x69\xe3\x23\x7b\xa6\xf6\xfc\x6e\xfb\x11\xf6\xfb\xfa\x51\x73\x63\x16\xce\x15\xa8\x1b\x97\xb4\x40\x35\xf7\xa3\x05\x06\x2d\x4f\xce\xd4\x7c\x17\x34\x55\xa1\x19\xc9\xc7\xd2\xcd\xb3\xc0\xed\xae\x46\xec\xc8\xf6\x51\xe3\x31\x9a\xbb\x77\x96\x94\x54\xdf\xf3\x34\xec\x87\x5e\xf3\x98\xdf\xd4\x45\x8f\x99\x1a\xb9\xea\x31\xab\xdc\xcb\x9e\x90\xe7\xf0\x75\x4f\x74\x13\x9d\xbe\xf0\x09\xaf\x02\xcf\x1e\x81\x71\xfd\x66\xc1\x05\x16\xb4\xd8\xb5\x1d\xd9\xd3\x57\xf4\x13\x5a\xae\x65\xfa\x12\x54\x02\xe9\xb5\xe1\xb0\x06\xeb\x56\xe6\x43\xa9\xf5\xad\x12\x47\xb6\x04\x24\xe6\x3a\xd9\x78\xff\xdf\x00\x00\x00\xff\xff\x31\xec\x0c\x27\x23\x1f\x00\x00")

func static_bleve_mapping_partials_mapping_type_mapping_tree_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_mapping_type_mapping_tree_html,
		"static-bleve-mapping/partials/mapping/type-mapping-tree.html",
	)
}

func static_bleve_mapping_partials_mapping_type_mapping_tree_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_mapping_type_mapping_tree_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/mapping/type-mapping-tree.html", size: 7971, mode: os.FileMode(420), modTime: time.Unix(1446837433, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_mapping_type_mapping_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x90\xb1\x4e\xc4\x30\x0c\x86\xf7\x3e\x45\x94\xa5\x03\xca\x65\x47\xbd\x2e\xbc\x02\xfb\xc9\x6a\xcc\x61\xc9\x75\xa2\xc4\x87\x40\x88\x77\xc7\xad\x72\x45\x47\xb6\xff\xff\xed\x2f\xb6\xa7\x44\x1f\xee\x46\x41\x2b\xe2\xd9\xe7\xa2\x94\xa5\xf9\x79\x70\x6e\xca\x7c\x0f\x82\xe4\x84\xcd\xbc\xed\xc9\x35\xac\x26\xf9\xec\x57\x28\x85\xe4\xda\x7c\x4f\x12\x28\x04\xfd\x2a\x78\x44\xaf\x26\x5e\xb2\x28\x90\x60\xdd\xa9\xc6\x65\xda\x18\x15\x0b\x82\x1e\x95\x8e\xc4\xfd\xe7\xb9\x87\xff\x0f\x73\x61\x68\xed\x68\xfc\x2b\x36\x68\x8f\xbe\x47\x4c\xa4\x16\x8e\xcf\x77\xe8\xe9\xd2\xad\x9f\x87\x06\x92\x85\x6f\xc9\x06\x6e\x0a\x4a\xcb\xa5\x54\x7c\xa3\x4f\xf7\xe4\xc6\x58\xa0\x2a\x01\xb7\xd8\x09\x71\xdb\x2c\x74\xb1\x8f\x75\x7a\xd7\x95\x47\x3f\x4f\x91\x69\xbf\x58\xcc\x3c\x0f\x53\xb4\x93\xce\xc3\x6f\x00\x00\x00\xff\xff\x6f\x9d\x14\xad\x59\x01\x00\x00")

func static_bleve_mapping_partials_mapping_type_mapping_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_mapping_type_mapping_html,
		"static-bleve-mapping/partials/mapping/type-mapping.html",
	)
}

func static_bleve_mapping_partials_mapping_type_mapping_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_mapping_type_mapping_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/mapping/type-mapping.html", size: 345, mode: os.FileMode(420), modTime: time.Unix(1445103377, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"static-bleve-mapping/js/mapping/analysis-analyzer.js":                       static_bleve_mapping_js_mapping_analysis_analyzer_js,
	"static-bleve-mapping/js/mapping/analysis-charfilter.js":                     static_bleve_mapping_js_mapping_analysis_charfilter_js,
	"static-bleve-mapping/js/mapping/analysis-tokenfilter.js":                    static_bleve_mapping_js_mapping_analysis_tokenfilter_js,
	"static-bleve-mapping/js/mapping/analysis-tokenizer.js":                      static_bleve_mapping_js_mapping_analysis_tokenizer_js,
	"static-bleve-mapping/js/mapping/analysis-wordlist.js":                       static_bleve_mapping_js_mapping_analysis_wordlist_js,
	"static-bleve-mapping/js/mapping/analysis.js":                                static_bleve_mapping_js_mapping_analysis_js,
	"static-bleve-mapping/js/mapping/index-mapping.js":                           static_bleve_mapping_js_mapping_index_mapping_js,
	"static-bleve-mapping/js/mapping/type-mapping.js":                            static_bleve_mapping_js_mapping_type_mapping_js,
	"static-bleve-mapping/partials/analysis/analyzer.html":                       static_bleve_mapping_partials_analysis_analyzer_html,
	"static-bleve-mapping/partials/analysis/analyzers.html":                      static_bleve_mapping_partials_analysis_analyzers_html,
	"static-bleve-mapping/partials/analysis/charfilter.html":                     static_bleve_mapping_partials_analysis_charfilter_html,
	"static-bleve-mapping/partials/analysis/charfilters/generic.html":            static_bleve_mapping_partials_analysis_charfilters_generic_html,
	"static-bleve-mapping/partials/analysis/charfilters/regexp.html":             static_bleve_mapping_partials_analysis_charfilters_regexp_html,
	"static-bleve-mapping/partials/analysis/charfilters.html":                    static_bleve_mapping_partials_analysis_charfilters_html,
	"static-bleve-mapping/partials/analysis/tokenfilter.html":                    static_bleve_mapping_partials_analysis_tokenfilter_html,
	"static-bleve-mapping/partials/analysis/tokenfilters/dict_compound.html":     static_bleve_mapping_partials_analysis_tokenfilters_dict_compound_html,
	"static-bleve-mapping/partials/analysis/tokenfilters/edge_ngram.html":        static_bleve_mapping_partials_analysis_tokenfilters_edge_ngram_html,
	"static-bleve-mapping/partials/analysis/tokenfilters/elision.html":           static_bleve_mapping_partials_analysis_tokenfilters_elision_html,
	"static-bleve-mapping/partials/analysis/tokenfilters/generic.html":           static_bleve_mapping_partials_analysis_tokenfilters_generic_html,
	"static-bleve-mapping/partials/analysis/tokenfilters/keyword_marker.html":    static_bleve_mapping_partials_analysis_tokenfilters_keyword_marker_html,
	"static-bleve-mapping/partials/analysis/tokenfilters/length.html":            static_bleve_mapping_partials_analysis_tokenfilters_length_html,
	"static-bleve-mapping/partials/analysis/tokenfilters/ngram.html":             static_bleve_mapping_partials_analysis_tokenfilters_ngram_html,
	"static-bleve-mapping/partials/analysis/tokenfilters/normalize_unicode.html": static_bleve_mapping_partials_analysis_tokenfilters_normalize_unicode_html,
	"static-bleve-mapping/partials/analysis/tokenfilters/shingle.html":           static_bleve_mapping_partials_analysis_tokenfilters_shingle_html,
	"static-bleve-mapping/partials/analysis/tokenfilters/stop_tokens.html":       static_bleve_mapping_partials_analysis_tokenfilters_stop_tokens_html,
	"static-bleve-mapping/partials/analysis/tokenfilters/truncate_token.html":    static_bleve_mapping_partials_analysis_tokenfilters_truncate_token_html,
	"static-bleve-mapping/partials/analysis/tokenfilters/wordmap.html":           static_bleve_mapping_partials_analysis_tokenfilters_wordmap_html,
	"static-bleve-mapping/partials/analysis/tokenfilters.html":                   static_bleve_mapping_partials_analysis_tokenfilters_html,
	"static-bleve-mapping/partials/analysis/tokenizer.html":                      static_bleve_mapping_partials_analysis_tokenizer_html,
	"static-bleve-mapping/partials/analysis/tokenizers/exception.html":           static_bleve_mapping_partials_analysis_tokenizers_exception_html,
	"static-bleve-mapping/partials/analysis/tokenizers/generic.html":             static_bleve_mapping_partials_analysis_tokenizers_generic_html,
	"static-bleve-mapping/partials/analysis/tokenizers/regexp.html":              static_bleve_mapping_partials_analysis_tokenizers_regexp_html,
	"static-bleve-mapping/partials/analysis/tokenizers.html":                     static_bleve_mapping_partials_analysis_tokenizers_html,
	"static-bleve-mapping/partials/analysis/wordlist.html":                       static_bleve_mapping_partials_analysis_wordlist_html,
	"static-bleve-mapping/partials/analysis/wordlists.html":                      static_bleve_mapping_partials_analysis_wordlists_html,
	"static-bleve-mapping/partials/mapping/index-mapping.html":                   static_bleve_mapping_partials_mapping_index_mapping_html,
	"static-bleve-mapping/partials/mapping/type-mapping-tree.html":               static_bleve_mapping_partials_mapping_type_mapping_tree_html,
	"static-bleve-mapping/partials/mapping/type-mapping.html":                    static_bleve_mapping_partials_mapping_type_mapping_html,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func     func() (*asset, error)
	Children map[string]*_bintree_t
}

var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"static-bleve-mapping": &_bintree_t{nil, map[string]*_bintree_t{
		"js": &_bintree_t{nil, map[string]*_bintree_t{
			"mapping": &_bintree_t{nil, map[string]*_bintree_t{
				"analysis-analyzer.js":    &_bintree_t{static_bleve_mapping_js_mapping_analysis_analyzer_js, map[string]*_bintree_t{}},
				"analysis-charfilter.js":  &_bintree_t{static_bleve_mapping_js_mapping_analysis_charfilter_js, map[string]*_bintree_t{}},
				"analysis-tokenfilter.js": &_bintree_t{static_bleve_mapping_js_mapping_analysis_tokenfilter_js, map[string]*_bintree_t{}},
				"analysis-tokenizer.js":   &_bintree_t{static_bleve_mapping_js_mapping_analysis_tokenizer_js, map[string]*_bintree_t{}},
				"analysis-wordlist.js":    &_bintree_t{static_bleve_mapping_js_mapping_analysis_wordlist_js, map[string]*_bintree_t{}},
				"analysis.js":             &_bintree_t{static_bleve_mapping_js_mapping_analysis_js, map[string]*_bintree_t{}},
				"index-mapping.js":        &_bintree_t{static_bleve_mapping_js_mapping_index_mapping_js, map[string]*_bintree_t{}},
				"type-mapping.js":         &_bintree_t{static_bleve_mapping_js_mapping_type_mapping_js, map[string]*_bintree_t{}},
			}},
		}},
		"partials": &_bintree_t{nil, map[string]*_bintree_t{
			"analysis": &_bintree_t{nil, map[string]*_bintree_t{
				"analyzer.html":   &_bintree_t{static_bleve_mapping_partials_analysis_analyzer_html, map[string]*_bintree_t{}},
				"analyzers.html":  &_bintree_t{static_bleve_mapping_partials_analysis_analyzers_html, map[string]*_bintree_t{}},
				"charfilter.html": &_bintree_t{static_bleve_mapping_partials_analysis_charfilter_html, map[string]*_bintree_t{}},
				"charfilters": &_bintree_t{nil, map[string]*_bintree_t{
					"generic.html": &_bintree_t{static_bleve_mapping_partials_analysis_charfilters_generic_html, map[string]*_bintree_t{}},
					"regexp.html":  &_bintree_t{static_bleve_mapping_partials_analysis_charfilters_regexp_html, map[string]*_bintree_t{}},
				}},
				"charfilters.html": &_bintree_t{static_bleve_mapping_partials_analysis_charfilters_html, map[string]*_bintree_t{}},
				"tokenfilter.html": &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilter_html, map[string]*_bintree_t{}},
				"tokenfilters": &_bintree_t{nil, map[string]*_bintree_t{
					"dict_compound.html":     &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilters_dict_compound_html, map[string]*_bintree_t{}},
					"edge_ngram.html":        &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilters_edge_ngram_html, map[string]*_bintree_t{}},
					"elision.html":           &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilters_elision_html, map[string]*_bintree_t{}},
					"generic.html":           &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilters_generic_html, map[string]*_bintree_t{}},
					"keyword_marker.html":    &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilters_keyword_marker_html, map[string]*_bintree_t{}},
					"length.html":            &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilters_length_html, map[string]*_bintree_t{}},
					"ngram.html":             &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilters_ngram_html, map[string]*_bintree_t{}},
					"normalize_unicode.html": &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilters_normalize_unicode_html, map[string]*_bintree_t{}},
					"shingle.html":           &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilters_shingle_html, map[string]*_bintree_t{}},
					"stop_tokens.html":       &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilters_stop_tokens_html, map[string]*_bintree_t{}},
					"truncate_token.html":    &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilters_truncate_token_html, map[string]*_bintree_t{}},
					"wordmap.html":           &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilters_wordmap_html, map[string]*_bintree_t{}},
				}},
				"tokenfilters.html": &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilters_html, map[string]*_bintree_t{}},
				"tokenizer.html":    &_bintree_t{static_bleve_mapping_partials_analysis_tokenizer_html, map[string]*_bintree_t{}},
				"tokenizers": &_bintree_t{nil, map[string]*_bintree_t{
					"exception.html": &_bintree_t{static_bleve_mapping_partials_analysis_tokenizers_exception_html, map[string]*_bintree_t{}},
					"generic.html":   &_bintree_t{static_bleve_mapping_partials_analysis_tokenizers_generic_html, map[string]*_bintree_t{}},
					"regexp.html":    &_bintree_t{static_bleve_mapping_partials_analysis_tokenizers_regexp_html, map[string]*_bintree_t{}},
				}},
				"tokenizers.html": &_bintree_t{static_bleve_mapping_partials_analysis_tokenizers_html, map[string]*_bintree_t{}},
				"wordlist.html":   &_bintree_t{static_bleve_mapping_partials_analysis_wordlist_html, map[string]*_bintree_t{}},
				"wordlists.html":  &_bintree_t{static_bleve_mapping_partials_analysis_wordlists_html, map[string]*_bintree_t{}},
			}},
			"mapping": &_bintree_t{nil, map[string]*_bintree_t{
				"index-mapping.html":     &_bintree_t{static_bleve_mapping_partials_mapping_index_mapping_html, map[string]*_bintree_t{}},
				"type-mapping-tree.html": &_bintree_t{static_bleve_mapping_partials_mapping_type_mapping_tree_html, map[string]*_bintree_t{}},
				"type-mapping.html":      &_bintree_t{static_bleve_mapping_partials_mapping_type_mapping_html, map[string]*_bintree_t{}},
			}},
		}},
	}},
}}

// Restore an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// Restore assets under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	if err != nil { // File
		return RestoreAsset(dir, name)
	} else { // Dir
		for _, child := range children {
			err = RestoreAssets(dir, path.Join(name, child))
			if err != nil {
				return err
			}
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

func assetFS() *assetfs.AssetFS {
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, Prefix: k}
	}
	panic("unreachable")
}
