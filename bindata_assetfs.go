package mapping

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"github.com/elazarl/go-bindata-assetfs"
	"io"
	"io/ioutil"
	"os"
	"path"
	"path/filepath"
	"strings"
	"time"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindata_file_info struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindata_file_info) Name() string {
	return fi.name
}
func (fi bindata_file_info) Size() int64 {
	return fi.size
}
func (fi bindata_file_info) Mode() os.FileMode {
	return fi.mode
}
func (fi bindata_file_info) ModTime() time.Time {
	return fi.modTime
}
func (fi bindata_file_info) IsDir() bool {
	return false
}
func (fi bindata_file_info) Sys() interface{} {
	return nil
}

var _mapping_static_js_mapping_analysis_analyzer_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x57\xcd\x8e\xdb\x36\x10\xbe\xef\x53\x70\x85\x20\x96\x11\xc3\x8b\x5e\x6b\xec\x21\x08\x50\xa0\x87\xed\x29\x37\xc3\x08\x18\x71\x64\x13\x96\x48\x95\xa4\x9c\x75\x17\x7e\xf7\x0e\xa9\x3f\x52\x3f\x5e\x79\xb7\x45\x1b\x1d\x6c\x91\x33\xf3\x71\xf8\xcd\x70\xc4\x39\x51\x45\x3e\x0b\x9a\x9d\xff\x02\xf5\x24\x19\xcd\xbe\x18\x95\x91\x47\x92\x96\x22\x31\x5c\x0a\x12\x7f\xd0\x89\x2c\x60\x45\x3e\xe4\x56\xfc\xbb\xd0\x86\x8a\xc4\x8e\x0f\xc6\x14\x2b\x22\x68\x8e\x83\x13\xcd\x4a\xfc\xcb\x69\x51\x70\xb1\x5f\x92\x97\x3b\x82\x4f\x65\xba\x96\x8a\xef\xff\x40\x35\x84\xb5\xda\x1b\x5f\x26\x26\xe6\x41\x29\xa9\x9e\x40\x6b\xba\xb7\xf2\x28\x0a\xa4\xa9\x54\x79\x41\xcd\x61\x28\xa9\x3d\x40\x41\xfd\xb6\xb9\xf3\xc5\xb4\xde\x2a\xca\x5f\x2e\x95\xe1\xc3\x03\x41\xd1\x99\x70\x51\xed\x82\x20\x38\x01\xc6\x0d\x1a\x3b\x05\x3b\x8e\x2d\x4f\xc7\x56\xa7\xd9\x60\x6d\x2f\x00\x18\x61\x00\x05\x02\x3b\x2c\x99\xe2\x9c\x36\x38\x4b\x95\xa2\x67\xdd\x2a\xf3\x94\xc4\x47\xf2\x88\x6e\x27\x07\xaa\xbe\xa5\x3c\x33\xa0\x74\xe4\xe3\xd9\x47\xc0\x0f\x2b\xaf\xc5\xe8\xec\x76\xb7\x09\x14\x5a\x9f\x92\x94\xb7\x5e\xad\x7d\xcc\x3e\xe4\x10\x76\x5d\x94\xfa\x10\x0f\x2d\xb7\x88\xb9\x5b\x86\xeb\x5d\x82\x51\x8f\xcc\xc0\xda\x06\x33\x58\xa6\x03\xba\x10\xc8\x34\x78\x1c\x18\x79\x04\x71\x8d\x04\xa7\x30\x83\x05\xe3\xb3\x10\xa0\x4e\xd0\xe0\x03\xfb\x3c\x04\xb6\x5b\x73\x2b\x11\x81\x79\xc5\x84\xbf\xd2\x80\x8a\x97\x6b\x68\xdb\xe3\x0e\x21\x9c\x5f\xf8\xea\xd9\xde\x55\xbf\x7e\x5e\xbb\x55\x38\x1a\xd9\x73\xd6\x50\xe5\x2b\x64\x92\xb2\xaf\x7d\xa5\xe6\x90\xc7\x3e\x4b\xee\x5c\xaf\x0b\xa9\x4d\xbc\x78\xa0\x05\x7f\xf8\x16\x82\x2f\x56\xcd\x29\x5f\xeb\x32\x49\xf0\x88\xc6\x2d\x0e\xa3\x86\xf6\x19\x9f\xf2\xd0\xea\x76\xb3\x3e\x37\xcb\x75\xfb\xee\xca\x40\x88\xbf\xc2\x23\xc6\x60\x62\x95\x5e\xd9\xb0\xfa\x3e\x70\xf5\x7e\x79\x8d\x9a\x78\x19\x6a\xd8\x6c\xfe\xcd\x85\xf0\x1a\xbd\x5f\x06\x5a\x33\xf9\xed\xc1\xbf\x91\xe0\xa1\x93\x8e\x61\xff\x6c\xfe\xb7\x1c\xf7\xf8\xe9\x93\x4c\x99\xa7\xe1\x93\xe7\xc4\xbe\x2f\x69\xa3\x12\x18\xd2\x04\x27\x3b\xfc\x4d\x50\x73\x6b\x93\x7b\xac\x3a\xa5\x60\x90\x72\x81\xb5\xf9\xe3\x47\xe2\xcd\x47\x83\x02\x54\x3b\xa6\x21\x03\xc4\x66\x9f\xc7\xca\x5d\x55\x3c\xaa\xc1\xb2\x7f\x46\xed\x93\x48\xa1\x65\x66\x19\xd8\xc7\x73\x00\xc7\xf9\x53\x90\xcb\x13\x8c\xf3\xc3\x71\x43\xcf\x41\x86\xcd\xf1\x5b\x17\x19\x4f\xa0\x32\x5e\x91\x5f\xc6\x97\x75\xc7\xf3\xf5\xcc\xff\x3a\x54\xbb\xa5\xb4\xbc\x3f\xf7\x47\xfc\xec\xca\xcb\xff\x23\xfb\xfb\x1c\xfd\x34\xe9\x3f\xfa\x95\x7f\x4b\xda\x8f\x02\xfd\x73\xe9\x3e\xee\xe7\xac\x34\x47\x0a\xbd\xf0\xdc\x48\x7e\x2f\xb0\xff\x02\xf1\x41\x16\xbf\x8b\xf9\xf0\x6a\x74\x85\xfa\x09\x3a\x5e\xe5\x3e\x74\x75\x16\xf9\x89\x6d\x27\xc2\x96\x23\x58\x21\x68\x3b\xd6\x8c\xeb\x9c\x63\x55\x58\x54\x66\x8b\x71\xcc\xef\x25\xcf\xd8\x54\x15\xc2\x0b\x7b\x5e\x6a\x43\x0e\xf4\x04\x84\xba\xd6\x23\x88\xd9\xbd\xd7\x9a\xcc\x2b\x02\x91\xeb\x6e\xb8\x26\x0a\xfe\x2c\xb9\x02\x16\x85\x97\x46\x05\xa6\x54\xc2\x0f\x56\xd0\x3d\x58\x63\xe7\x91\x90\x86\xd0\x4c\x01\x65\x67\xf2\x1d\x48\xa9\x81\x05\x9e\xf9\x3d\xd3\xfd\xe3\xa0\xbd\xc2\xbc\x0a\xbb\xa0\x2a\x2e\x9a\xeb\x36\x40\x7a\xeb\x61\xec\x66\xee\xae\xf9\x80\x38\x4f\x19\x59\x44\xe4\x53\xd0\xbe\x7d\x22\xd1\xa2\xf5\x1b\x9e\xb9\x36\xfa\x26\x02\x40\xe8\x52\x01\x31\x07\x6a\xf0\x07\x69\xc4\x6b\x73\xd3\xbe\x61\x3a\xe7\x85\x14\x20\x8c\xe5\x17\x2f\xc3\xbc\xa3\xa4\xd9\x9d\xd7\xcc\xd9\xa7\xed\x0a\xa8\x6b\xd8\x26\x28\xe9\xef\xbd\x99\xdf\x52\x77\xed\x9e\xb0\xb2\xd2\xb1\x43\xd7\xf2\xdb\xf3\x65\x9c\xf7\x0e\xbf\x91\x6f\x06\x9b\xda\x46\xad\x6d\x64\x0d\xda\x51\xa7\x6a\xb0\xc5\x7c\x6a\xfb\xdd\x70\x3b\x51\x83\x13\xfd\xda\x42\x76\x7e\x6f\xae\x7c\x92\x1d\xc7\xd4\x40\x8d\xbc\x58\x79\xcb\xcc\xfc\x2a\x63\x4c\x31\x5d\xb9\xa9\x03\x56\x87\x1f\x27\x7a\x49\xa1\xcb\xcc\xf4\x08\xeb\x04\xb3\x19\x73\xdb\x08\xab\x44\x92\x49\x0d\x71\x85\xb3\x7c\xe7\x77\x1f\x37\x23\xcd\x01\xd4\x0f\x8e\x0d\x1b\x96\x9f\x22\xa3\xe7\xca\xfa\x4d\xd7\x83\xa6\x5c\x5d\x36\x7f\x07\x00\x00\xff\xff\x94\xda\xd1\xd3\x7b\x11\x00\x00")

func mapping_static_js_mapping_analysis_analyzer_js_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_js_mapping_analysis_analyzer_js,
		"mapping_static/js/mapping/analysis-analyzer.js",
	)
}

func mapping_static_js_mapping_analysis_analyzer_js() (*asset, error) {
	bytes, err := mapping_static_js_mapping_analysis_analyzer_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/js/mapping/analysis-analyzer.js", size: 4475, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_js_mapping_analysis_charfilter_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x56\x4f\x4f\xe3\x3a\x10\xbf\xf3\x29\x4c\x84\x68\x2a\xaa\xe4\xfe\x2a\x4e\x3c\x3d\xe9\x1d\xd8\x13\xb7\xaa\x42\x26\x99\xb6\x16\x89\x93\xb5\x1d\xa0\x42\x7c\xf7\x1d\xff\x69\x62\xbb\x49\x29\xcb\x6e\x0f\x90\x64\xfe\xff\x66\x3c\xfe\xbd\x50\x41\xee\x76\x54\xfc\xc7\x2a\x05\xe2\xbe\x29\x69\x75\xa7\x44\x45\x6e\xc9\xa6\xe3\x85\x62\x0d\x27\xe9\x95\x2c\x9a\x16\x16\xe4\xaa\xd6\xe2\xff\xb9\x54\x94\x17\xfa\x7d\xa7\x54\xbb\x20\x9c\xd6\xf8\xf2\x42\xab\x0e\xff\xd5\xb4\x6d\x19\xdf\xce\xc9\xfb\x05\xc1\x9f\x35\xcd\x1a\xc1\xb6\x3f\x50\x0d\xdd\x6a\xed\xa5\x2f\xe3\x13\xdf\x41\x88\x46\xdc\x83\x94\x74\xab\xe5\x49\x12\x48\x37\x8d\xa8\x5b\xaa\x76\xc7\x12\x97\x01\x0a\xdc\xd3\xf2\xc2\x17\x17\x58\xec\xc6\x14\x8b\x1a\xef\x1f\xd6\x34\xcf\x09\x0a\xf7\x84\x71\x5b\x07\x41\xf7\x04\x4a\xa6\xd0\xdc\x28\xe8\xf7\x54\x63\xf5\xdc\xeb\x1c\x4a\x1c\xf5\xbd\x7a\x5e\xa3\x7b\xa3\x87\x8f\x36\xc8\x47\x90\x47\xc7\x9f\x79\xf3\xca\x07\xec\x1f\xf6\x2d\x3c\x40\xdd\x56\x54\x99\x7a\x73\x84\x59\xb1\x22\x6f\xa9\x50\x8c\x56\x32\xa7\x9c\x56\x7b\xc9\x64\x3e\x84\x91\xf9\x16\x38\x08\x56\x64\x3b\x55\x57\x21\x0e\xc5\xa8\x67\xa9\xab\xee\xf3\x4e\x04\x6c\xe1\xad\x4d\xfe\x39\x37\x9c\xd5\xb7\xd1\x16\xb6\xaa\x13\x41\xff\x85\x0d\xed\x2a\x35\x15\xf3\x30\x61\xa9\x0f\xa5\xfe\x09\x50\x9d\xe0\xd1\xc7\x28\x5f\x17\x3e\x92\x62\x8d\x05\x18\x71\x20\x75\x49\xda\x2e\xb8\x0f\xd3\x69\xeb\x7c\x57\x6b\xa7\xd1\xb5\x25\xc2\x76\x77\xa4\x30\x9a\xbc\x39\x11\xd9\x16\x54\x3a\xcb\x69\xcb\xf2\xc7\xc8\xf1\x6c\x9e\xc9\xae\x28\x70\xa8\xd3\xde\x1e\xdd\xd3\x18\x80\xc9\xb4\xb4\xb2\xf9\xfc\x68\x3b\xf2\xa8\xb4\xc0\xab\x6e\x9e\xf5\xcf\xe6\x00\x85\x71\x16\x38\xe6\x25\x4c\x44\x8b\x0e\x9c\xd6\xf7\x1d\x2f\x03\xe0\x46\x61\x49\xe7\x4e\xca\x36\x24\xbd\x3c\x3a\x14\x99\x4e\xd6\x0f\x5e\xda\xf9\xd0\xb6\x7a\xe2\x5d\x73\x87\xa0\xda\xcd\xc9\xc1\x5a\x79\x1e\xd6\x27\x40\xec\x0f\xfc\xf9\xde\xd2\x79\x3c\x33\x06\xd3\x4a\xc2\x19\x61\xde\x8f\x06\x6e\x54\xd3\x00\xa2\xa1\x1e\xe2\x0e\x76\x17\x83\xf1\xf1\xce\x3b\x7d\xc6\x57\xe3\x91\xd6\xa7\x86\x1e\x5b\xc9\x4d\xdf\x47\x07\x9b\xc3\xab\xeb\xd2\xb8\xeb\xaf\xf4\x6c\x22\xb9\xef\xb7\x6f\xc2\x71\xd0\xc9\xbf\xd4\x41\x87\xcf\x19\x30\x7c\xda\xa4\x09\x1c\xfe\x40\xf3\xcf\x01\xc1\x0b\x73\xf2\x86\xfa\x6c\xa1\x6a\x86\x10\xb2\x88\x60\x4f\x06\x4c\x22\x2b\x99\xac\x19\xee\xc4\x99\x35\x9b\x45\xbb\xc6\xf9\x7c\xea\x58\x55\x4e\x0d\x28\xde\xe0\x75\x27\x15\xd9\xd1\x17\x20\xd4\xb0\x89\xa0\x17\x97\x1e\xdb\x38\x6f\xff\x25\x86\xb0\x30\x89\xb7\xd1\xcf\x8e\x09\x28\xbd\xc5\xa4\x7f\xf6\x92\xf2\x71\xf0\x93\x31\xac\xc6\x64\xc4\x1b\x45\x68\x25\x80\x96\x7b\xf2\x04\xa4\x93\x50\x8e\x4d\x89\x31\xb8\xbc\x3d\x62\x4c\xd7\xd7\x11\xb1\xc9\x0e\x17\xb3\x7f\x0f\xf4\x5d\xd7\x6e\xa6\x46\x28\x2e\x50\x77\x96\x16\x7a\xde\xdd\xd8\x6b\xe3\x92\xcc\x12\x72\x13\x90\xb3\x1b\x92\xcc\xfa\x12\xe0\x8d\x49\x25\xbf\x84\x05\x70\xd9\x09\x20\x6a\x47\x15\xfe\x41\x44\xf1\xb4\x1c\xc8\x19\x5e\x48\x75\xdb\x70\xe0\x4a\x43\x8d\x84\x89\x0d\xe8\x0c\x03\x2e\xa3\x13\xe9\x49\x82\xc2\xc7\xf6\xd3\x60\x85\x87\x43\xdd\xf7\xec\x30\x84\x28\x39\xa0\x8a\xe4\x61\x84\x77\xf8\x50\xa3\x86\x17\x3f\xe4\x19\x03\x02\xcb\x88\x14\xb4\x8d\xec\x59\x81\x29\x13\x0f\x91\x4b\x66\xb6\xf0\x32\x3b\x93\x21\x20\xac\x38\x3c\x4c\x39\xcc\x0e\x94\x89\xa9\xa8\x2f\x12\x37\x63\x04\xde\x20\xf8\x02\x76\xa6\x90\xf0\xd4\x16\x55\x23\x21\xb5\x9e\xe6\xdf\xa4\x20\x58\x4e\xa3\x76\x20\x5e\x19\x2e\x26\x5c\x07\xb8\x63\xf6\xd6\xfa\xb7\x98\xca\x61\x7d\x7c\x2c\x7f\x05\x00\x00\xff\xff\xe0\xe8\x40\x52\xe0\x0c\x00\x00")

func mapping_static_js_mapping_analysis_charfilter_js_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_js_mapping_analysis_charfilter_js,
		"mapping_static/js/mapping/analysis-charfilter.js",
	)
}

func mapping_static_js_mapping_analysis_charfilter_js() (*asset, error) {
	bytes, err := mapping_static_js_mapping_analysis_charfilter_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/js/mapping/analysis-charfilter.js", size: 3296, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_js_mapping_analysis_tokenfilter_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x58\x51\x8f\xe2\x36\x10\x7e\xbf\x5f\xe1\x45\xa7\x03\x74\x88\x54\x5b\xdd\x4b\xd1\x3d\x5d\x55\xa9\x0f\xdb\x27\xde\x10\x42\xbe\xc4\x80\x45\x62\xa7\xf6\x64\x77\xe9\x8a\xff\xde\x71\x12\x12\x3b\x71\x20\xc9\x6e\xd5\x7d\xb8\x03\x66\xe6\x9b\xf1\x37\xe3\xf1\xd8\xcf\x54\x91\xb5\x3c\x31\xf1\x07\x8f\x81\xa9\x27\x19\xd1\xf8\x07\xa8\x98\x7c\x27\xfb\x4c\x84\xc0\xa5\x20\xb3\xcf\x3a\x94\x29\x5b\x90\xcf\x89\x11\xff\x29\x34\x50\x11\x9a\xef\x47\x80\x74\x41\x04\x4d\xf0\xcb\x33\x8d\x33\xfc\x2f\xa1\x69\xca\xc5\x61\x4e\xde\x3e\x11\xfc\x2b\x4c\x97\x52\xf1\xc3\x5f\xa8\x86\xb0\x46\x7b\x65\xcb\x44\xc7\xef\x4c\x29\xa9\x9e\x98\xd6\xf4\x60\xe4\x93\x89\x23\xdd\x4b\x95\xa4\x14\x8e\x6d\x49\x19\x01\x0a\xca\x4f\xab\x4f\xb6\x18\xcc\x6a\xf7\xf9\x6a\x51\xe5\xed\x52\xd8\x06\x01\x41\xe9\x99\x70\x51\x2c\x84\x20\x3e\x61\x11\x07\xb4\xcf\x15\xcc\xf7\x99\x61\xeb\x54\xe9\x5c\xd7\xe8\x07\xdf\x9c\xb6\x88\x9f\x2b\xe2\xc7\xc2\xcb\xa5\x1d\xc9\x13\x4d\x0d\x31\x1a\x75\x37\x5b\x37\xd2\x58\xd2\x68\xdd\xd0\xb9\x26\x65\xe6\x38\x37\x79\x58\xa6\x52\xc3\x6c\x1a\xd0\x94\x07\x3b\x07\x7a\xba\xb8\x26\x65\xa9\xb3\x30\x44\x46\x67\x15\x4c\x44\x81\xda\x50\x37\xc2\x33\xaa\xc5\x8f\x3b\xc4\xd3\xab\xca\xe6\x32\x5f\x56\x9f\xf3\xa4\xb9\xf0\x0b\x64\x36\x62\x1d\x4e\x1a\x49\x36\xfa\x36\x70\x49\xdb\x1d\x5e\x66\x73\x57\x21\x13\x27\x21\x5f\x84\x55\xd7\xeb\x73\xca\xd6\x2c\x49\x63\x0a\x79\x2d\x05\x58\xc2\xc0\xc3\x20\xa5\x0a\x38\x8d\x75\x40\x05\x8d\xcf\x9a\xeb\xc0\xca\xa0\x0e\x0e\x4c\x30\xc5\xc3\xe5\x11\x92\xd8\x2d\x32\xf0\x63\x1b\x9e\xea\x75\x4e\x22\x1e\xc2\x2e\x94\x49\x2a\x33\x11\x4d\x7e\xeb\xed\xd7\xb1\x2b\xbc\x2f\x6a\x54\x16\x1d\xd8\x4e\x1c\x14\x4d\x06\x40\xd6\x46\x6d\xbc\x98\x6b\x4c\xd6\x10\xb0\xc2\xa2\x85\x74\x62\xe7\x17\xa9\x22\xac\x0f\x75\x62\x6a\x00\xa0\x6b\xd8\xc2\x8d\x99\x38\xc0\x71\x00\x5e\x61\xd0\xc2\x19\x4a\x9a\x9f\x2f\x81\xad\x87\xc6\xfc\x1f\xb6\xcb\x04\x37\xb5\x3d\x04\xb1\x69\xdb\x42\xd7\x47\xdc\xa9\xf1\x10\xcc\xd2\xa2\x8d\x04\x32\x2d\x3a\x81\x1e\x82\x56\x5b\xb5\x10\x41\xe1\xc6\xc6\x32\x2f\xe4\x03\x40\x5d\x43\x1b\xf7\x72\x6b\x5b\xfd\xce\xf6\x34\x8b\xe1\xce\xae\xf2\xf6\x44\xf3\xa7\x18\x64\x4a\x34\x7e\xac\x21\xaa\x5e\x86\x18\xbe\x9e\xb7\xf9\x65\xeb\x58\x5e\xac\xce\xd4\xb5\x1d\x47\xc4\x62\xec\x0d\x95\x7b\x25\x05\x58\x6c\x57\x0a\x09\x37\x54\xff\xea\x93\xd0\xd7\xb6\xa4\x2b\xcc\x6a\x97\x8f\x88\xd1\x64\x37\x8c\x99\xfe\x28\xce\x5a\x8d\x62\x44\x4c\x25\xc6\x87\xc5\x54\x35\x99\x11\xb1\xdc\x4b\xd1\xe3\xb7\x6f\x7d\x42\x78\x47\x15\xdd\x2d\x92\x5e\xfe\x3d\x9d\x6d\x44\x2c\x66\x36\x33\x15\x2d\xf6\xe1\xa4\x8f\xdb\xba\xe5\x8d\x5e\xf8\x63\x37\xf5\x1e\x89\xcc\x20\xcd\x60\x67\xa6\x52\x8e\xfd\xca\x38\xc6\xde\xc5\x3c\x9a\x9a\x61\x67\xa3\x20\xf3\xc3\xcc\xb7\x39\xb1\xc3\xc5\xc5\x51\xd7\x6f\xa9\x4e\x4f\x1e\xb1\xdc\x1a\xe0\xfd\x15\xdf\x6a\xe7\x23\xe2\xa9\x76\xcd\xe3\xbd\x0a\xbf\x78\xe6\xf0\xba\xd5\x3b\x03\x70\x96\xe2\x20\xc8\xd6\x6d\x8d\x1b\xe3\xef\x81\xb9\xd3\xaf\x65\x38\x1d\x31\xf8\xba\x7e\xad\xd9\xb7\x38\xd2\x76\x60\x24\xff\xc3\x0c\xec\xa7\xa6\x9a\x80\xf9\x9e\xcc\x1e\xda\x97\x91\xa5\x09\xd7\x76\x1f\x15\x27\xab\x31\x36\xf3\x70\x99\xc5\xda\xad\xc1\xb9\x7d\x26\x6f\x2c\x88\xed\x2d\x26\xab\xbb\xd6\x00\xbc\xd9\xdc\x62\xa0\x26\x16\xf7\x68\x1f\x47\x6f\x17\x9f\x75\x07\x2b\x86\xf1\xda\xf3\xf5\x9e\x66\x19\x58\x37\xcd\x3b\xc3\xff\xa6\xc3\xc5\xf6\x66\xe5\xff\x38\x52\x91\x27\xde\x5b\xdc\x82\xbd\x94\x49\xea\x00\x1f\x94\xb3\xae\x00\x3f\x22\x7f\x5d\xd8\x4e\x2e\xff\xb3\x1c\x96\x3c\xf5\x61\xe3\x7e\xbe\x3a\xe8\xf8\x90\x4a\xe8\x43\x45\xdb\xd1\xed\x2b\x6d\x93\xaa\x46\xab\x0d\xcd\x73\x8d\xfb\xa4\xe3\xf4\x4f\xe7\x59\x67\x19\x71\x9d\x70\x6c\x95\xd3\xc2\x6c\xea\xbf\x84\xff\xcc\x78\x1c\x75\x15\x6d\x10\x90\x24\xd3\x40\x8e\xf4\x99\x11\x9a\x3f\xed\x38\x79\x79\xb0\x9e\x7e\xfa\x35\xc5\x49\xfe\x7a\xc4\x35\x9e\x44\x7f\x67\x5c\xb1\xc8\xea\x55\xe6\xaf\x38\xa0\x6c\x1e\xec\x60\xf2\x27\xa6\x3c\x22\x21\x81\xd0\x58\x31\x1a\x9d\xc9\x4f\x46\x32\xcd\x22\x5f\xc5\xe4\x06\x0f\xdf\x5b\xcf\x57\x5f\xbe\x34\x5e\x99\x96\xd7\xfb\x8e\x73\x3a\x54\xf9\x37\x38\x5d\xd5\xd4\x5c\x61\x9e\x5b\x52\x6e\x00\x63\x18\x91\xe9\x84\x7c\x75\x9e\xc9\xbe\x92\xc9\xb4\x8a\x9f\xbd\x72\x0d\x7a\x10\x11\x38\x76\x64\x8a\x11\x38\x52\xc0\x7f\x90\x4e\xdc\x36\xd7\x67\x32\x92\x5f\xa9\x04\x13\x60\x78\x7e\xc6\x39\xb0\xa6\xc6\xbe\xcc\x35\x36\xa7\x2d\x72\x96\xed\x6d\x59\x96\x1d\xd3\xf0\x54\x3d\xd5\xb9\x0c\x4d\xae\xac\xe2\x5c\xe1\x99\x39\x1c\xaa\x51\xc5\x0e\xc1\x33\xa2\xd5\x6f\x56\xf5\xb8\xd4\x91\x3e\xa3\xe4\x8e\x31\x35\x91\xab\xc6\xc0\x61\xbf\xb7\xe5\x6c\xe1\x46\x2c\x17\x34\x5d\x58\xab\xeb\x39\x7c\x60\x76\xb0\x00\x39\x94\xd4\x5f\x47\x2e\x0e\x8d\xf4\x6a\x6c\xb6\x8d\x14\xd4\x82\x21\x09\xc8\x57\xe2\x6e\xfd\x30\x96\x9a\xcd\x0a\xa8\xf9\x3b\x87\x1b\x5c\x8f\x84\x23\x53\x2f\x1c\xbb\x1c\xf6\x14\x6c\x54\xe7\xc2\x7a\xd4\x0c\x74\xed\x41\x97\xd5\xbf\x01\x00\x00\xff\xff\xd0\xf2\x8a\xf4\xb3\x16\x00\x00")

func mapping_static_js_mapping_analysis_tokenfilter_js_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_js_mapping_analysis_tokenfilter_js,
		"mapping_static/js/mapping/analysis-tokenfilter.js",
	)
}

func mapping_static_js_mapping_analysis_tokenfilter_js() (*asset, error) {
	bytes, err := mapping_static_js_mapping_analysis_tokenfilter_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/js/mapping/analysis-tokenfilter.js", size: 5811, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_js_mapping_analysis_tokenizer_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x57\xcd\x6e\xe3\x36\x10\xbe\xef\x53\x30\xc2\x62\x2d\x63\x05\x09\xbd\xd6\xd8\xd3\xb6\x87\x1e\xd2\x93\x6f\x86\xb1\xe0\x4a\x63\x8b\x88\x44\xa9\x24\x15\xc7\x0d\xfc\xee\x1d\x52\x7f\xa4\x4c\xc9\x4e\x82\x62\x7d\x48\x24\xcd\xcc\x37\xff\xc3\xe1\x33\x15\x64\x5b\x3d\x01\x67\xff\x82\x78\xac\x32\x5a\x7c\x57\xa2\x20\xdf\xc8\xa1\xe1\xa9\x62\x15\x27\xe1\x67\x99\x56\x35\x44\xe4\x73\xa9\xc9\x7f\x71\xa9\x28\x4f\xf5\x7b\xae\x54\x1d\x11\x4e\x4b\x7c\x79\xa6\x45\x83\xff\x4a\x5a\xd7\x8c\x1f\xd7\xe4\xf5\x13\xc1\x5f\x2b\x1a\x57\x82\x1d\xff\x46\x36\x84\xd5\xdc\x1b\x9b\xc6\x67\xbe\x83\x10\x95\x78\x04\x29\xe9\x51\xd3\x83\xc0\xa1\x1e\x2a\x51\xd6\x54\xe5\xd7\x94\xce\x02\x24\x74\x4f\x9b\x4f\x36\x59\xf5\xbe\x22\xc3\xeb\xa5\x95\x4c\x12\x82\xb4\x33\x61\xbc\x75\x83\x20\x3a\x81\x8c\x29\x94\x36\x0c\xfa\x3d\xd4\x91\x7a\x1a\x78\x7a\x0f\x7d\xd0\xbb\xa7\x3d\xa2\x1b\x36\x7c\x6c\x75\x5c\xfc\x56\xe8\xa8\x48\x64\xde\xed\x5d\x33\x8b\x8a\x66\xdb\x29\x53\x9f\x92\xd0\x51\xae\xb3\x10\xd7\x95\x54\xe1\x2a\xa1\x35\x4b\x7e\xb8\xe0\xab\xa8\xcf\x49\x2c\x9b\x34\xc5\x80\x86\x03\x4e\x46\x15\xb5\xb1\x96\x2c\xd4\xbc\xe3\x57\xb9\x19\x84\x2e\xeb\x78\x78\x36\x49\x73\xf1\x23\x8c\x6d\x06\x33\x5a\x26\x49\xd6\xfc\x36\x70\x17\xba\x5b\xa1\x09\xd7\x2e\x47\xc3\x9f\x78\x75\xe2\x03\xd3\xf6\x5c\xc3\x16\xca\xba\xa0\xca\x94\x52\x82\x15\xac\x58\x9a\xd4\x54\x28\x46\x0b\x99\x50\x4e\x8b\xb3\x64\x32\x19\xfd\x4b\x8e\xc0\x41\xb0\x34\xce\x55\x59\xb8\x15\xa6\x7c\xb8\x3a\x44\xa3\x8b\x81\x80\x23\xbc\xd4\xc1\xef\x77\x2a\x6b\xd9\x5b\x5d\xd1\x88\x02\x2f\x29\xd4\x3a\x92\x77\x03\x0d\x12\x2d\x56\x1f\xbf\x39\xeb\xff\x80\x03\x6d\x0a\x35\x67\xbc\xb7\xe0\xf4\x4f\x80\x6a\x04\x9f\x7c\x9c\x38\x1e\x38\xc4\x8b\x95\xd7\x19\x0f\xdf\xa1\x6d\x10\x97\x28\xbf\xdb\x47\xd7\x1c\x83\xbb\xda\xa4\x86\x33\x5d\x8c\xf3\x96\xf9\xea\xcd\x09\x98\xd3\xab\x4d\x8d\x05\x0b\xdb\x29\x7d\xa1\x4d\x8f\x70\xdd\xa5\x46\x6c\xf5\xce\xee\xec\x75\xba\xdd\xf9\x43\xe9\xcf\xbf\xa0\x45\x7d\x11\x19\xba\x93\x1d\x48\xf8\x30\x75\x20\xd6\xa6\xda\xaa\xb3\xb6\x24\xb5\xa8\xee\xd5\xae\x9e\x46\x95\x1a\x65\xa9\x94\x77\x16\xc0\xfe\x56\xf8\x50\xc3\xdd\x58\xe1\x7a\x5a\x28\x26\x9c\x85\x84\xdb\x4a\x5e\xaf\x8a\xcc\xc7\x68\x62\xa1\x63\x3c\x6a\xed\x0f\x0f\x8b\xdd\x3a\xfa\x16\x07\xd2\xce\x0b\xbf\x5f\x28\xee\xef\x39\xe5\x26\xc9\xde\x0a\xe6\x70\xea\x92\xe2\x05\x7e\x43\x86\xfc\x86\x7d\x34\x57\x7e\x54\x27\x6b\xff\x4b\xb6\xba\xb8\xdc\xf6\xff\x56\x66\x66\x02\xf0\xe1\x7c\xdf\xe3\xfe\xb5\x92\xa5\x43\xf4\xc6\xc4\xa4\x59\xf6\x67\x3f\x98\xed\x6a\x32\x54\xdb\x4b\x1d\xa9\x6e\x0b\x84\x53\xdb\xe9\xb7\xaa\x20\x1e\x47\x7e\x5c\x37\x32\xbf\x92\xdf\x38\xe2\x13\xaa\xb5\x2e\xce\x5a\x2f\xa0\xac\x9e\xc1\xeb\x00\xe3\x19\xbc\x2c\x6d\x7e\xb6\x75\xb2\x2e\x58\x0a\xad\x4c\x44\x7e\xf3\x2f\x33\xa9\x5e\xa5\xdd\x75\xdb\xc1\x77\x56\xee\x38\x63\xb2\x64\x78\x44\xac\x5a\xb1\x95\x1f\xf3\x67\xc3\x8a\x6c\xae\x8b\x71\xd7\x2d\x1b\xa9\x48\x4e\x9f\x81\x50\xb3\x76\x3b\xe9\x78\xb0\xd6\xf2\xfb\x4e\x84\xc0\x6c\xf6\x4c\xe2\x31\xfd\x4f\xc3\x04\x64\xc1\xc6\x73\x7a\xdb\x41\xb7\x8d\x31\xeb\xbf\xb1\x88\x57\x8a\xd0\x42\x00\xcd\xce\xe4\x27\x90\x46\x42\xe6\x6b\x29\x23\xf0\xf0\xed\xea\x6a\xf1\xe5\xcb\xe4\x06\x10\xf7\xfb\x91\xb5\xb5\xee\x2c\x90\xb9\x7e\x9b\xba\x37\x74\x80\xb1\x35\x23\xab\x80\x7c\x75\x2e\x2f\x5f\x49\xb0\x1a\x2c\x87\x17\x26\x95\x7c\x53\x08\x80\xcb\x46\x00\x51\x39\x55\xf8\x07\x03\x89\xe5\xda\x5f\x5e\xf0\x64\x2e\xeb\x8a\x03\x57\x3a\xc2\x78\xa5\x60\x63\x50\x46\xb7\x26\x33\x6b\xc6\x5f\xcf\x00\xd9\xd8\x76\x60\xdb\xea\xeb\x0d\x2d\x0a\x34\x03\x5a\x4f\xb4\x09\x23\x5c\x44\x24\xc3\xc2\x23\x27\x4c\x19\x3b\xe6\x4a\xe7\x49\xc0\x01\x04\xf0\xd4\x70\xe6\x50\x0e\x88\xc3\xa5\x49\x69\xd4\xdb\xb9\x99\xa6\xc3\xf2\x42\x59\xb6\x2f\x65\x57\xed\x7d\x83\x1b\x67\xa3\x7a\x1c\x6e\x85\xae\x92\xa0\x87\xc1\xf5\xd0\xb3\x5f\x8e\xd8\x48\x1f\x5f\xdc\xfd\x71\x54\xb9\x59\xb8\x95\x99\xdc\xe1\xec\xec\x2c\x59\x45\x96\x59\x77\x2e\x7f\x98\x23\x6c\x04\xa6\xba\x42\xe8\xf7\x62\xa6\x26\xc5\x26\xf1\x3c\x9c\x94\xc4\x48\xb8\xbf\x24\x8c\x1f\xee\x00\x4a\x8b\x4a\x42\xd8\x02\xad\x3f\xb8\x5f\xa2\x37\x15\x16\x8c\x38\x31\x3c\x94\x70\xb2\xe1\xc9\x72\x6e\xa5\xdf\xb5\x86\xf6\x93\xf0\xb2\xf9\x2f\x00\x00\xff\xff\x73\xa6\xcd\xeb\xd3\x10\x00\x00")

func mapping_static_js_mapping_analysis_tokenizer_js_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_js_mapping_analysis_tokenizer_js,
		"mapping_static/js/mapping/analysis-tokenizer.js",
	)
}

func mapping_static_js_mapping_analysis_tokenizer_js() (*asset, error) {
	bytes, err := mapping_static_js_mapping_analysis_tokenizer_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/js/mapping/analysis-tokenizer.js", size: 4307, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_js_mapping_analysis_wordlist_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x54\x4f\x6f\xdb\x3e\x0c\xbd\xf7\x53\xb0\x46\xd1\x38\x68\x7e\xee\x6f\xd7\x19\x3d\xed\x34\x60\xdd\xb5\x87\x20\x18\x14\x8b\x49\xb4\xc9\x92\x27\xca\x49\x83\x20\xdf\x7d\x94\x12\xb7\x96\xf3\x07\xe9\xc1\x6e\xf4\xc8\xe7\xc7\x47\x52\x6b\xe1\xe0\xcd\x3a\xf9\x43\x91\x7f\xb5\x52\xe8\x6f\xde\x69\x78\x81\x45\x6b\x2a\xaf\xac\x81\xfc\x81\x2a\xdb\xe0\x04\x1e\xea\x00\x7f\x37\xe4\x85\xa9\xf8\xb7\x11\x35\x3f\x37\x9c\x4b\x13\xa8\x45\xd3\x28\xb3\x1c\xc3\xee\x0e\xf8\xef\x90\x53\x84\x10\xe6\x0a\xaf\xb2\x7f\x6e\x9d\x5a\xfe\xbc\x80\xa1\x73\xd6\xbd\x22\x91\x58\x06\x3c\xcb\x12\xd4\xe0\x26\xa8\x3d\x05\xa2\x0e\x3e\x8e\xef\x82\xb4\xaa\x30\xff\x7f\x5c\xc2\xf3\x33\x54\x0e\x85\x47\xe0\xb0\x6d\x3f\x83\x50\x63\xe5\x51\xbe\x1d\x33\xa7\xb3\x84\xf0\x58\x11\x03\xc7\xff\xca\xbb\x3e\x5c\x05\x13\x52\xa3\xba\xe2\x63\x54\x62\x56\x21\x15\xd5\x8a\x28\x1f\x1d\xd2\x46\xe3\xc3\xa7\xf6\x29\xa7\x90\xf2\x58\x5c\x47\x9a\x70\xaa\x45\xd7\x8c\xce\x86\x3e\x3a\xf4\xa2\x68\x5a\x5a\x0d\xe3\xcb\x73\xe1\xa7\x9e\x46\x6d\xe7\x14\x3a\xac\xed\x1a\xaf\x89\x64\xbf\xc9\x3a\x0f\x7e\x85\xd0\x39\x1c\x9b\x02\xca\x48\x7c\x47\xe2\xb7\xb7\x20\x91\x2a\x34\x32\x18\xcc\x18\xba\x34\x1f\x36\xdc\x2e\x61\x38\x4a\x23\x77\x4e\x79\xac\x09\x36\xca\xaf\x6c\xeb\x61\x25\xd6\x21\x8d\x49\x84\xfc\xdd\x92\xef\x88\xef\x06\x65\x25\xfd\x2d\x82\xa8\xfc\x43\xb1\x98\xcc\xc7\x3b\x70\xe8\x5b\x67\x60\x0e\xff\x81\x28\x61\xdf\x73\x67\x61\x1d\xe4\x61\x35\x22\x37\x3f\xcf\x92\x5e\xb5\x9f\x9a\x38\x83\xe7\xf2\xa6\x91\x75\x36\x81\x2f\xe3\xa1\xdf\x37\xcc\xe7\xa0\x25\xf3\x56\xe9\x6b\xdd\xa8\x83\x45\xec\x19\x82\x88\xcb\x96\x8c\xd3\x7d\x6f\x51\x2f\x54\x33\xdc\xc7\xb8\xb7\x8a\xd8\xbc\xbf\xad\x72\x28\xb3\x74\xa6\x0e\x9e\xf6\xcb\xea\x8b\x89\x17\x42\x54\x64\xac\x07\xa1\x79\x33\xe5\x16\xe6\x08\x2d\xa1\x3c\x3b\xe8\x21\xe1\xfe\xe5\xe4\xe2\x78\x7c\x1c\xec\x69\x21\x8c\xd0\x5b\x52\x54\x78\xfb\x07\xcd\x2f\x3e\xa6\x69\x8f\x64\x76\x63\x79\x71\xb6\xb5\x0a\x0a\x39\x4b\xc2\x28\x83\xa7\xe4\x3a\x7b\x82\x6c\xf4\xa1\x1c\xdf\x39\x92\x6e\xb7\xc0\x21\xb5\xda\xf3\x77\x76\xfb\x72\x70\x98\x88\x0d\x11\x09\x67\xe6\xb7\x0d\x66\x5f\x21\xab\xd8\x3c\x5b\x67\x93\x01\x1a\x6a\x26\xc6\xfb\x23\xf8\x29\xa0\xbc\x74\x2f\x55\xda\x12\xe6\x07\x01\x9f\x77\xd2\xbe\xfc\x17\x00\x00\xff\xff\xee\x8f\xed\x98\x16\x06\x00\x00")

func mapping_static_js_mapping_analysis_wordlist_js_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_js_mapping_analysis_wordlist_js,
		"mapping_static/js/mapping/analysis-wordlist.js",
	)
}

func mapping_static_js_mapping_analysis_wordlist_js() (*asset, error) {
	bytes, err := mapping_static_js_mapping_analysis_wordlist_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/js/mapping/analysis-wordlist.js", size: 1558, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_js_mapping_analysis_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5a\x5f\x6f\xdb\x36\x10\x7f\x5e\x3e\x05\x2b\x14\xb5\xdd\x04\xce\x7b\x82\x60\x28\xda\x0d\x28\xb6\xee\x29\xc5\x1e\x8c\x20\xa0\x25\xba\x26\x2a\x8b\x86\x48\x25\x75\xd7\x7c\xf7\xdd\x91\x12\x45\x52\x7f\x4c\xa7\xed\xd6\x26\xd1\xc3\x16\x8b\xbc\xe3\xdd\xef\x8e\xc7\xdf\x51\x3d\x3d\x25\xa9\x28\x54\x29\xf2\x9c\x95\xa4\x64\x72\x2b\x0a\xc9\x97\x39\x23\x2b\x51\x92\x65\xc5\xf3\x8c\x17\x1f\x08\x25\x69\x25\x95\xd8\x10\x5a\xd0\x7c\x27\xb9\x04\xa9\x0d\x4c\x65\x85\x92\x47\x47\xab\xaa\x48\x15\x17\x05\x79\x55\x8f\xbe\x56\x65\x3e\x7d\x2e\x53\xb1\x65\x27\xe4\xf9\x5a\xa9\x2d\xfc\x2f\x17\x1f\xe0\xbf\x1b\x91\xd1\x7c\x46\xfe\x39\x22\xf0\xc0\xea\x5a\xe1\x67\x56\x82\x1a\x7c\x63\x84\xe6\x05\xbb\x7d\x55\x0f\x90\x0b\xd2\xe8\x9f\x36\x72\xf8\x94\x4c\x55\x65\xd1\x08\xb0\x8c\xab\x46\x62\x9a\x24\x27\xce\x44\x7c\x12\xb5\xdb\xb2\xe4\x8c\x24\xc6\x8d\xe4\xc4\x1f\x4d\xd7\xb4\xbc\x5e\xf1\x5c\x81\x1d\x30\x6b\x71\x15\x8c\x2b\xf1\x91\x15\x1c\x54\xa3\x8a\xaa\xe0\xa9\xc8\x58\xa8\x43\xcf\xf1\x94\xd8\xf1\xbb\xd9\xb9\xfe\xfb\xee\xdc\x73\x32\x63\x39\x53\xac\xcf\xcf\x82\x6e\x98\xeb\x6b\x25\x59\x06\xe3\xb5\x1c\x97\x8d\xcc\x7b\x78\x6f\x26\x9f\xdb\xb9\x7c\x45\xa6\x38\x7f\x16\x40\x40\x21\xc0\x6a\x9a\x5c\xae\x21\x78\x0d\xe8\x24\xa5\x45\x21\x14\x59\x32\x62\x8c\xc9\x92\x63\x4f\xa8\xf6\x0d\x26\xa4\x14\x94\x12\xae\x08\x88\x2f\x19\xe6\x84\x36\x6a\xb9\x23\x6a\xcd\x60\xc6\xb1\xf9\x7d\x4c\x92\x79\xe2\x58\xd3\x46\xaa\x7d\x77\xe7\xd9\x0a\xe9\xb7\xe2\xe5\x66\x9a\xbc\x2a\x19\xd9\x89\x8a\xc8\xaa\xfe\xe3\x96\x16\x8a\x28\x51\x9b\x46\x26\xb8\x08\x3a\x8b\x8b\x4c\x7e\x4d\x66\xa1\x87\xf5\xbc\x06\xa5\x22\x63\x9f\xde\xd1\xed\x16\x6c\x9d\x37\x69\x3b\xb7\xe9\xb6\x40\x4d\x57\xa1\x51\x41\x84\x7c\xa4\xc7\x22\xe4\x66\x32\xa1\xe0\x80\x46\x83\x17\x64\x63\x2c\x90\x64\x0a\x3f\x6e\x68\xc9\x45\x25\xc9\x36\xa7\x29\x93\xb3\x23\x57\x1c\x40\x90\x8a\xa4\x6b\x96\x7e\x24\xda\x76\x92\xb3\x1b\x96\x83\x57\x2b\x5a\xe5\xca\xaa\xf7\xc0\xeb\xf3\xb5\x16\xb8\xb6\x41\xbe\xb8\x20\xa1\xb9\x6d\x58\x48\x62\x16\xab\xed\xec\x2c\x97\xb8\x10\xb9\xf6\x42\xd8\x8b\xda\x5c\xcc\x80\x46\x2e\x13\x69\xb5\x81\xb8\xd5\xfa\xac\x04\xb8\x4e\xb2\x8d\x93\xc4\x7d\x26\xd7\x42\xe7\x51\x89\xff\xb6\x78\x23\xd2\x5a\x83\x8e\xc7\x09\x2c\x70\x42\x92\x24\x62\x33\x34\xbe\x7b\x56\xb3\xd6\x6c\x9b\xd0\xb1\xde\x87\xf2\x58\x3d\x19\x4d\xd7\x04\x0b\x8f\x15\xc4\xb7\x53\x8d\x84\x48\x2f\x61\x00\x13\xa4\x0f\x0f\x14\x92\x9d\xf4\xb6\xde\x0e\xa0\xa8\xa5\x16\xb5\xea\x2b\x7f\x0f\x1e\x0a\xa4\x7d\x11\x00\x3a\x06\xaa\x07\x6c\x08\x08\x1a\x67\xb6\x70\xe3\x3b\xee\x62\x92\xf8\xaa\xef\xfa\xe0\xae\x75\x16\x55\x9e\xfb\x75\x14\x37\x1d\x8c\xa6\x55\x29\xf9\x0d\x23\x6b\x96\x6f\xeb\xfd\xb1\xd7\xcf\x70\x2f\xfb\x2e\x6f\xa9\x5a\x07\xbb\xdb\xdd\x9e\x5e\xc4\x23\x76\x69\xab\x3a\x7a\x73\xa2\x58\x68\xc5\x50\xf2\x5a\x5d\x54\xe9\xbc\x45\xb9\x00\x56\xc2\x72\xa8\xde\xf1\xaa\x62\xc2\x02\xa0\x14\xe2\xb6\x86\x64\xc5\x59\x9e\x49\xb4\x40\xe1\x01\xa3\x41\xe9\xa6\xbd\x9e\xf5\x56\xd7\x1b\xc8\x7c\x07\x16\x23\x1e\x3a\xab\xdf\x42\xa4\x3a\x13\x17\xad\xa2\xab\x6e\x6e\xea\xc1\xf9\x3e\x84\xfd\xd9\x43\x33\x5c\x90\xc0\x64\x8c\xbc\xb1\x0a\x05\x32\x0d\x77\xab\xe0\xbc\x23\x7e\x37\x88\xb8\xa7\x0c\x60\xc3\xa0\x0d\x45\x6f\x2f\xfa\xba\xd2\x14\x4c\xc2\x01\x4e\xb6\x25\x64\x7e\xa9\x76\x5d\xf4\x9b\x91\xbf\xf0\x0c\xf5\xf1\xaf\x87\x78\xb7\xea\xc8\x6a\x09\xbb\xc6\x0f\x42\x3b\x7b\xe1\xea\xec\x09\xc5\x9e\x14\x8e\x2d\x47\xc6\x08\xb3\x2f\x8f\x81\x60\x1c\xbb\xcb\xce\x0e\xcb\xf5\x83\xd7\x1c\x59\xea\xa0\x6a\xd5\xc3\x54\xbb\x55\xe8\x86\xe6\x95\x97\x88\x18\x38\xcd\x99\xdf\x16\x52\xd1\x22\x65\x58\xc5\xf5\x8b\x39\x68\x2b\xa6\xae\x9f\xb4\xe0\x1b\x8a\xca\xce\x9a\xc5\xec\x1b\xf9\x5b\x41\x81\xd5\x67\x2e\x69\x55\x6c\x03\x44\x44\xb1\xf7\x65\x7e\x66\xa9\x04\x2c\xa2\x78\x7a\xbd\x2d\xd9\x8a\x7f\x22\x5f\xbe\x90\xc9\xa9\x79\x35\x99\x91\x2e\x37\x9c\x9c\x6e\x29\x24\x02\xcd\xe5\x69\x43\xb1\x4e\x9b\x8d\x37\x5f\xab\x4d\x3e\x71\x17\x6c\x3b\x8d\x33\x32\x69\x30\x78\x87\xbe\x60\xc3\xe0\x4d\x85\x4e\x44\xe4\x37\xec\x2c\x88\x23\x82\x74\xd6\xdf\x0f\xf8\xe8\x77\x76\xe3\x9d\x4f\xd7\x35\xce\xa3\x9a\xac\x2e\x3d\x75\x54\x59\x7d\xc6\xc5\xa9\xeb\x39\xb9\x87\xb2\xca\xcb\xb0\xd9\x79\x9b\x63\x5e\x42\xcc\x01\x2b\xa8\xdd\x73\xa4\x24\x53\x6b\x81\x79\x19\xda\x81\x27\x66\x96\x99\x1a\x6d\x66\x20\xc1\xc6\x42\x14\xf2\x35\x7c\x6c\xe5\x30\x53\xff\x60\x3b\x2c\x1b\xfd\x9a\xf1\xc1\x1d\xaf\x09\xfa\x33\xa8\xb9\x49\x42\x5e\xbc\x70\x24\x9f\x0d\x97\xe1\xda\xb2\x92\x6d\x04\x1c\xe3\x68\x8d\xa8\x2b\x6c\xef\xd4\xaf\xe2\xf9\x7d\x28\x9b\x27\x52\x9f\xf5\xe8\x0a\x76\xa2\xf9\xe1\xbc\xeb\x2e\xa4\x1d\xcb\x05\x85\xca\x0c\x7d\x01\x10\x06\x7a\x43\x79\x8e\x9b\xd1\xe9\x7d\x07\x6c\x79\x6e\x44\xe6\x28\xde\xec\x17\xac\x43\x72\x3a\x5c\x89\x4e\x86\xb2\x10\x1b\x70\xf0\x6e\x25\xa6\x13\xbd\xe7\x48\xc6\xe5\x86\x4b\x24\x86\x54\xc1\x86\xc4\xee\x8a\xdd\x92\x37\x50\x11\xa6\x33\x47\x7f\xd8\xbd\x82\x43\xb7\xa2\xcc\x48\xce\xa5\xea\x74\xed\x7f\xc3\xc8\x9f\x30\x10\xdf\xb5\x37\x12\xa6\x6b\xd7\x5d\xb4\x3c\x5b\x5c\x8d\xf6\xcc\x7d\xab\xec\xeb\x99\x1b\x99\xfb\xf6\xcc\xd6\xe7\xc7\xd7\x34\x9b\xab\x0d\xa8\x10\xb1\x5d\xb3\x8b\xf5\x9e\xae\xb9\x4d\x25\xdd\x36\x8b\x22\xdf\xb5\x20\xe1\xba\xa4\xbe\x52\xe9\xf2\x19\x3d\xfc\xbb\x1e\x6d\x28\x4d\x84\x1b\xb5\xba\x10\x07\x47\xd9\x40\x7b\xd5\xaf\x67\x11\x58\x11\x54\x80\xae\x87\x6c\xb3\x64\x99\xb9\x1b\xa0\xfa\x42\x80\xa9\x1d\x11\x2b\xd8\x8d\xab\x15\xd3\x05\xa2\x25\x98\xb2\x43\xa8\x9c\xd5\xe6\x19\x4f\xd5\xb5\x8d\x4d\xc3\x73\xe1\xcc\xee\x64\xa3\x2b\x85\xe7\x75\x9a\x33\x79\xb8\xe4\x47\xb6\x43\x5f\xee\x21\x29\x95\xd8\x76\xa5\xc6\x7a\x1b\x37\xf4\x35\xd7\xd6\xa9\x1c\xc6\x1c\xb3\x7a\xa4\x59\x09\xd4\xfa\xa4\xec\x97\x9e\x2a\xf4\x20\x19\x19\x46\x0d\x13\x70\x0f\x23\x6b\x30\xf8\x7f\x18\x99\x4e\xad\x03\x18\x99\xd9\x86\xf2\x89\x98\xfd\x5c\xc4\x6c\xf8\x2c\xe9\x83\xd9\x3c\xb1\x0a\x0f\xa1\x66\xff\x31\x63\xc2\x2f\x0c\x34\xc5\x62\xd6\x1c\x67\x01\x71\x7a\x0d\x13\xec\xf1\x13\x49\x9d\x5a\x19\x43\x9e\x46\x39\x53\xff\x02\xfb\x58\x53\x2b\x75\x5f\xde\x14\x7a\xfe\xf8\xe8\x93\xfb\x75\x29\x92\x40\xf9\xb0\xef\xa1\x50\x9d\xdc\x42\x88\x0d\x93\x5a\x32\x0b\x59\xb7\xd9\xb0\x55\x84\x3a\xad\xc5\x5e\x16\x65\xf5\x74\x82\xde\x5e\x6a\x44\xb6\x52\xee\xba\xc1\xf6\xb4\xb6\xa5\x16\x09\x7b\x6f\x68\x2f\x18\x5c\x60\xfb\xca\x57\x2b\xab\x3d\xbb\xe8\x97\x5c\x04\x4b\xf4\x94\x24\x9d\x33\x81\xb2\xf1\xaa\xd9\xf0\x18\x0b\x8a\xc3\x61\x3c\xb8\x7b\x08\x8c\x9f\xaf\xfe\xaf\x3d\x94\xc6\x49\x22\xbf\x40\x3c\x48\x5e\x83\x21\x31\x41\xdc\xc3\x6c\x5a\x1c\x9e\x6e\x9b\x9e\x48\x0d\xf9\xe6\xa4\x66\xac\xc2\xf7\x01\x6d\x9e\x78\x95\x3f\x30\xb1\xb1\xff\x34\xa2\xc3\x68\x2e\x9b\x91\x78\x42\x63\x45\x22\xf8\x4c\xaf\xfa\x7d\x74\xc6\x0a\xdd\x97\xcd\x58\x77\x1f\x1f\x8d\x69\x23\x1d\x49\x62\x3c\xb0\xf7\x70\x98\x56\xb9\x26\x2f\x0e\x6f\x79\x29\x00\xa5\xf2\xa5\x9b\x68\x8d\x9c\x7f\x13\xc4\x63\x19\x4c\xab\xa9\xf7\x12\x88\x47\x70\x18\x07\x0b\x6f\xed\x9e\x4f\x60\x76\x7c\xee\x68\x8f\xbc\x00\xe1\x9f\x7b\x6e\x3f\xf8\x08\x75\x18\xfa\x54\x38\x0c\xef\xcf\x45\x0b\x11\x50\x4b\xe2\x0e\xc2\xf3\x3e\x44\xec\xbe\xb4\x6b\xb0\x34\x3d\x08\xd6\xd5\x26\xf4\x38\xe9\xb2\x28\x3c\x71\xae\x27\xce\x45\xbe\xcf\x45\x52\xef\x71\xd4\x07\xb3\x79\x62\x15\xfe\xe8\x7c\x6b\xe8\x12\xe9\xd2\xfb\x88\x71\x08\xe9\x8a\xbe\x46\x1a\x58\x22\x8a\x78\x7d\xdd\x45\x92\xf7\x49\xe0\x71\xb2\xaf\x03\x6f\x91\x02\xd0\x63\x28\xd8\x43\xbc\x42\x72\xbe\x19\x75\xef\x90\x46\x3f\x0a\xe2\x13\x7e\x71\xba\x18\x90\x5d\x84\xcb\x0c\xdc\x23\x75\xf4\xfd\x0c\x17\x49\x23\xbb\xfe\xe1\x70\x9a\xa8\xab\x24\x07\x89\x27\x5e\xf3\xc4\x6b\xc8\x77\xfa\x40\xf6\x6d\x2f\x93\x7c\x9d\x3f\x20\xbb\xb9\x3b\xfa\x37\x00\x00\xff\xff\x2b\x20\xda\xb7\x89\x34\x00\x00")

func mapping_static_js_mapping_analysis_js_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_js_mapping_analysis_js,
		"mapping_static/js/mapping/analysis.js",
	)
}

func mapping_static_js_mapping_analysis_js() (*asset, error) {
	bytes, err := mapping_static_js_mapping_analysis_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/js/mapping/analysis.js", size: 13449, mode: os.FileMode(420), modTime: time.Unix(1445121348, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_js_mapping_index_mapping_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x94\xc1\x6e\xdb\x30\x0c\x86\xcf\xe9\x53\x08\x41\x81\x38\x80\xe1\x3e\x40\xd0\x43\xd7\x5d\x3a\x20\xdd\x80\xf5\x16\x04\x86\x6a\xcb\xa9\x30\xc5\x32\x24\x26\xa8\xd7\xe4\xdd\x47\x2b\x96\x27\xd5\xb2\xe3\xc3\xb0\x1c\x92\x58\x24\x3f\x92\xbf\x29\x16\x87\x32\x03\x2e\x4b\xc2\x4b\x0e\x5f\x04\x3b\xb2\xa7\x32\x67\xef\x6b\x5a\x55\xbc\xdc\x3d\xca\x12\x94\x14\x82\xa9\xe8\x86\xe0\xe7\x56\x67\xb2\x62\x31\xb9\x7d\x03\xa8\xf0\x47\xc8\x1d\x7e\x1f\xf8\xeb\x5a\xe6\x54\xc4\xc6\x87\x96\x54\xd4\xbf\x99\x7a\xa6\x7b\xa6\x63\x92\x53\x60\x2f\x7c\xcf\x7e\x50\xa5\xbb\xc3\xd7\x1a\xd8\x83\x52\xb4\xc6\x04\x47\xa6\xc0\x1a\x0c\x80\x3b\x05\x3c\x95\x4b\xf2\xe1\xa4\x4e\x34\x50\xe0\x59\x5a\x29\x56\xf0\x77\x72\x1f\x3e\x3e\x9d\xc8\x62\x7f\x01\xa4\x17\xcb\x62\x75\xe3\x52\xbc\x1a\x91\xe2\x3d\xaf\x5c\xcf\x40\xf9\xe8\x1f\x38\xf5\xa2\x06\xfa\xc3\xc8\x01\x0b\x96\x37\x3b\x52\xe5\xf5\x4e\xee\x0d\xd2\xc1\xfa\x56\xf2\xed\xe7\xf7\xe7\xa4\x6a\x4a\x88\xcc\x5f\x0d\x0a\x0d\xbc\xa8\xa3\x4f\x12\x2e\xdb\xee\xdd\xe3\x04\xea\xaa\xa9\xa8\xcb\x11\x30\xa2\x8e\x1f\xe7\x55\x3f\xd4\xc8\xa5\xf9\x60\x74\x67\x6f\x01\xb3\xa0\xb5\x7b\x0b\x57\x39\x8e\xe7\x38\x31\x7b\xa3\x2a\x2d\xb8\x80\x29\x50\xcf\x79\x9c\x0b\xf2\x17\x2b\xf9\xa4\x52\x1d\xd7\xd3\xe9\x1a\x72\x72\xad\xbe\xf7\x84\x62\x53\x9c\xff\xa9\x58\xe3\xda\x32\x2f\x2f\xbb\x20\xde\x08\x6d\xe6\x39\x2b\xe8\x41\x40\xda\xde\xaa\xf9\xd6\x5e\xcb\xf0\xe4\x6c\xe6\xf3\x2d\x0e\xe8\x15\xc6\x65\xb2\xce\x76\x36\xdb\xfd\xf3\x82\x80\xfe\xfa\xb1\x9b\xa7\x9f\xcb\x0e\xf7\x43\xdb\xd4\x23\x28\x11\x8d\x2f\x2a\x0c\xc1\xac\xdd\xea\x1b\xd8\x78\x1e\xa3\xe9\x77\x36\xb0\x3d\x36\xdb\xe6\xfa\xb6\x46\x21\x69\xfe\xf0\xc9\xc1\x66\x8a\x5c\xd5\x0c\x36\xa9\xa4\x86\x68\x71\x47\x2b\x7e\x97\x7a\xdc\x45\x6c\x6f\x7d\xab\xd7\x32\xe9\x42\xf5\x21\xcb\x98\xd6\x51\xc7\xc5\x7d\x44\x5d\xf6\xc8\xaa\x6b\x5c\xff\xde\xa7\x55\x17\x72\x76\xf8\x4c\x29\xa9\x7c\x7a\x4c\x32\x99\x33\xa3\xc2\xcc\xb6\x6a\xdc\xd6\x58\x08\xdd\xb1\x96\xec\xf2\x70\x40\xcf\x63\xc2\x44\x4b\xc7\xda\x6c\x54\xe8\xed\xd9\x9e\xb2\x5f\x83\x6e\x13\xf5\x0d\xe4\xf8\x57\x2a\x87\xcb\x37\x5a\x5b\x53\x6a\x36\xf5\x7f\x97\x3c\xa0\x58\x64\xe6\xff\x4f\x00\x00\x00\xff\xff\x22\x68\x24\xff\xfa\x07\x00\x00")

func mapping_static_js_mapping_index_mapping_js_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_js_mapping_index_mapping_js,
		"mapping_static/js/mapping/index-mapping.js",
	)
}

func mapping_static_js_mapping_index_mapping_js() (*asset, error) {
	bytes, err := mapping_static_js_mapping_index_mapping_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/js/mapping/index-mapping.js", size: 2042, mode: os.FileMode(420), modTime: time.Unix(1445121572, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_js_mapping_type_mapping_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x59\xdd\x8f\x1b\xb7\x11\x7f\xbf\xbf\x82\x59\x18\xd1\x0a\xa7\xdb\xb8\xaf\x52\xae\x85\xe3\x38\x80\x0b\xb4\x31\x1c\x37\x2f\xc2\x41\xa0\x76\x29\x1f\xab\xfd\x50\xb9\xdc\xab\xd5\xe4\xfe\xf7\xce\xf0\x6b\x49\x2e\x57\x96\x0d\x98\x30\xec\x15\x67\x38\x1c\xce\xc7\x6f\x86\xf4\x61\x68\x4b\xc9\xbb\x96\xf0\x96\xcb\x9f\x6a\xf6\xc4\x3e\x9c\x4f\xec\x1f\xf4\x74\xe2\xed\xc7\xd7\x5d\x2b\x45\x57\xd7\x4c\xe4\x2f\xfa\xb2\x3b\xb1\x15\x91\x23\xf5\x6d\xbb\x24\x7f\xdc\x10\x18\x8d\x9e\xe8\xc9\x3d\xd9\xa3\x08\x58\xf7\xc4\x84\xfc\x45\x74\x8d\x27\x2d\x0f\xd7\xde\xa8\xa5\x5a\x6e\x71\xe0\xac\xae\x90\x17\x65\x6c\x17\x92\x7d\x92\x8b\x15\x59\xb4\x43\xb3\x67\x02\xbf\x2a\x2a\x99\xe4\x0d\x53\xdf\xbc\xa7\xb0\x4f\xb5\x78\xd8\x68\x21\x4f\x54\x90\x23\x6f\xab\x57\x52\x0a\x14\xa0\xb5\xc2\x91\x29\xc1\xd9\xda\x9b\xc2\xb1\x38\x09\xd8\x55\xc8\xf3\x62\x4d\xda\xa1\xae\x57\x21\xb5\xa5\xb0\xd1\x1a\xc4\xd6\x1c\xf7\xfd\x4d\x0a\x50\x39\xe2\xc1\xc3\xa4\x57\xd3\x96\xd6\xe7\xff\x81\xda\x49\x6a\x2f\x3b\x31\xb3\x10\x4e\xc0\x3e\xcd\x91\xca\x7a\xa8\xd8\x4e\x32\xd1\xec\x9e\x58\x09\x42\xfa\xcb\x9c\xbc\xdd\xd1\xba\x4e\xf3\xe0\xa1\x76\x87\x4e\x34\x54\x4e\x18\x9e\xc7\xcf\xcc\xf8\x75\x6a\xbe\x6b\x0c\xc4\x5a\xed\xa4\xb4\x06\x67\x10\xc1\xcb\x19\x22\x3b\xd0\xa1\x96\xbb\xc8\x90\xa3\x8a\xea\xeb\xd9\x38\xdf\x39\x7e\xbb\x30\xfa\x62\x1c\x2d\x1e\x20\x0e\xa6\x24\x17\x32\x3f\xfc\x40\xee\xbe\x6e\x04\x71\xeb\x45\xbe\xfd\xdc\x04\x0c\xac\xe2\x12\x66\x81\x8e\x47\x08\x69\xa7\xee\x34\x9c\xe6\x29\x1f\xba\x8f\x1f\x6b\x06\x74\x9b\xa3\x79\xb7\xff\xf7\xd2\x73\x45\x24\x26\x0f\x7f\xdf\x13\xc5\xfe\x37\x25\x9e\xac\xf1\xd7\x46\x1b\x2e\xd8\x4a\xb0\xa6\x7b\x62\x98\xaa\xef\xa8\x60\xad\x8c\xf6\x5b\x11\xc5\x96\xd8\x16\x4f\xa6\x8c\xfb\x73\xd7\x32\xcd\x7a\xa0\x75\xcf\x96\x1b\x34\xee\x6b\xda\x96\xac\x26\xb4\x3d\x13\x64\xec\x8b\x1b\xb7\xde\xdf\x37\x5f\xa6\x74\xa2\x55\xf5\xfa\x91\xd7\xd5\x2f\x98\xbc\xbe\x42\xc6\xc6\xbe\x36\xfc\xe0\x0e\x6e\x6c\xbd\x8c\xa2\x55\x30\x39\x88\x76\xe3\x85\x8f\xfb\x44\xe0\x38\x04\x80\x81\x63\x87\x71\xb3\x26\x0b\x85\x1d\x8b\x30\x38\x2d\x70\xac\x49\x96\x85\x14\xcc\x89\xe9\x2c\xc2\x04\xcc\x22\xa0\x45\x14\x1b\xdd\xd3\x35\x0a\x22\xd6\x44\x8a\x81\x85\x04\x05\x10\x69\xc2\x14\x1e\x2e\xf1\x69\x70\x48\x71\x78\xd0\x30\x41\x86\xd1\x84\x87\x62\x37\x06\xb6\xf3\x0e\x18\x9e\x68\xb7\xbe\x81\xba\x71\xb6\xde\xd2\xe0\xde\x43\x78\x40\x68\x78\x42\x42\x72\x31\xb4\xfd\x23\x3f\xc8\x1c\xb8\x6e\x52\xb1\x66\x36\xdb\xcc\x85\xbf\xce\x22\xa5\x68\x32\x98\x4c\xe5\xf9\x96\xe1\x84\x8b\x1b\xbb\x8d\xd6\x28\x5e\xed\xc8\x46\xbd\xd9\xb0\x6c\xe6\xc2\xd2\xdb\x40\x8b\x80\x14\x0f\x90\x0f\x72\xdd\xc1\xdd\x35\x21\x6a\x80\x3a\x19\x0d\x1a\xa6\x53\x24\xed\xb5\x35\xd9\x3e\xac\x52\x07\x54\x94\x54\xe8\x34\x5f\x14\x3a\x56\xda\x8a\x34\xe9\xe0\xb1\x0c\x2e\x7c\x9a\x8b\xe1\xd3\x7c\x71\xf8\x38\x98\xbb\x00\xc4\xe8\x2f\x6a\x78\xc6\x9a\x03\x4c\x85\xf2\xd9\x83\x97\x38\x9d\x20\xb9\x65\x87\x74\xd4\xcb\xe2\x20\x81\x95\xdb\x6c\x97\x91\x5b\xcd\x76\x4b\xb2\xdd\x9b\xf7\xef\xb3\x87\x40\xcd\x0b\xcc\xef\xde\xbf\xf9\x5d\x71\x23\x0d\x67\x1f\x92\x61\xa6\x14\x1c\x6d\x83\x3e\x9e\x98\x67\x24\xcf\xd4\x8f\xa0\x0c\x4c\x8a\x47\x77\x8c\xed\xa4\x7a\x06\xb7\xdb\x37\x33\xa1\x65\xf8\x5d\xb7\x28\xb0\xe6\x5e\x33\x5a\x7b\x84\xb8\x08\x89\x1b\xaa\xea\x53\x02\x39\x29\x26\xbd\xa1\x3e\x57\xc0\xac\x8d\x80\x53\x4b\xf2\xfd\xf7\x9a\x67\x33\x59\xfe\x1c\xcc\x3c\x13\x06\x55\x14\xf2\xc1\x55\x51\x48\xce\x62\xb2\xc8\xb9\xd6\xb8\x39\x19\x02\xe1\x5e\xcf\x73\x98\xf5\x9d\x52\xec\x0b\x80\xee\x3a\x1f\x54\xac\x66\x92\xcd\x46\xf3\xe6\x4a\xe6\xf8\x28\xb1\xf2\xdd\x11\x6d\x8b\x85\xb6\x3b\xe4\x7e\x4c\x2f\x11\x23\x17\x36\x20\x17\x89\x2c\x73\xac\xb9\xee\x5a\xde\xb6\x4f\xdd\x91\x11\x1b\xf4\xa5\x36\x3f\x55\x17\xa4\x12\x2a\xe6\x9e\x96\xc7\x22\xa5\xc8\xa8\xbd\x13\x79\x21\x95\xe6\xb0\xa6\x3b\xe1\x4e\xe1\x0d\x86\x96\x25\x3b\x41\x2d\x76\x79\xd5\x77\x83\x28\xd9\x2b\x35\xbd\x82\x8d\x7b\xe9\x7f\xbf\xc5\x16\x21\x3e\xe9\xe7\x8b\xda\xe8\x6f\xdd\xc4\xc5\x81\x33\xc9\x2d\xad\xc5\xcf\x54\x52\xd0\xd6\x57\xa9\x78\xd1\x74\x60\x0d\x48\x81\x21\x92\x82\xcb\x50\x45\x2c\x52\xb0\x68\xd4\xbc\x78\x01\xd6\x6b\xa0\xf7\x2c\xd0\xe7\x39\x5e\x4f\xe8\x9d\xba\x5f\x2d\xa3\x3c\x35\x2a\xe6\xe3\xee\x1a\x1e\x6e\x33\xbc\xaa\x52\xde\x32\x91\x29\xaf\xdb\x7d\x36\xf1\xa5\x41\xcb\x73\xb7\xde\xf0\x06\xe3\xa7\x6b\xd8\x12\x8c\xd9\xf6\x9d\x76\x1f\x86\x9c\x9b\x2c\x6a\xd6\x7e\x94\x8f\xe4\xc7\x7b\xf2\xf2\x0b\xb0\xdc\x4e\xc0\xb1\xfe\x33\x70\xc1\xaa\x6c\x93\x3a\x6d\xe4\x90\x31\x8b\x0d\x7d\xc4\xed\xf8\x74\x7e\x45\xa5\x42\xac\xa0\xd4\xc3\xa7\xaf\xa1\x4b\x64\x0e\xfa\xbc\xdc\xc0\x3f\x3f\x12\xe0\x34\x07\x82\xdf\xb7\xb7\xa9\x60\x02\x96\x2d\x87\x23\x80\xa5\x27\x22\xed\x40\x31\xfd\xa9\xe6\x25\xcb\xf9\x8a\xfc\x65\x39\x8f\x45\xfa\x6f\x50\x1e\x11\x4f\x3f\x1d\x90\x03\x5c\x48\x08\x25\x2d\xa3\xe2\x4e\xbd\x29\xdc\x1d\x04\x67\x6d\x55\x9f\x89\xf7\xa4\x80\xed\x2a\x85\x7e\x59\x0c\x25\x98\x82\x11\xd9\x11\x8a\x52\xfe\xf5\x76\x64\x0f\x59\x0a\x42\x7e\x3a\x93\x0c\xe5\x66\xe0\xea\x56\xeb\x4f\xfe\xcb\xc1\x7d\x59\x46\x8e\xec\x8c\xeb\x05\x3b\x09\xd6\x03\xa9\x27\xf2\x91\x11\x73\x21\x55\x18\xe3\x3a\x8f\x1b\x67\xe6\x2b\xdf\x3c\xac\x91\x54\x77\x37\xde\x1b\xb7\xb6\x18\x79\xac\x30\xfd\xf7\xdf\x7e\xfd\x67\x71\xa2\xa2\x67\xb9\xfa\xec\x55\x84\xf2\xc3\x39\x10\x69\xac\xea\xdc\xa8\x34\x04\x3c\x4e\x6c\x1b\x6d\x8d\x25\x78\x64\xda\xe2\xb7\x5f\x15\x5d\x5f\x75\x1a\xfa\x47\xd7\x28\x4f\xfb\x2f\x95\x7e\x20\x2b\xe8\x40\x37\x13\x60\x34\xd4\x6d\x86\x2d\xa8\x0f\xe6\x18\x4d\xb8\xf7\x4c\x9f\x5c\x20\xbf\x51\x35\x59\x01\x4a\x6d\xf6\x48\x43\xc3\xe0\x0e\xd1\x77\xc0\x52\x71\x08\x47\x7a\xfe\x55\x54\x4c\xbc\xee\x1a\xb0\xad\xaa\xe7\x46\x59\x93\x4c\xd1\x2d\xde\xf9\x38\xbd\x38\xa7\x2b\xb2\xf7\x55\xb7\x00\x45\x0b\xb3\x60\xd7\xe1\x0a\xf2\xe7\x9f\x88\x0c\x77\x24\xdf\xa7\x08\xe9\xec\xe5\xfd\x9b\xe6\x24\xcf\x71\xb3\xe9\x7c\x7d\x44\x47\x47\x44\x4f\x87\xaf\x87\x8d\xd8\xa6\xe9\x00\xb2\xb1\xeb\x93\xf4\xa5\x60\x7c\x0c\x31\x77\x3b\x3c\xe5\xd6\x8f\x2e\x77\x06\x7b\x9d\xc6\xa3\xd8\x35\x66\x8e\xb3\x64\x53\xd7\x78\xd2\x47\xce\xad\x15\x14\x75\x15\x18\x5e\xd6\x8e\x8d\x2f\x39\x85\x58\x90\xf8\xef\x20\x7d\x3b\x8c\xd7\x45\x6f\x0f\xc3\x5b\x40\x15\xf8\xe3\x16\x57\x86\x32\xed\xc9\x3c\x34\xc5\xf3\x98\xd3\xcf\x77\x8c\xc6\x60\x78\x22\xc3\x0b\xa8\x3a\xed\x0f\x95\x68\x24\x17\xce\x5c\xf7\xce\x72\x17\xd8\x4d\xf2\xaa\xef\xe5\xb5\x6d\xe7\x84\xad\x99\xe4\xf8\x62\x2a\xab\xb1\x89\x3a\xaf\x56\x84\x28\x71\x69\xc7\xe1\x02\xef\x42\xb1\x48\x95\x2e\x30\x76\xda\xd4\xce\xa8\xe3\x19\xf4\xa3\x4e\x12\x4b\x62\xac\x1a\xc3\x25\x4b\x42\xe3\x65\x54\x09\x75\xb8\x06\x82\x3c\xe1\xe9\x87\xc5\x98\xc9\xa5\x9b\xfe\xd8\xcc\x56\x52\x7a\xa1\x22\xaa\xa2\x99\x2a\xb4\x28\x64\xbe\xd6\x7e\xeb\x42\xfa\xa1\xf3\xcb\xa8\xb5\x81\x5f\x43\xc3\x7a\xf9\x87\x7d\x0f\xf6\x2c\xd7\x97\x62\xd8\xe7\xf3\x95\xd4\x49\x9d\xd4\x51\xee\x01\x52\x3f\x5f\x41\x2d\x87\x4a\x5b\xc7\xe3\xd7\xd5\xa0\x8e\x01\x0c\x66\xaa\xf3\x33\xb3\x57\xd4\xc9\xb8\xd0\xbd\x73\x28\xa4\x1e\x47\x7b\xaf\xf0\x4d\xc2\x23\xac\x34\xf7\x84\x07\x70\x6f\xcb\xc0\xa8\xec\xf8\x34\xfe\x9e\x95\x83\xe8\xf9\x13\x83\x68\xd1\x4d\x24\x01\xcf\x80\x7b\x3d\x27\x2f\x76\x0b\xc8\x76\x76\xe0\x9f\x8a\xb0\x7c\x68\xab\x37\x71\x0b\x6d\x2e\x68\x8d\xea\xcf\x33\xa8\x5b\xac\x94\xd9\x24\x61\x83\xe2\xd6\xcc\xdd\xc8\x8d\xac\xa3\x96\xa5\x1d\x9a\x61\x4b\x7e\x2c\xca\x47\x2a\x5e\xc9\xfc\xa5\x26\xed\x26\x3b\xc4\x06\xdf\x1e\x67\x10\x17\x0c\x0e\x37\xa5\xf8\x12\xe3\x19\xd0\x1f\x28\xc6\x05\x1c\xfe\xb8\x06\xc1\x6c\xcb\x11\xb8\x25\xb2\x7e\x69\xb3\x58\xa7\xba\x4e\x2f\x0b\xb2\x99\xba\x42\xf0\xfd\x20\x99\x2e\x53\xd4\x8a\xa8\xba\x72\xc0\x1b\x95\x8b\x55\xec\x09\x21\x01\x47\x48\x43\x4a\x91\xac\xfb\xd3\x10\x8b\x13\xc0\x93\xa2\x13\xcf\x27\x3a\x50\x4a\x57\xfc\x8b\xa5\xf1\xaa\x92\x88\x01\x10\x95\x43\xf0\x7c\x38\x63\x6f\x64\x7f\x9d\x5e\xc8\xa2\x43\x78\xb5\x14\xfb\x88\x50\x4c\x22\x34\x70\xf7\x71\x69\xfa\x91\xd7\x8e\xab\xb6\x98\xbc\xf3\xfa\xe3\xc2\xdb\xac\x3f\xdc\x3b\xad\x6a\xfa\xe6\xf9\x46\x2d\xd6\xe0\xb7\x79\xbe\xf1\x71\x37\xc9\xf2\x7c\x55\x4e\x38\x5f\x7c\xae\x19\x99\x6d\x3d\x3e\xbb\xf0\x26\xf5\x84\xa4\x38\xb7\x63\x92\x44\x4e\xd4\xe6\x9f\xc1\xc6\x48\x6a\x1c\xb5\xa9\x8a\x80\x23\xaa\x0a\x45\xba\x2e\x78\x46\xc1\x38\xf0\x4b\x43\xba\x28\x78\x87\x9a\xbd\x40\xe1\xb8\x00\xf8\x01\xdf\xe7\x6b\x48\xc2\x06\x0e\x28\xed\x7f\x07\x47\xdd\x50\x11\xa0\xc1\xf8\xc3\x7f\xf2\x9f\x6d\x54\xfe\x1f\x00\x00\xff\xff\xb2\xe7\x73\xb2\x7f\x20\x00\x00")

func mapping_static_js_mapping_type_mapping_js_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_js_mapping_type_mapping_js,
		"mapping_static/js/mapping/type-mapping.js",
	)
}

func mapping_static_js_mapping_type_mapping_js() (*asset, error) {
	bytes, err := mapping_static_js_mapping_type_mapping_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/js/mapping/type-mapping.js", size: 8319, mode: os.FileMode(420), modTime: time.Unix(1445119693, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_analyzer_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xe4\x57\x4d\x6f\xa3\x30\x10\xbd\xe7\x57\x58\x68\x0f\xed\x81\xd2\x6e\xaf\x04\xa9\x8a\xb4\xb7\xed\x65\xf7\xbe\x72\x60\x12\xac\x18\x1b\x19\xd3\x6d\x1a\xe5\xbf\xaf\x3f\x08\xd8\xe0\xa4\x6c\xdb\x95\x2a\x6d\xa4\xa6\x8e\x99\x79\x33\xf3\xe6\xd9\x23\xd2\x82\x3c\xa1\x9c\xe2\xa6\x59\x46\x15\x2f\x30\x8d\x4b\xc0\x05\x88\x28\x5b\x20\xf5\x49\xcb\x7b\xff\xa9\x24\x92\x42\x94\xad\xda\x46\xf2\x0a\x3d\x30\x4c\xf7\x2f\x20\xd2\xa4\xbc\xcf\x16\x69\xa2\xc0\xb2\xc5\x62\x8a\xb9\xe6\xc5\xfe\x84\xa8\x1f\xb2\x6d\xdc\x94\xfc\xf7\x32\x02\x21\xb8\xf8\x0e\x4d\x83\xb7\x10\x99\xe7\xe6\xd3\x39\x63\x0a\x42\x22\xf3\x1d\x17\x98\x6d\x41\x68\xcf\x9c\x72\xbc\x73\x8c\x05\xa7\xd0\xd9\x46\x19\x3a\x1c\x5c\xcc\xe3\xd1\x06\xed\x32\x33\xeb\x0d\x17\xd5\x29\x82\x5e\x47\x1d\x82\x59\x67\x3d\xae\x5b\x85\x7e\x14\x6f\x05\x6f\x6b\xc7\xc0\x18\x51\xbc\x06\x8a\xd4\x73\x95\x01\xc3\x95\xa2\xe6\x51\x7d\xa7\x89\xd9\x1f\xd9\x12\x56\xb7\x52\x57\xa0\x48\x01\xba\x8c\x8c\x3d\x92\xfb\x5a\x05\x97\xf0\x2c\x23\xcf\xdc\xa7\xc2\x64\x90\x73\x26\x55\xae\x11\x22\x85\xf2\xb0\xee\x35\xc5\x39\x94\x9c\xaa\x9e\x2d\xa3\x47\x93\xc1\x50\x82\x53\xf6\xcc\x92\x6c\x41\xd9\xaa\xc4\x02\xe7\x52\x11\xfe\x8d\x50\xf5\xaf\x09\x54\x94\xb6\xf4\x04\x46\x49\x23\x3b\xb0\x51\x0d\x7d\xa7\x71\x27\x95\x9b\x5c\x41\xff\xda\x58\xd4\x1b\x0a\x6c\x2b\x4b\x94\xa2\xbb\x09\xb1\x64\x0a\x1e\x13\x09\xaa\x45\x8f\x9c\x69\x86\x89\x97\x4c\xd2\xfe\xab\xe4\x32\x74\x3b\x76\x6c\x49\xdc\x70\x21\xf1\x9a\xc2\x14\xb2\xeb\x6e\x10\x73\x7e\x95\x13\x2d\x28\x64\x01\x35\x60\x39\x40\xeb\x2e\xd9\xfe\x20\xc2\x50\x30\x20\x92\xaa\x8f\x3b\xb4\xde\xa3\x2f\x84\x15\xf0\x3c\x4a\x40\xa5\xd0\xd4\x98\x9d\x92\xd8\xd2\x7d\x5d\x12\x25\x33\xd4\xaf\xe2\x8a\xb0\x56\xe5\x9d\x26\xda\x50\x9f\x2f\x14\x08\xdf\x9d\xb3\x31\xac\x39\xad\x24\xdf\x2d\x23\x01\x15\x7f\x82\xc1\xe3\xca\xa6\x73\x1d\xd4\xfc\xa5\x74\x2c\x10\xaa\x5b\x4a\x63\x41\xb6\xa5\xec\x53\xf3\x99\x0d\xea\xc3\xdd\x98\x7f\xbc\xb3\xf0\x71\x76\x00\x72\x4e\xe3\xa6\x8a\xef\x6e\x03\xf4\x02\x85\xdc\x9c\x7a\xd5\x16\x75\x85\xa9\xee\x15\xc5\xc0\xc3\xca\x6c\x16\x57\x67\x88\xf0\x04\x65\xfd\xcc\xb1\xb4\xce\xe6\xb8\x9f\xf1\x0b\xdd\x1b\x61\x53\x7d\x99\x4c\xb1\xc7\x52\x35\xc5\xf0\x5a\x12\xce\x5c\x29\xe6\x9e\x04\x87\x5f\x3a\x35\x05\x71\x38\x0c\x5b\xc7\x63\x9a\x58\x80\x09\x49\x89\x65\x69\xdc\x42\xff\xf6\x3a\x43\xfa\xd7\x29\xe7\xeb\x56\x4a\xee\xaa\xcf\xa3\xfc\x4a\x96\xa4\xb9\x3e\x5d\xbc\xd6\xf6\x15\x16\xd7\x92\x21\xf5\x17\x17\xb0\xc1\x2d\x95\x9e\xfa\x1e\x8a\x22\x4d\x2c\x4a\x30\xff\xb3\x1b\x6f\xbe\x9d\xfb\x71\x63\x4e\xe1\x4f\xbe\x03\x46\x5e\xf4\xc8\xee\x97\xa1\xdb\x7a\x2a\x44\x79\x32\xbf\x28\xc2\xc0\x8d\xd6\x3b\x86\xec\x67\x0a\xcf\xa8\x6e\x5a\x82\xcf\xe0\x54\x6f\x7d\x68\x2d\xb7\xfe\x47\xaf\xb6\x7e\x27\x2c\xb6\xa9\xd0\xde\x3e\x22\x4d\xd2\x1f\x3f\x1e\x4d\x05\x9f\x76\x3e\x06\xb3\x7b\xef\x80\xf4\x40\x3f\x76\x42\x9a\x26\x05\x46\xe4\xa5\x90\xef\x9a\x89\x6e\xc0\x99\x43\xd1\x71\xf9\xbf\xa7\xa2\x43\xc4\xdf\x8d\x45\xc7\xf1\x63\x46\xe2\x69\x26\x3a\xc0\x33\xe7\xa1\xf4\x05\x27\xfd\xcc\x86\x3b\xea\x5d\x23\xf1\x15\xc2\x67\x4e\x44\x57\x77\x9f\x6b\x24\xda\xa5\xee\xd3\xa5\x97\xca\x0d\xe7\x72\x78\x51\xed\x2a\x0c\x67\x17\x39\x95\xe7\x98\xe5\x40\x95\xb2\xb2\x95\x59\xf9\x99\x4e\x99\x5a\xb7\x84\x6a\x21\x5e\x20\x67\x14\xb4\x16\xa4\xc2\x62\xef\x51\xf2\x03\x3f\xc1\x10\xa9\x2b\xea\x4f\x00\x00\x00\xff\xff\x05\x8f\x6c\x6f\x7d\x0f\x00\x00")

func mapping_static_partials_analysis_analyzer_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_analyzer_html,
		"mapping_static/partials/analysis/analyzer.html",
	)
}

func mapping_static_partials_analysis_analyzer_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_analyzer_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/analyzer.html", size: 3965, mode: os.FileMode(420), modTime: time.Unix(1445126916, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_analyzers_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x54\x4d\x6f\xdb\x30\x0c\xbd\xfb\x57\x08\x3a\xb5\xc0\x9c\x60\x3b\xdb\x06\x06\x6c\xc7\xf5\xb6\x1f\x20\x5b\xac\x2d\x54\x95\x04\x89\x6e\xe2\x15\xfd\xef\xa3\xe4\xef\x2c\x4b\x6e\x0d\x82\xe4\x51\x12\xc9\xf7\xfc\x28\x17\x28\x6a\x0d\xac\xd1\x22\x84\x92\x8f\x41\xfa\xcd\x03\x7a\xe5\x40\xf2\x2a\x63\xac\xc0\x0e\x84\x8c\x28\x62\x3f\x82\xb4\x5c\x3d\x89\x57\x28\x8e\x04\x36\x6b\x6b\x4c\x28\x9d\x8e\x2b\x53\x85\x02\x6b\x2b\x87\xa5\x16\x33\x6d\xee\xc1\x81\xc0\x92\x3f\x08\x43\xd5\xbe\x88\x37\xa1\x1f\x99\x32\xf4\x95\x70\xfe\x25\x9c\x53\xa6\x3d\xd0\x9e\x1e\x82\x0a\x23\xf8\x03\x3e\xf0\xb5\xa7\xac\xde\xdf\x53\xf2\xc7\x07\xb5\x92\xdb\x8d\x09\x52\x20\xd5\xdb\x2c\xb4\x46\x93\xb7\xde\xf6\x8e\x2d\x28\x3f\x07\xce\xbc\xd5\x50\xf2\x14\xf3\x35\x93\x72\xeb\x1e\xd1\x9a\x48\xb6\xd1\xaa\x79\x29\x39\x48\x85\xdf\x27\x26\x13\x6f\x96\x88\x73\x86\x83\xa3\x22\x63\x06\xdf\x14\x99\x3f\x2b\x87\xd4\x5d\xc2\xb3\xe8\x35\x26\x7c\x0e\xbb\xb6\xd4\x38\x38\x61\xe6\x8c\x56\x0f\xae\x53\x0d\xf1\x58\x50\x1e\x79\x70\x26\xbc\x12\x79\xa7\xa4\x04\x43\x2e\xfa\x1e\x38\x99\x10\x53\x2b\xf6\x93\x0e\x6c\x95\x1c\x47\x62\xb7\xd5\x49\xd0\x80\xb0\xd7\xf7\xd9\xca\xd0\x8b\xd0\xdd\x94\xf6\x23\xb1\xbc\x29\xae\x38\x92\xeb\xcb\x38\x2c\xa3\x31\xcf\xe5\x32\x82\xa1\xb3\xa7\x92\xff\x46\xa5\xc3\xe1\x05\x86\xf0\x70\x67\xf6\x1e\x0f\x1a\x4c\x8b\x1d\x2b\xd8\xd7\xed\x1c\xb2\xc6\xea\x48\xae\xe4\xdf\x78\xf5\x64\x0d\xfc\xdb\x93\xfe\xe7\x1b\x50\xe0\xb3\xb5\x78\xe5\x5e\xed\xeb\x64\xff\x37\xca\xc0\x69\x71\xe9\xae\x41\x17\xf6\x84\xd7\x9d\x4b\xae\xd7\x3a\xf7\xaa\xed\x90\x98\xc3\x89\xcd\x75\x2f\x1f\xea\x55\x45\xa3\x0e\x02\xf1\xdd\x51\x65\xd9\xdf\x00\x00\x00\xff\xff\x00\x4d\x8c\x58\x58\x04\x00\x00")

func mapping_static_partials_analysis_analyzers_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_analyzers_html,
		"mapping_static/partials/analysis/analyzers.html",
	)
}

func mapping_static_partials_analysis_analyzers_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_analyzers_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/analyzers.html", size: 1112, mode: os.FileMode(420), modTime: time.Unix(1445123563, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_charfilter_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x54\x4d\x8f\x9b\x30\x10\xbd\xe7\x57\x58\x3e\xb5\x07\x8a\xda\xbd\x02\x97\x48\xbd\x75\x2f\xed\x1f\x30\x66\x02\xd6\x0e\x18\xd9\xc3\xb6\x51\x94\xff\xde\xb1\x4d\x96\x8f\xa0\x1e\x8a\x14\xcb\xf1\x3c\xcf\xbc\xf7\x86\xa1\x68\xcc\xbb\xd0\xa8\xbc\x2f\x65\x6f\x1b\x85\x59\x07\xaa\x01\x27\xab\x93\xe0\xa7\xe8\x5e\xb6\x51\x32\x84\x20\xab\xf3\xe4\xc9\xf6\xe2\xdc\x29\x27\xbe\x1b\x24\x70\x45\xde\xbd\x54\xa7\x22\xe7\x7c\xd5\xe9\xf4\x9c\xb6\xb6\xcd\xf5\x91\x34\x04\x87\x36\xf3\x9d\xfd\x5d\x4a\x70\xce\xba\x1f\xe0\xbd\x6a\x41\xc6\x78\x7c\xe6\xcb\x0a\xc1\x91\x88\x6b\xd6\xa8\xa1\x05\x17\x6e\x6a\xb4\xea\x6d\x05\x76\x16\x61\xc6\xca\x4a\xdc\x6e\xeb\x9c\xf7\x7b\x2a\x3a\x33\x8b\xfb\x8b\x75\xfd\xa3\x42\xd8\xcb\x39\x43\xdc\x57\x1f\x79\xd7\x2a\x42\x28\x6b\x9d\x9d\xc6\x15\x20\x82\x50\xd5\x80\x82\xe3\xa5\xa4\x41\xf5\xec\xce\x2b\xaf\x45\x1e\xcf\x77\x58\x33\x8c\x13\x05\x05\x6c\x0a\x60\x29\x23\x5e\xd0\x75\xe4\xe2\x04\x7f\x48\x6e\xe0\x5b\x2b\x22\x03\x6d\x07\x62\xae\x52\x98\xe6\x51\x4e\x8c\xa8\x34\x74\x16\xb9\x6d\xa5\x7c\x8d\x0c\x16\x09\x2b\xd9\xff\x25\x49\x73\x8b\x2f\xb1\xc3\x81\xa5\xac\x7e\xf1\x7a\xac\x6d\x95\x59\x5b\xcc\x7c\x9f\x7d\xfd\x26\xa2\xe0\xe3\x22\x1e\x10\x74\x34\x83\x6b\x70\x67\x53\xad\xf4\x36\x85\x2a\xe7\x78\xfa\xe9\xf3\xa1\x27\x2b\x0f\x17\x86\x5f\x22\xc5\x43\xf8\x91\x87\x87\xc0\xe0\xeb\x5e\xf3\x13\xb0\xb0\x23\x19\x3b\x04\x12\x0e\x46\x50\xb4\xe3\xce\xb2\xc5\x56\x8c\x97\xd5\xed\xb6\x39\xba\xdf\x8b\x3c\xa5\xd9\xf9\x92\x27\x63\xf6\xa7\xb1\x8f\xbb\xbf\xdb\xb6\x7e\x8c\xd4\xde\x91\x10\x31\x83\xc6\xa9\x01\xe1\x9d\x4e\x36\x8c\x8a\x3a\x99\xcf\x13\x99\x87\x93\x7f\x8d\xef\xc5\x5a\x5a\xbe\x0a\xf5\x44\xc4\xf2\x67\x44\x4d\x83\xe0\x5f\xd6\xc0\x45\x4d\x48\x32\x4d\xa8\xd1\x6f\xcc\x44\x0d\x1a\x90\x7b\x58\x9d\xe3\xae\xc8\xd3\xd5\x6d\x9e\x05\x5f\x4f\x06\x1b\x86\xcf\x23\x91\xe2\xdb\x46\xed\x8a\x8e\xce\xf4\xca\x5d\xc5\x38\x21\x66\xce\xb4\x1d\x7f\x01\x7e\xaa\x77\x58\x2a\xcd\xa2\xfe\x06\x00\x00\xff\xff\x83\x23\xbc\x09\xea\x04\x00\x00")

func mapping_static_partials_analysis_charfilter_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_charfilter_html,
		"mapping_static/partials/analysis/charfilter.html",
	)
}

func mapping_static_partials_analysis_charfilter_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_charfilter_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/charfilter.html", size: 1258, mode: os.FileMode(420), modTime: time.Unix(1445125832, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_charfilters_generic_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func mapping_static_partials_analysis_charfilters_generic_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_charfilters_generic_html,
		"mapping_static/partials/analysis/charfilters/generic.html",
	)
}

func mapping_static_partials_analysis_charfilters_generic_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_charfilters_generic_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/charfilters/generic.html", size: 0, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_charfilters_regexp_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x8f\x41\x8e\x83\x30\x0c\x45\xd7\xe1\x14\x51\xf6\x0c\x17\x08\xec\xe6\x02\x73\x83\x4c\x62\x20\x92\x89\x23\xc7\x8c\x98\xdb\x37\x40\x17\xad\xd4\x4a\x6d\x57\x89\x2c\xbf\xef\xff\x94\x0d\xf1\x4f\x7b\x74\xa5\xf4\x66\x24\x5e\xda\x89\x69\xcd\x66\x68\x94\xb2\xe8\x7e\x01\x75\x9d\xf6\xc6\xcf\x8e\xc7\x88\x02\xfc\x03\x13\x6c\x75\xa1\xbe\x2b\x3a\xd6\xdf\x5b\x66\x28\x25\x52\xb2\xdd\x01\xec\xa8\xb2\x31\xe5\x55\x74\x9a\xda\x85\x02\xe0\x6d\xc0\x17\x9f\x09\x5a\xfe\x33\xf4\x46\x60\x13\x73\xd7\xc0\x53\x12\x26\x34\x3a\x86\x07\x87\x75\x46\xe7\x61\x26\x0c\x50\x7b\xed\x45\x6d\x57\x1d\x86\xa6\xf9\xc4\xe5\x08\xdb\x65\x8e\xcf\x02\x49\x5e\xb7\x38\xd9\xf7\x35\xae\xdc\x13\x8f\x4b\x00\x00\x00\xff\xff\x7e\x49\xa0\xae\x92\x01\x00\x00")

func mapping_static_partials_analysis_charfilters_regexp_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_charfilters_regexp_html,
		"mapping_static/partials/analysis/charfilters/regexp.html",
	)
}

func mapping_static_partials_analysis_charfilters_regexp_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_charfilters_regexp_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/charfilters/regexp.html", size: 402, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_charfilters_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x54\x4d\x6f\xdb\x30\x0c\xbd\xe7\x57\x08\x3a\xb5\xc0\xec\x60\xd8\xd5\xf6\x65\x1f\xb7\xf5\xb4\x9d\x07\x45\xa2\x6d\xa1\xaa\x24\x48\x74\x13\xa3\xe8\x7f\x1f\x25\xd7\x8e\x13\x77\xe9\x6d\x41\x90\x3c\xd2\xe1\xe3\x7b\x22\x95\x0a\xc5\xc1\x00\x93\x46\xc4\x58\xf3\x29\xc8\x9f\x45\xc4\xa0\x3d\x28\xde\xec\x18\xab\xb0\x07\xa1\x12\x4a\x38\x4c\x20\xa7\x9b\x07\xf1\x04\xd5\x9e\xc0\x2a\xf7\x6b\xf4\x9b\xdc\x39\x26\x94\x19\x52\xe6\x8d\xb5\xc2\x83\x53\xe3\xc2\xcf\x6c\x57\x04\xf0\x20\xb0\xe6\x77\xb2\xb5\xd4\xe2\x93\x6c\x9f\x85\xb9\x67\xda\xd2\x5b\xc1\xe9\xa7\xf0\x5e\xdb\xae\x14\x56\x98\x31\xea\x58\xca\x5e\x84\x3f\xad\x36\x08\x21\xf2\x73\x63\xd5\xbc\xbc\x4c\x0c\xaf\xaf\xd4\x50\x5d\x3f\x21\xd2\x12\x49\xee\xf6\xe9\x1b\xa4\x40\xe9\xe7\xf9\x80\x0e\x68\x8b\x2e\xb8\xc1\xb3\x05\x15\xa7\xc8\x59\x70\x06\x6a\x9e\x63\x7e\xae\xa4\xda\xc3\x80\xe8\x6c\x32\x24\x8d\x96\x8f\x35\x07\xa5\xf1\x2b\x69\xfd\x91\xa5\xce\xee\xd8\x64\x8f\xb3\xa4\x85\xda\xe4\x2a\xbe\x22\x9a\x5f\x67\x1d\x59\x81\x82\x56\x0c\x06\x33\x3e\xc5\x8b\xd6\xd4\x3c\x7a\x61\xe7\x8a\xce\x8c\xbe\xd7\x92\xb4\x2c\xa8\x48\x5a\x38\x13\x41\x8b\xa2\xd7\x4a\x81\xa5\x0d\x08\x03\x70\x1a\x56\x2a\x6d\xd8\x77\xfa\xc1\xda\xcd\x7e\x12\x76\xdb\xa1\x02\x03\x08\x1b\x8f\xff\xdb\x1c\x06\x11\xfb\x9b\xee\xbe\x65\xa1\x37\xfd\x55\x7b\x1a\xfe\xb2\x15\xcb\x86\xcc\x2b\xbc\x6c\x6b\xec\xdd\xb1\xe6\xbf\x51\x9b\x58\x3e\xc2\x18\xef\x3e\x5e\xd2\xfb\xd2\x80\xed\xb0\x67\x15\xfb\xbc\x5e\x58\x26\x9d\x49\xfa\x6a\xfe\x85\x37\x0f\xce\xc2\xb6\x2d\x7d\xcf\xf7\xa5\xc2\xd6\x39\x7c\xe7\x66\x5e\xf2\xec\xfe\x3d\x2e\x0b\xc7\xd5\xac\x3e\x9c\xd2\xd5\x8c\xe2\xd3\xc5\xa8\xfc\x60\x4c\x11\x74\xd7\x23\x69\x87\x23\x4b\xcc\x42\x12\x31\x9b\xf8\xaf\x4f\xf8\x5d\x6f\x93\x23\x02\xe9\x7f\xa8\xd9\xfd\x0d\x00\x00\xff\xff\x7a\x9f\xc4\x9d\xa3\x04\x00\x00")

func mapping_static_partials_analysis_charfilters_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_charfilters_html,
		"mapping_static/partials/analysis/charfilters.html",
	)
}

func mapping_static_partials_analysis_charfilters_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_charfilters_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/charfilters.html", size: 1187, mode: os.FileMode(420), modTime: time.Unix(1445123661, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_tokenfilter_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x54\x4d\x8f\x9b\x30\x10\xbd\xe7\x57\x58\x3e\xb5\x07\x8a\xda\xbd\x12\x2e\x91\x7a\xeb\x5e\xba\x7f\xc0\x98\x09\x58\x19\x6c\xcb\x1e\xb6\x8d\xa2\xfc\xf7\xfa\x2b\x1b\x20\x51\x55\x15\x29\x96\xe3\x79\x9e\x37\xef\x0d\x43\xd3\xab\x77\x26\x51\x78\xbf\xe7\x93\xe9\x05\x56\x23\x88\x1e\x1c\x6f\x77\x2c\x3c\xcd\xf8\xb2\x8e\x92\x22\x04\xde\x1e\x66\x4f\x66\x62\x6f\xe6\x04\x9a\x7d\x57\x48\xe0\x9a\x7a\x7c\x69\x77\x4d\x1d\x12\xb6\xbb\xdd\x63\xde\xce\xf4\xe7\x5b\xd6\x18\xd4\x43\xe5\x47\xf3\x6b\xcf\xc1\x39\xe3\x7e\x80\xf7\x62\x00\x9e\xe2\xe9\x29\x97\x05\x82\x23\x96\xd6\xaa\x17\x7a\x00\x17\x6f\x4a\x34\xe2\xb4\x00\x3b\x83\x50\xb0\xbc\x65\x97\xcb\x32\xe7\xf5\x9a\x49\x4b\x65\x69\x7f\x34\x6e\xba\x31\xc4\x3d\x2f\x19\xd2\xbe\xfd\xc8\xbb\x54\x11\x43\xd5\xe0\xcc\x6c\x17\x80\x04\x42\xd1\x01\xb2\x10\xdf\x73\xd2\x62\x0a\xf6\xbc\x86\xb5\xa9\xd3\xf9\x06\xab\xb4\x9d\x29\x2a\x08\xa6\x00\xee\x79\xc2\x33\x3a\xdb\x40\x4e\xf0\x9b\xf8\x8a\x4e\x1a\x4d\xa1\x30\xbe\xca\x51\x1e\xd5\xdf\xe8\x98\x45\x21\x61\x34\x18\xfa\xb6\xe7\xaf\xa9\x82\xbb\x84\x85\xec\xff\x93\x14\x7b\x7c\x4c\x2d\x8e\x65\xf2\xf6\x2d\xac\xcf\xc5\x2d\x52\x4b\x83\x95\x9f\xaa\xaf\xdf\x58\x52\xfc\x9c\xc5\x03\x82\x4c\x6e\xc8\x31\xb6\xb6\x90\xe5\xf7\x29\xd2\x1c\xd2\xf1\xa7\xcf\x4f\x0d\x58\xb8\xb8\xa8\xf1\x4b\x2a\xf2\x29\xfe\x5f\x9d\xcd\xd6\x6e\x65\x3f\x20\x1b\x63\x49\x19\x1d\xcb\x70\x60\x41\xd0\xb6\xfc\x20\x9d\x6d\x04\x79\xde\x5e\x2e\xeb\xb3\xeb\xb5\xa9\x73\xa6\x8d\x3b\x75\xb6\x67\x7b\x9a\xda\xb9\xf9\xbb\xee\xee\xc7\x64\x3d\xd8\x12\x43\x4a\x4b\x9c\x7b\x60\xde\xc9\xec\x85\x15\x34\xf2\xba\x4c\x66\x1d\x4f\xfe\x36\xc6\x47\x63\xe8\xfe\x79\xe8\x66\xa2\x60\x41\x41\x74\xa4\x59\xf8\x55\x3d\x1c\xc5\x8c\xc4\xf3\xa4\x2a\x79\x0a\xef\x83\xd0\x12\x30\x74\xb2\x3d\xa4\x5d\x53\xe7\xab\xeb\x3c\x77\x7c\x37\x2b\xec\x03\xbc\x8c\x46\x8e\xaf\xbb\xb5\x21\xb5\x4e\x4d\xc2\x9d\x99\x9d\x11\x2b\xa7\x86\x31\x7c\x09\x7e\x8a\x77\xb8\x33\x15\x51\x7f\x02\x00\x00\xff\xff\x9d\xa8\x1e\x32\xf3\x04\x00\x00")

func mapping_static_partials_analysis_tokenfilter_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_tokenfilter_html,
		"mapping_static/partials/analysis/tokenfilter.html",
	)
}

func mapping_static_partials_analysis_tokenfilter_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_tokenfilter_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/tokenfilter.html", size: 1267, mode: os.FileMode(420), modTime: time.Unix(1445125849, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_tokenfilters_dict_compound_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x90\xbd\xae\x84\x20\x10\x85\x6b\x7d\x8a\x09\xbd\x97\x17\x40\xdf\xe0\xde\xe6\x6e\xb2\xa5\x41\x18\x0d\x59\x60\x08\xe0\x36\xc6\x77\x5f\xfc\x2b\x2c\x96\x6a\x72\x72\x3e\xbe\xc9\x54\x42\x9b\x37\x28\x2b\x53\x6a\xd9\x48\xd1\x35\x53\xa4\x39\xb0\xae\xae\x2a\x61\xe5\x80\x16\x4a\xda\xb2\x4c\x2f\xf4\xa3\xb1\x19\xe3\x63\x1b\x7f\x65\x48\xac\xfb\x9f\x07\x78\x52\xd4\x49\xf0\xbd\xbb\x53\x09\x2d\xaa\x0c\x7e\x6a\x1c\x69\xb4\x37\xf6\x47\x1b\x95\xfb\x3d\xe8\x9d\x0c\xec\x66\x56\xe4\x73\x24\xcb\xc0\xe8\x6f\xc2\x1a\xca\x2b\x0e\x0a\xd9\x90\xdf\x1c\x11\x03\xca\x7c\xf6\x4b\x09\x8c\x87\x6b\xfe\x93\x0e\x0b\xb4\x2c\x57\xb0\xae\x82\x1f\xe8\xf9\x93\xe0\xc7\xb6\x65\x71\xc1\xcb\x25\xba\x4f\x00\x00\x00\xff\xff\x61\x16\x44\xb1\x10\x01\x00\x00")

func mapping_static_partials_analysis_tokenfilters_dict_compound_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_tokenfilters_dict_compound_html,
		"mapping_static/partials/analysis/tokenfilters/dict_compound.html",
	)
}

func mapping_static_partials_analysis_tokenfilters_dict_compound_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_tokenfilters_dict_compound_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/tokenfilters/dict_compound.html", size: 272, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_tokenfilters_edge_ngram_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x90\x41\x6e\xc4\x20\x0c\x45\xd7\xe4\x14\xc8\xfb\x69\x2e\x40\xd8\x75\xd9\x43\x10\x70\x52\x34\x0e\x46\x84\x54\xd3\xdb\xd7\x4c\xbb\x41\xd5\x48\xa3\xcc\xc6\x92\xf3\xfd\x7f\xde\x47\x99\x10\xbf\xb4\x27\xb7\xef\x13\x2c\x5c\xb6\xcb\x5a\xf8\xc8\x60\x07\xa5\x0c\xb9\x19\x49\xcb\xd7\x09\x2a\x5f\x31\x2d\x91\x2a\x96\xf7\xb0\x22\xd8\x36\xcd\x78\xbf\x68\xb7\xca\xec\x48\xe8\x6b\x17\xe5\x39\xd5\xc2\x04\x3a\x86\xff\x09\x3a\xad\x97\x8d\x03\x52\x27\xbd\xe1\x3d\xbd\x25\x2a\xc3\xb9\x46\x4e\x76\x29\x92\x63\xc6\xbf\xad\x93\x66\xe7\xaf\x9d\x62\xc6\x5f\x0e\x59\xcc\x28\xd5\xec\x30\x9c\xa8\xf8\x11\x13\x58\x19\x5d\xc1\x98\xf2\x51\x1f\x50\x6f\x62\xd0\xf5\x3b\xe3\x04\xe9\xd8\x66\x2c\xf0\xd4\x43\xb4\xff\xe8\x4c\xce\xe3\x27\x53\x40\x81\x80\x17\xc1\xdd\x4d\xc0\xdd\xed\x79\x70\x31\x9c\x01\x6f\xb6\x07\xe0\x3f\x01\x00\x00\xff\xff\xa6\xc2\x37\x43\x53\x02\x00\x00")

func mapping_static_partials_analysis_tokenfilters_edge_ngram_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_tokenfilters_edge_ngram_html,
		"mapping_static/partials/analysis/tokenfilters/edge_ngram.html",
	)
}

func mapping_static_partials_analysis_tokenfilters_edge_ngram_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_tokenfilters_edge_ngram_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/tokenfilters/edge_ngram.html", size: 595, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_tokenfilters_elision_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x90\x3d\xce\xc3\x20\x0c\x86\xe7\xe4\x14\x88\x3d\x1f\x17\x20\x91\xbe\x03\xb4\x53\xf7\x88\x12\x27\x42\x35\x18\x01\xed\x12\xe5\xee\x75\xfe\x86\x0c\x65\xb2\x5e\xbd\x0f\x8f\xe5\x4a\x0f\xee\x23\x2c\x9a\x9c\x5b\x39\x52\xf2\xcd\x94\xe8\x1d\x65\x57\x57\x95\x46\xf3\x04\x14\x9c\xb6\xb2\xd0\x0b\xc2\xe8\xb0\x40\x7a\xac\xe3\xcd\xc4\x2c\xbb\xff\x54\x9c\x45\xc8\x5a\x6d\xd5\x0d\xca\x80\x60\x8b\x08\x53\xe3\x69\x00\xbc\xa0\x7f\xe6\x00\xfa\x2d\xec\xbd\x89\xf2\x22\xb7\x14\x4a\x22\x94\xc2\x0d\xbf\x9c\xb5\xe0\xc7\x1e\x8a\xc5\x51\x58\x3d\x09\x22\x98\x72\xf4\xb9\x24\x5c\x10\xe7\x7c\x37\x1e\x18\x9a\xe7\x33\x58\x16\xad\x76\xf4\xf8\x49\xab\x7d\x63\x5e\x5e\x2b\x3e\x46\xf7\x0d\x00\x00\xff\xff\x97\x76\x02\xbd\x13\x01\x00\x00")

func mapping_static_partials_analysis_tokenfilters_elision_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_tokenfilters_elision_html,
		"mapping_static/partials/analysis/tokenfilters/elision.html",
	)
}

func mapping_static_partials_analysis_tokenfilters_elision_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_tokenfilters_elision_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/tokenfilters/elision.html", size: 275, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_tokenfilters_generic_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func mapping_static_partials_analysis_tokenfilters_generic_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_tokenfilters_generic_html,
		"mapping_static/partials/analysis/tokenfilters/generic.html",
	)
}

func mapping_static_partials_analysis_tokenfilters_generic_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_tokenfilters_generic_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/tokenfilters/generic.html", size: 0, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_tokenfilters_keyword_marker_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x90\x4d\x0e\x83\x20\x10\x85\xd7\x7a\x0a\xc2\xde\x72\x01\xf4\x02\x4d\xbb\xea\xde\x50\x19\x0d\x11\x18\x02\xb4\x4d\x63\xbc\x7b\xc7\xbf\x85\x8b\xb2\x9a\xbc\xbc\x8f\x6f\x32\x85\xd4\xe6\xcd\x3a\xab\x52\xaa\x79\x8f\xd1\x55\x43\xc4\x57\xe0\x4d\x59\x14\xd2\xaa\x27\x58\x46\x69\xcd\x33\x8e\xe0\x7b\x63\x33\xc4\xc7\x32\xde\x54\x48\xbc\xb9\xc2\xf7\x83\x51\x27\x29\xd6\xea\x0a\x25\xb0\xd0\x65\xe6\x87\xca\xa1\x06\x7b\x42\x2f\xe3\x0e\xb4\x6b\xd8\x3a\x15\xf8\x49\xde\xa1\xcf\x11\x2d\x67\x46\xff\x73\x96\x8c\x1e\x79\x30\x64\x83\x7e\xf1\x44\x08\xa0\xf2\xde\xa7\x12\x33\x9e\x1d\xf3\x5d\x39\x20\x68\x9a\x8e\x60\x9e\xa5\xd8\xd0\xfd\x27\x29\xb6\x8d\x69\x79\x29\xe8\x18\xcd\x2f\x00\x00\xff\xff\x4f\xfe\x32\xc4\x13\x01\x00\x00")

func mapping_static_partials_analysis_tokenfilters_keyword_marker_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_tokenfilters_keyword_marker_html,
		"mapping_static/partials/analysis/tokenfilters/keyword_marker.html",
	)
}

func mapping_static_partials_analysis_tokenfilters_keyword_marker_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_tokenfilters_keyword_marker_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/tokenfilters/keyword_marker.html", size: 275, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_tokenfilters_length_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\xce\x41\xae\x83\x30\x0c\x04\xd0\x75\x38\x45\xe4\x3d\x9f\x0b\x04\x6e\xf0\x0f\x11\x88\xa1\x51\x1d\x3b\x0a\xa1\xa2\xb7\xaf\xe9\x0e\x55\x95\x2a\x36\x59\xc4\x33\x9a\x67\x5c\x88\x0f\x3b\x91\x5f\xd7\x1e\x66\x29\xa9\x5d\x8a\x6c\x19\x86\xc6\x18\x47\x7e\x44\xb2\xfa\xdb\x43\x95\x3b\xf2\x1c\xa9\x62\xf9\x8f\x0c\x83\x3e\xae\x7b\xdf\x8f\xa4\x71\x91\xf3\x56\x2d\x2f\x6d\x92\x80\x74\xca\xff\x25\x2d\xd8\xfa\xcc\xd8\x03\x6f\x69\xc4\x02\xa7\xc1\x49\xb8\x16\x21\xb0\x31\x7c\xec\xd8\x4c\x7e\xc2\x9b\x50\x40\x45\x1c\x2a\xd7\x29\x78\x68\x9a\x2b\x70\xbf\x2b\xdc\xef\xbf\xc3\xb5\x70\x05\x7e\xd4\xbe\xc0\x5f\x01\x00\x00\xff\xff\xc5\x81\x9e\x7b\x70\x01\x00\x00")

func mapping_static_partials_analysis_tokenfilters_length_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_tokenfilters_length_html,
		"mapping_static/partials/analysis/tokenfilters/length.html",
	)
}

func mapping_static_partials_analysis_tokenfilters_length_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_tokenfilters_length_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/tokenfilters/length.html", size: 368, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_tokenfilters_ngram_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\xce\x41\xae\x83\x30\x0c\x04\xd0\x75\x38\x45\xe4\x3d\x9f\x0b\x04\x6e\xf0\x0f\x11\x88\xa1\x51\x1d\x3b\x0a\xa1\xa2\xb7\xaf\xe9\x0e\x55\x95\x2a\x36\x59\xc4\x33\x9a\x67\x5c\x88\x0f\x3b\x91\x5f\xd7\x1e\x66\x29\xa9\x5d\x8a\x6c\x19\x86\xc6\x18\x47\x7e\x44\xb2\xfa\xdb\x43\x95\x3b\xf2\x1c\xa9\x62\xf9\x8f\x0c\x83\x3e\xae\x7b\xdf\x8f\xa4\x71\x91\xf3\x56\x2d\x2f\x6d\x92\x80\x74\xca\xff\x25\x2d\xd8\xfa\xcc\xd8\x03\x6f\x69\xc4\x02\xa7\xc1\x49\xb8\x16\x21\xb0\x31\x7c\xec\xd8\x4c\x7e\xc2\x9b\x50\x40\x45\x1c\x2a\xd7\x29\x78\x68\x9a\x2b\x70\xbf\x2b\xdc\xef\xbf\xc3\xb5\x70\x05\x7e\xd4\xbe\xc0\x5f\x01\x00\x00\xff\xff\xc5\x81\x9e\x7b\x70\x01\x00\x00")

func mapping_static_partials_analysis_tokenfilters_ngram_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_tokenfilters_ngram_html,
		"mapping_static/partials/analysis/tokenfilters/ngram.html",
	)
}

func mapping_static_partials_analysis_tokenfilters_ngram_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_tokenfilters_ngram_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/tokenfilters/ngram.html", size: 368, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_tokenfilters_normalize_unicode_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x90\x3d\x12\xc2\x20\x10\x85\x6b\x3c\x05\x43\x1f\xb9\xc0\x86\xd2\xd2\xce\x03\x44\xd8\x64\x98\x6c\x76\x33\x04\x2d\x3c\xbd\x9b\x68\x13\x67\x62\xf7\x78\x3f\xdf\x00\x06\x52\x7e\xda\x48\xdd\xb2\xb4\xae\x97\x32\x35\x43\x91\xc7\xec\xc2\xc9\x18\xa0\xee\x8e\x64\xd5\x6d\x5d\x95\x11\xb9\xcf\x54\xb1\x5c\xb5\xd5\x51\x7e\xe1\x8d\x73\x94\x84\x2e\x5c\xd4\x01\xbf\xb5\xd7\x9d\x81\x05\x09\x63\xdd\x61\xa3\x70\x2d\x42\xce\xe6\xf4\x9f\x66\x79\x68\x26\x15\xb4\xab\x9d\x57\xc8\x76\x2b\xc5\xcb\x5c\xb3\x70\xe0\x3e\x82\xff\xea\x9f\x20\x1d\x05\xe3\xe1\x64\xdc\x6f\xc0\x7f\x1e\xa1\x07\xf0\xfa\x47\xe1\x1d\x00\x00\xff\xff\xd1\xd9\xe9\x1f\x2a\x01\x00\x00")

func mapping_static_partials_analysis_tokenfilters_normalize_unicode_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_tokenfilters_normalize_unicode_html,
		"mapping_static/partials/analysis/tokenfilters/normalize_unicode.html",
	)
}

func mapping_static_partials_analysis_tokenfilters_normalize_unicode_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_tokenfilters_normalize_unicode_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/tokenfilters/normalize_unicode.html", size: 298, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_tokenfilters_shingle_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x92\xc1\x6e\xc3\x20\x0c\x86\xcf\xc9\x53\x20\xee\x5d\x5f\x20\xe1\x38\x69\x87\x69\x87\xed\x3e\x11\x70\x52\x54\x07\x47\x04\xa6\xec\xed\x67\xd6\x64\x52\xb5\x55\x62\x6d\x2f\x06\x61\xff\xfa\xbf\x5f\xa6\x6a\xac\xfb\x10\x06\xf5\x3c\xb7\xb2\xa7\x30\xee\x86\x40\x69\x92\xaa\xae\xaa\x06\x75\x07\x28\xf8\xb5\x95\x91\x8e\xe0\x7b\x87\x11\xc2\xb3\xf3\x52\x71\x69\xf6\xdf\xfd\x3c\x59\x35\xce\x4f\x29\x0a\x3f\xec\x46\xb2\x80\x67\xf3\x0f\x23\x0b\x44\xfc\x9c\xa0\x95\x3e\x8d\x1d\x04\x79\x66\x68\xc8\xc7\x40\x28\x85\xb3\xbf\x7c\xc4\x84\xda\xc0\x81\xd0\x02\x43\x64\xaa\x66\xcf\xc0\xaa\xae\xaf\x01\xd7\x0b\x83\xeb\xa5\x1c\x9c\x05\xd7\x80\x67\xd9\x3d\xc1\x9f\xbc\xc1\x64\x41\xaa\xf5\x22\x5e\x82\x1b\x9c\xd7\x28\xde\xf2\xd0\x1f\x79\xc4\x85\x44\x94\x22\xb7\xdf\x69\xd5\x6f\xe9\xcc\x01\xcc\xb1\xa3\xa5\x2c\xdf\x0f\xce\x4d\xa1\x5e\x81\xdb\x5c\x74\xd0\x91\x42\xf1\x4e\xe6\x4d\xb1\xb1\x47\x58\x62\x19\x77\x76\xbc\xeb\x5e\x1e\x1d\x22\x7f\x0a\x75\x3a\x8b\x23\xf4\x27\xd9\xbf\xf9\x57\xbb\x4b\x11\xbe\x02\x00\x00\xff\xff\x4a\x38\x26\x08\xcb\x03\x00\x00")

func mapping_static_partials_analysis_tokenfilters_shingle_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_tokenfilters_shingle_html,
		"mapping_static/partials/analysis/tokenfilters/shingle.html",
	)
}

func mapping_static_partials_analysis_tokenfilters_shingle_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_tokenfilters_shingle_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/tokenfilters/shingle.html", size: 971, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_tokenfilters_stop_tokens_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x90\x3d\x8e\xc3\x20\x10\x85\x6b\xfb\x14\x23\x7a\x2f\x17\xc0\xbe\xc1\x6e\xb3\x91\x52\x5a\xc4\x8c\x2d\x14\x60\x10\x90\x34\x96\xef\x9e\xf1\x5f\xe1\x22\x54\xa3\xa7\xf7\xf1\x8d\xa6\x52\xc6\xbe\x61\x70\x3a\xe7\x56\x8c\x94\x7c\x33\x25\x7a\x45\xd1\xd5\x55\xa5\x9c\x7e\xa0\x03\x4e\x5b\x51\xe8\x89\x61\xb4\xae\x60\xba\xad\xe3\xaf\x8e\x59\x74\xff\x85\x22\xdc\x29\x99\xac\xe4\x56\xde\xb0\x8c\x0e\x87\x02\x61\x6a\x3c\x19\x74\x17\xf8\x27\x33\xd2\x6f\x41\xef\x75\x14\x17\xf5\x40\xa1\x24\x72\x02\xac\xf9\x66\xac\x81\x1f\x3b\x28\x16\x4b\x61\x75\x24\x8c\xa8\xcb\xd1\xe7\x12\xd8\x00\xe7\xfc\xa7\x3d\x32\x34\xcf\x67\xb0\x2c\x4a\xee\xe8\xf1\x93\x92\xfb\xb6\xbc\xb8\x92\x7c\x8a\xee\x13\x00\x00\xff\xff\x16\x19\x03\x3e\x11\x01\x00\x00")

func mapping_static_partials_analysis_tokenfilters_stop_tokens_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_tokenfilters_stop_tokens_html,
		"mapping_static/partials/analysis/tokenfilters/stop_tokens.html",
	)
}

func mapping_static_partials_analysis_tokenfilters_stop_tokens_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_tokenfilters_stop_tokens_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/tokenfilters/stop_tokens.html", size: 273, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_tokenfilters_truncate_token_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8e\xc1\x0d\x83\x30\x0c\x45\xcf\xe9\x14\x96\xef\x94\x05\x02\x13\x74\x09\x20\x06\xa2\x3a\x76\x14\x9c\x4a\xdd\xbe\x81\x1b\xea\xc5\x07\xeb\x7d\xbd\xe7\x7c\x88\x1f\x58\x78\x3a\x8e\x01\x57\x2d\xa9\xdb\x8a\xd6\x8c\xe3\xc3\x39\xcf\xd3\x4c\x0c\xed\x3b\xa0\xe9\x9b\x64\x8d\x6c\x54\x5e\x24\x38\xb6\xb3\xd9\xee\xfb\x0b\x39\x61\xe7\xa3\xe4\x6a\x20\x5b\x97\x34\x10\xdf\x26\x4f\xbe\x70\x04\xfb\x66\x1a\x50\x6a\x9a\xa9\xe0\x4d\xbb\xa8\x58\x51\x46\x88\xe1\xcf\x06\x99\xa7\x85\x76\xe5\x40\x2d\xe5\x6c\xf3\x7d\xcb\x1e\x7f\x01\x00\x00\xff\xff\x0a\x91\xf6\x26\xbd\x00\x00\x00")

func mapping_static_partials_analysis_tokenfilters_truncate_token_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_tokenfilters_truncate_token_html,
		"mapping_static/partials/analysis/tokenfilters/truncate_token.html",
	)
}

func mapping_static_partials_analysis_tokenfilters_truncate_token_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_tokenfilters_truncate_token_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/tokenfilters/truncate_token.html", size: 189, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_tokenfilters_wordmap_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8e\x31\x0a\xc3\x30\x0c\x45\x67\xf7\x14\xc2\x7b\x9a\x0b\x24\xb9\x41\x3b\x75\x2f\xc6\x56\x8a\xa9\x2d\x19\x59\xd0\x21\xe4\xee\x75\x48\x3d\x54\xd3\x47\xfc\xf7\xf8\xc6\x98\xa9\x62\x42\xaf\x40\xaf\x21\x73\xc0\x34\x5b\xe5\x37\xd2\x1a\x93\xa2\x5c\x3f\x2c\xe1\x99\x5d\xb1\xe0\x93\xab\x75\xb6\x2b\x4b\x1e\x3c\x93\x0a\x27\x0b\x31\xfc\xd5\x1f\x47\xbc\xb9\x52\xed\x72\x31\xd0\xae\xe9\xb9\x68\x64\x3a\xf4\x82\x05\x9d\xfe\x80\xd6\x82\x48\xd0\xf3\xdd\x65\x6c\xd4\xb6\xf5\xc7\xbe\x4f\xe3\x89\x76\xd5\x34\x9e\x4b\x97\x6f\x00\x00\x00\xff\xff\x38\x1c\x9d\x3b\xb5\x00\x00\x00")

func mapping_static_partials_analysis_tokenfilters_wordmap_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_tokenfilters_wordmap_html,
		"mapping_static/partials/analysis/tokenfilters/wordmap.html",
	)
}

func mapping_static_partials_analysis_tokenfilters_wordmap_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_tokenfilters_wordmap_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/tokenfilters/wordmap.html", size: 181, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_tokenfilters_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x54\x4d\x6f\xdb\x30\x0c\xbd\xe7\x57\x08\x3a\xb5\xc0\xec\x60\xd8\xd5\xf6\x69\xdb\x6d\x3d\x75\xe7\x41\xb1\x68\x5b\x88\x2a\x09\x12\xdd\xc4\x28\xfa\xdf\x47\xc9\xf5\x47\xe2\x2c\xdb\x69\x41\x90\x3c\xd2\xe1\xe3\x7b\x22\x95\x02\xc5\x41\x03\xab\xb5\x08\xa1\xe4\x63\x90\x3e\xb3\x80\x5e\x39\x90\xbc\xda\x31\x56\x60\x07\x42\x46\x14\xb1\x1f\x41\x4a\x57\x4f\xe2\x05\x8a\x3d\x81\x55\xee\x79\x70\x9b\xdc\x12\x13\x4a\x0c\x31\xf3\xc1\x5a\xe0\xc1\xca\x61\xe6\x67\xa6\xcd\x3c\x38\x10\x58\xf2\x07\x6c\x0c\xb5\xf8\x84\xcd\xab\xd0\x8f\x4c\x19\x7a\x4b\x38\xff\x10\xce\x29\xd3\xe6\xc2\x08\x3d\x04\x15\x72\xb4\x47\x30\xbf\x1a\xa5\x11\x7c\xe0\x4b\x67\x59\xbd\xbd\x8d\x14\xef\xef\xd4\x51\x5e\x3f\x21\xd6\x1c\x49\xef\xf6\xe9\x07\xa4\x40\xaa\xd7\xe9\x84\x0e\x68\xb2\xd6\xdb\xde\xb1\x19\x65\xe7\xc0\x99\xb7\x1a\x4a\x9e\x62\xbe\x54\x52\xed\xa1\x47\xb4\x26\x3a\xaa\xb5\xaa\x8f\x25\x07\xa9\xf0\x39\x8a\xfd\x9e\xb4\x4e\xfe\xd8\x68\x90\xb3\x28\x86\xfa\xa4\x32\xbe\x62\x9a\x5e\x8b\x90\x24\x41\x42\x23\x7a\x8d\x09\x9f\xc3\x45\x6f\xea\x1e\x9c\x30\x53\x45\xab\x07\xd7\xa9\x9a\xc4\xcc\x28\x8b\x62\x38\x13\x5e\x89\xac\x53\x52\x82\xa1\x1d\xf0\x3d\x70\x1a\x57\x2c\xad\xd8\x37\xfa\xc1\xda\xce\x7e\x14\x76\xdf\xa2\x04\x0d\x08\x5b\x93\xff\xdb\x1d\x7a\x11\xba\xbb\xf6\xbe\x26\xa5\x77\x0d\x16\x7b\x1a\xff\xbc\x17\xf3\x8e\x4c\x5b\x3c\x2f\x6c\xe8\xec\xa9\xe4\x3f\x51\xe9\x90\x1f\x61\x08\x0f\xff\xb0\xa7\x8f\xb9\x06\xd3\x62\xc7\x0a\xf6\x79\xbd\xb3\xac\xb6\x3a\x0a\x2c\xf9\x17\x5e\x3d\x59\x03\xdb\xbe\xf4\x3d\xdd\x99\x02\x1b\x6b\xf1\xc6\xed\xbc\xe4\xd9\xfd\x79\x60\x06\x4e\xeb\x69\xfd\x75\x4e\x57\x53\x0a\x2f\x17\xc3\x72\xbd\xd6\x99\x57\x6d\x87\x24\x1e\x4e\x2c\x51\xb3\x91\xfb\xfa\x7c\x6f\x1a\x1b\xed\x10\x88\x7f\x44\xd5\x6e\xf7\x3b\x00\x00\xff\xff\xe2\xc9\xaa\x53\xa5\x04\x00\x00")

func mapping_static_partials_analysis_tokenfilters_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_tokenfilters_html,
		"mapping_static/partials/analysis/tokenfilters.html",
	)
}

func mapping_static_partials_analysis_tokenfilters_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_tokenfilters_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/tokenfilters.html", size: 1189, mode: os.FileMode(420), modTime: time.Unix(1445123724, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_tokenizer_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x54\xc1\x8e\xdb\x20\x10\xbd\xe7\x2b\x10\xa7\xf6\xe0\x5a\xed\x5e\x6d\x5f\x72\xee\x5e\xba\x3f\x80\xf1\xc4\x46\x19\x83\x05\xe3\x6d\xd3\x28\xff\x5e\xc0\x4e\x02\x5e\xab\xaa\x8a\xb4\x88\x65\x1e\x33\xef\xbd\xc9\xb8\xea\xd4\x3b\x93\x28\x9c\xab\xf9\x68\x3a\x81\xc5\x00\xa2\x03\xcb\x9b\x03\xf3\xab\x1a\x5e\xf2\x28\x29\x42\xe0\xcd\x71\x76\x64\x46\xf6\x66\xce\xa0\xd5\x6f\xb0\x55\x39\xbc\x34\x87\xaa\xf4\xd9\x9a\xc3\xe1\x63\xd2\xd6\x74\x97\x7b\xca\x10\xd4\x7d\xe1\x06\xf3\xb3\xe6\x60\xad\xb1\xdf\xc1\x39\xd1\x03\x8f\xf1\xb8\xd6\xc7\x02\xc1\x12\x8b\x7b\xd1\x09\xdd\x83\x0d\x2f\x25\x1a\x71\x4e\xc0\xd6\x20\xac\x58\xde\xb0\xeb\x35\xcd\x79\xbb\x2d\x45\x57\x66\xf1\x7c\x32\x76\xbc\x57\x08\x67\xbe\x66\x88\xe7\xe6\x91\x37\x55\x11\x42\x45\x6f\xcd\x3c\x25\x80\x08\x42\xd1\x02\x32\x1f\xaf\x39\x69\x31\x7a\x6f\x5e\xfd\x5e\x95\xf1\x7e\x83\x55\x7a\x9a\x29\x28\xf0\xa6\x00\xd6\x3c\xe2\x33\xc8\xba\xe8\x32\x79\x3e\x04\xbf\x88\x67\x0c\xa4\xd1\xe4\xb9\xee\xbe\x51\xdd\x9d\x01\x9b\x50\x48\x18\x0c\xfa\x3e\xd6\xfc\x35\x92\x7a\xaa\x4a\x9c\xf8\x3f\x95\xf7\x9e\x07\x92\xbc\x79\xf3\xfb\xbe\xda\x24\xb1\x34\x58\xb8\xb1\xf8\xfa\x8d\x45\x0b\xf6\x6b\x38\x40\x90\xd1\x1e\x39\x84\x5e\x27\xa5\x42\x91\x63\xbc\xfc\xf4\x79\x57\x7c\x62\xea\xe3\xd1\x97\x48\x70\x17\xfd\xaf\x9e\x2e\xa6\xe6\x82\x3f\xe0\x2a\x33\x91\x32\x3a\x50\xb0\x30\x81\xa0\x9c\xb8\x97\xcc\x32\x21\x8e\x37\xd7\x6b\x7a\x73\xbb\x55\xe5\x92\x63\xe3\x48\xb9\x58\xb2\xbd\x8d\x0d\xdc\xfc\x9b\xf7\xf3\x31\x5e\x1b\x33\x42\x40\x69\x89\x73\x07\xcc\x59\xb9\x38\x30\x09\x1a\x78\xb9\x0e\x67\x19\x6e\xfe\x36\xc9\x27\x63\xe8\xf9\x79\x68\x67\x22\x2f\x7d\x45\xb4\xa4\x99\xff\x2b\x3a\x38\x89\x19\x89\x2f\xc3\xaa\xe4\xd9\xff\x02\x84\x96\x80\xbe\x7b\xcd\x31\x9e\xaa\x72\x79\x9a\xe7\x79\xe2\xdb\x59\x61\xe7\xe1\xeb\x28\x2c\xf1\xbc\x47\x9b\xa2\x93\x55\xa3\xb0\x17\x36\xcd\x88\x85\x55\xfd\xe0\x3f\x06\x3f\xc4\x3b\x3c\x2b\xad\xa2\xfe\x04\x00\x00\xff\xff\xb9\x87\xee\xfe\xf3\x04\x00\x00")

func mapping_static_partials_analysis_tokenizer_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_tokenizer_html,
		"mapping_static/partials/analysis/tokenizer.html",
	)
}

func mapping_static_partials_analysis_tokenizer_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_tokenizer_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/tokenizer.html", size: 1267, mode: os.FileMode(420), modTime: time.Unix(1445125860, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_tokenizers_exception_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x54\x41\x6f\xdb\x3c\x0c\x3d\xfb\xfb\x15\x84\xf0\x1d\x9a\x83\xeb\x66\x67\xc7\xc0\x30\xec\xb0\x4b\x51\x14\xfb\x03\x8a\xc5\xda\x42\x68\xc9\x90\xe4\x26\x59\xd0\xff\x3e\xda\xb2\x95\x64\x4d\xbb\xc3\x02\x04\x20\x14\xf2\x3d\xf2\xf1\x31\x00\xa5\xd2\xaf\x50\x93\xf4\x7e\x23\x5e\xac\xeb\xf2\xc6\xd9\xa1\x17\xd5\x7f\xc0\x9f\x92\xe4\x16\x09\xf8\x7d\x23\xf0\x20\xbb\x9e\xf0\x87\xe9\x87\xf0\xc4\xe9\x7b\xeb\xd4\x5a\x54\xdf\x0f\x35\xf6\x41\x5b\x03\x4f\x32\x04\x74\xc6\x97\xc5\x54\x15\x11\xb2\x72\xa0\x05\x9e\xb4\x0f\x33\x3c\x98\x26\xf7\xad\xdd\x6f\x44\xb0\x3b\x34\xfa\x17\xba\x7b\x5c\x90\xfc\x3d\xa1\x69\x42\x0b\x25\xac\xe7\x46\xb2\xac\x24\xfd\x1e\x27\xd7\x01\x3b\x51\x3d\x5a\x83\xcc\xaa\x17\xca\x62\x60\xf6\xec\x9f\xa8\x2b\x78\x10\x30\xe8\xdc\x5b\x17\xe4\x96\x70\xac\xea\xac\x42\xba\x5d\x26\x46\xbe\x51\xaf\x0f\x9b\x1c\x01\x1c\xf6\x28\x03\x4b\x09\xda\xc0\x2d\x18\x80\xe0\x64\xbd\x83\xed\x11\xfe\xd7\x46\xe1\x41\x54\xa5\xef\xa5\x59\x40\x1b\x3a\xf6\xad\xae\x59\xec\x14\xe5\x9d\x36\x03\xf3\x97\xc5\x98\x58\xc1\xe9\x04\x08\x6f\x6f\xb1\x8c\x39\x6b\xd2\xf5\x6e\x23\x1c\x76\xf6\x15\xd3\xb2\xee\x22\xfc\x4a\x7c\x86\x1c\x6b\xa0\x1f\x88\x72\xa7\x9b\x36\x24\x96\x28\x76\x36\x2b\xcd\x73\x17\xec\xa2\x29\xf8\xc8\x4d\xe3\x02\xcf\x5e\xda\xb7\x72\x02\x9b\x8d\x92\xf1\xaf\x17\x85\xb5\xa5\xdc\x77\xf9\xfa\x61\x5e\x3e\xc3\xea\xd1\x75\x17\x3b\x30\xb8\x77\xd8\xe0\x81\xd7\x19\x8e\x3d\xf2\x52\xf0\x10\xc4\x15\x33\x4f\x10\x9c\x25\x01\x5a\x8d\xe6\x9d\x07\x7f\x9e\xab\x7a\x92\x35\xb6\x96\x14\x72\x3b\x22\x19\x67\x1e\x63\x8c\xdf\x37\xf4\x65\xca\xe3\x5e\xb7\x43\x08\xf6\x52\x5d\xa9\xd4\x59\xda\xd0\x6a\xbf\x5a\xfa\x8a\xa9\xa9\xb3\x6d\x30\xc0\xdf\x5c\xe1\x8b\x1c\x28\x5c\x69\xfb\x55\xa9\xb2\x88\xf9\x33\x4f\x52\xf5\xaf\xf2\xfe\x79\xac\xd2\x48\x3a\xb2\xb7\x7e\x2e\x26\x13\x55\x0a\xc7\x0c\x78\xc6\x4e\x6a\xa3\x4d\x03\xd3\x41\x5f\xdd\x2c\x43\x79\x24\xac\x27\xc1\xeb\x56\x9a\x06\x2f\x5c\xff\x6d\x7a\x50\x77\x2b\x71\xf3\x26\x52\xf4\xc9\x36\xce\x39\x0b\x21\x53\xda\xf8\x2f\x72\x71\x26\x29\xed\xea\x5c\x1e\x65\x87\xec\xf7\xd3\x29\xbd\xb0\xdb\x8b\x58\x9d\xfa\x2f\xe2\x00\x67\xf1\x7e\x07\x00\x00\xff\xff\xd0\x93\x5d\xa0\xe9\x04\x00\x00")

func mapping_static_partials_analysis_tokenizers_exception_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_tokenizers_exception_html,
		"mapping_static/partials/analysis/tokenizers/exception.html",
	)
}

func mapping_static_partials_analysis_tokenizers_exception_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_tokenizers_exception_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/tokenizers/exception.html", size: 1257, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_tokenizers_generic_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func mapping_static_partials_analysis_tokenizers_generic_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_tokenizers_generic_html,
		"mapping_static/partials/analysis/tokenizers/generic.html",
	)
}

func mapping_static_partials_analysis_tokenizers_generic_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_tokenizers_generic_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/tokenizers/generic.html", size: 0, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_tokenizers_regexp_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8f\x41\xae\xc2\x30\x0c\x44\xd7\xf9\xa7\xb0\xb2\xef\xef\x05\xd2\xee\xb8\x00\x37\x08\x8d\x29\x11\x6e\x1c\x39\x09\x0a\x9c\x1e\x17\x36\x20\x56\x96\xc6\x1e\xcf\x1b\xe3\x42\xbc\xc1\x42\xbe\x94\xc9\x9e\x59\xb6\x61\x15\x6e\xd9\xce\x7f\xc6\x38\xf2\x27\x24\x50\x75\xb2\x95\xaf\x98\xe2\x03\xe5\x88\x2b\x76\xdd\xeb\x6c\xe4\x05\x0e\x3d\x0b\x96\x12\x39\xb9\xf1\x75\xbf\x3b\x8d\x8b\x29\xb7\x0a\x69\x1d\x36\x0e\x48\x1f\xfe\x7f\x79\x3f\x80\x7a\xcf\xa8\x3a\xf6\x6a\xbf\xf2\x17\x4e\x55\x98\x2c\xc4\xf0\x1b\x0b\x99\xfc\x82\x17\xa6\x80\x0a\xb5\x53\xba\x51\x0b\xcc\xcf\x00\x00\x00\xff\xff\xfd\x95\x57\x19\xc7\x00\x00\x00")

func mapping_static_partials_analysis_tokenizers_regexp_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_tokenizers_regexp_html,
		"mapping_static/partials/analysis/tokenizers/regexp.html",
	)
}

func mapping_static_partials_analysis_tokenizers_regexp_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_tokenizers_regexp_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/tokenizers/regexp.html", size: 199, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_tokenizers_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x54\xcb\x6e\xdb\x30\x10\xbc\xfb\x2b\x08\x9e\x12\xa0\x92\x51\xf4\x2a\xe9\xd4\x1e\x9b\x53\xfa\x01\x94\xb8\x91\x08\x33\x24\x41\xae\x62\xab\x41\xfe\xbd\x4b\xca\x7a\x58\x4e\xed\x5b\x0c\xc3\x1e\xae\xbc\x3b\x33\x9a\x95\x0b\x14\xb5\x06\xd6\x68\x11\x42\xc9\xc7\x43\xfa\xcc\x02\x7a\xe5\x40\xf2\x6a\xc7\x58\x81\x1d\x08\x19\x51\xc4\x7e\x04\xa9\x5c\x3d\x89\x57\x28\xf6\x04\x56\xb5\xe7\xc1\x5d\xd5\x96\x33\xa1\x34\x21\x56\xce\x53\x0b\xac\xad\x1c\xe6\xf9\xcc\xb4\x99\x07\x07\x02\x4b\xfe\x80\x86\x18\xbe\xe1\x9b\xd0\x8f\x4c\x19\x7a\x4b\x38\xfd\x16\xce\x29\xd3\xe6\xc2\x08\x3d\x04\x15\x72\xb4\x07\x30\xea\x2f\xf8\xc0\x17\x52\x59\xbd\xbf\xa7\xee\x8f\x0f\xe2\x92\x9b\x0b\x34\x30\x47\x12\x7a\x7d\xf1\x0c\xe9\x20\xd5\xdb\x74\x6b\x6a\x34\x59\xeb\x6d\xef\xd8\x8c\xb2\x53\xe0\xcc\x5b\x0d\x25\x4f\x67\xbe\x74\x52\x6f\xdd\x23\x5a\x13\xad\x34\x5a\x35\x87\x92\x83\x54\xf8\x3c\xe9\x3c\xdb\x62\xc9\x17\x67\x51\x08\x71\xa4\x16\xbe\x9a\x32\xbd\x16\x11\x89\x5e\xc2\x8b\xe8\x35\x26\x7c\x0a\x17\xbc\xc4\x1c\x9c\x30\x53\x47\xab\x07\xd7\xa9\x86\x84\xcc\x28\x8b\x42\x38\x13\x5e\x89\xac\x53\x52\x82\xa1\xe0\x7d\x0f\x9c\x32\x8a\xad\x15\xfb\x45\x3f\x58\x5b\xd9\x8f\xc2\x6e\xdb\x93\xa0\x01\x61\x63\xf0\xab\xad\xa1\x17\xa1\xbb\xe9\xed\x67\x92\x79\xd3\x5d\xb1\xa7\xdc\xe7\x85\x98\x97\x63\xda\xdb\x79\x45\x43\x67\x8f\x25\xff\x83\x4a\x87\xfc\x00\x43\x78\xb8\xb7\x9b\x8f\xb9\x06\xd3\x62\xc7\x0a\xf6\x7d\xbd\xa7\xac\xb1\x3a\xaa\x2b\xf9\x0f\x5e\x3d\x59\x03\xd7\xa4\xf4\x3d\x3d\x22\x05\xbe\x58\x8b\x9f\x3c\x8c\x97\x73\x76\xff\x8f\xca\xc0\x71\xc9\xe9\x6e\x44\x9b\x80\xc2\xeb\x45\x4e\xae\xd7\x3a\xf3\xaa\xed\x90\xa4\xc3\x91\xcd\x83\xb7\xf7\xf5\x53\x4f\xa3\x13\x02\xf1\x2f\xa7\xda\xed\xfe\x05\x00\x00\xff\xff\xde\x85\x6e\x79\x8f\x04\x00\x00")

func mapping_static_partials_analysis_tokenizers_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_tokenizers_html,
		"mapping_static/partials/analysis/tokenizers.html",
	)
}

func mapping_static_partials_analysis_tokenizers_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_tokenizers_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/tokenizers.html", size: 1167, mode: os.FileMode(420), modTime: time.Unix(1445123752, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_wordlist_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x54\xc1\x6e\x9c\x30\x10\xbd\xef\x57\x8c\x7c\x4a\xa4\x52\x54\xad\x7a\xa8\xc4\x22\x55\xb9\xb6\x39\xb4\x87\x9e\x0d\x9e\x05\x2b\x03\x46\xb6\xc9\x66\x1b\xe5\xdf\x3b\x36\x6c\x02\x2c\xc9\x56\x55\x83\xb4\xac\xb1\x9f\xdf\xbc\xf7\x3c\x90\x29\x7d\x0f\x25\x49\xe7\x76\xa2\x31\x4a\x52\x52\xa3\x54\x68\x45\xbe\x01\xbe\xb2\x7a\x3b\x5f\xf5\xda\x13\x8a\xfc\xa6\x77\xde\x34\xf0\xcb\x58\x05\xdf\xb4\xf3\x59\x5a\x6f\xf3\x4d\x96\x32\x5b\xbe\xd9\x9c\x93\x16\x46\x1d\x4f\x94\x61\xb1\xad\x12\x57\x9b\xc3\x4e\xa0\xb5\xc6\x7e\x47\xe7\x64\x85\x22\xae\xc7\x6b\xdc\x2c\x09\xad\x87\x78\x4f\x94\x6c\x2b\xb4\x61\x67\x49\x46\xde\x4d\xc0\xd6\x10\x8e\x58\x91\xc3\xe3\xe3\x94\xf3\xe9\x69\x28\x3a\x2a\x8b\xe3\xbd\xb1\xcd\xa9\x42\x18\x8b\x91\x21\x8e\xf3\x67\xde\xa9\x8b\xb0\x94\x54\xd6\xf4\xdd\x04\x10\x41\x24\x0b\x24\xe0\xf5\x9d\xf0\xad\x6c\x38\x9b\x5b\xbe\x67\x69\x9c\x5f\x60\x75\xdb\xf5\x3e\x38\xe0\x50\x90\x76\x22\xe2\xc1\x1f\x3b\x2e\xee\xf1\xc1\x8b\x19\x7c\x1e\x45\x54\x50\x9a\xd6\xb3\x56\x01\x5a\x9d\xca\x41\x47\xb2\xc4\xda\x10\x1f\xda\x4e\xdc\x46\x05\x2f\x16\x26\xb6\xff\xc9\xd2\x81\x0f\xd8\x89\x3c\x9c\xb3\x5b\xf7\xe4\x90\xb0\x9c\x9a\x1a\x26\x50\xc5\x3d\x02\x9a\x9e\xbc\xee\x08\x23\x62\x1c\xb3\x76\xdb\xe3\xaa\xdb\xe8\x6c\xa8\x0a\x4e\xff\x66\xe8\x67\xb1\x1a\xc1\xea\x66\xae\x61\x3a\xaf\x4d\xcb\x68\xad\x1e\x40\x3a\x08\x5c\xc1\x0b\x5c\xf1\xc4\x87\xf8\x78\x0d\xba\x85\xd1\xd9\xdc\x4c\x3a\x88\xff\x9f\x01\xd6\x92\x9b\x72\x3d\xba\x09\x57\x69\x28\x71\x4d\xf2\x65\xc1\xb4\xd6\x33\x78\x08\xc9\x5e\x6c\x9b\x37\x1a\xe7\x99\x62\xd6\x3a\x21\x90\xb3\x3c\xa2\xfb\x0b\xa2\xb7\x67\xa2\x19\x56\xf4\xde\x9b\x76\x78\x5b\x75\x79\xc7\xaf\xa7\x8a\x1d\x71\x75\xfd\x8a\x5a\xbe\x06\x47\xc3\xce\xd7\x51\x63\xf1\xc2\xb7\xc0\x3f\x16\x10\xff\x14\xee\x25\x77\x97\xc8\xbf\x2a\x95\xa5\x03\xc7\xdf\xc8\xb2\xd8\x98\x7b\xbc\xa4\x8c\xf1\x4a\x3b\x59\x10\xaa\x45\x83\x7f\x24\x6c\x2b\x5f\x43\x06\x9f\xde\xd5\x18\x74\x3d\x51\x62\x75\x55\xb3\xc7\x1f\x51\xf4\xba\xcd\xc5\x99\x4d\x1e\xb3\x34\xb4\xc2\x5b\x5f\xe9\xbd\x31\xfe\xe5\xd3\x3f\x66\xb5\x90\x75\x0a\x7a\x92\x61\x29\xdb\x12\x89\xf3\xcb\x6f\xe2\x68\x2e\xec\x3c\xf3\xa2\xd7\x14\xe2\x9e\xe7\xb2\x2c\xd4\x59\xdd\x48\x7b\x9c\x19\xff\x29\xa7\xb6\x47\x23\x7f\x02\x00\x00\xff\xff\x64\x3a\x8f\xe9\xc3\x06\x00\x00")

func mapping_static_partials_analysis_wordlist_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_wordlist_html,
		"mapping_static/partials/analysis/wordlist.html",
	)
}

func mapping_static_partials_analysis_wordlist_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_wordlist_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/wordlist.html", size: 1731, mode: os.FileMode(420), modTime: time.Unix(1445126958, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_analysis_wordlists_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x54\x4d\x8f\x9b\x30\x10\xbd\xe7\x57\x8c\x7c\xda\x95\x4a\xa2\xf6\x0c\x9c\xda\x5b\xbb\xb7\xaa\xc7\xca\xe0\x59\xb0\x62\x6c\xcb\x1e\x36\x41\xab\xfd\xef\x1d\xc3\xf2\x91\x74\x9b\xdc\x1a\x45\xc9\x1b\x87\x79\xf3\x5e\xde\x40\x4e\xb2\x32\x08\xb5\x91\x31\x16\x62\x2a\xc6\xcf\x2c\x52\xd0\x1e\x95\x28\x77\x00\x39\xb5\x28\x55\x42\x09\x87\x09\x8c\xc7\xe5\x93\xec\x30\x3f\x30\xd8\x9c\xad\x35\xa3\xf1\xea\x74\xf2\xce\x90\x53\xe5\xd4\xb0\x70\x81\x6d\xb2\x80\x1e\x25\x15\xe2\x81\x3a\xcb\x74\x9f\xa8\x7b\x91\xe6\x11\xb4\xe5\xb7\xc2\xf3\x0f\xe9\xbd\xb6\xcd\x5e\x5a\x69\x86\xa8\xe3\x9e\xdc\x11\xed\xef\x4e\xfa\x28\xd6\xb1\xaa\x7c\x7d\x9d\xfa\xdf\xde\x78\x9c\xda\xfe\xf2\x0e\xb9\x50\xfa\x65\x36\x5b\x91\xcd\x9a\xe0\x7a\x0f\x0b\xca\xce\x51\x40\x70\x06\x0b\x31\xd6\x62\xed\xe4\xde\xaa\x27\x72\x36\x09\xae\x8d\xae\x8f\x85\x40\xa5\xe9\x97\x0b\xea\xbb\x8e\x34\x6b\x87\x49\xbc\x00\x1a\x3c\xd3\x4c\x3d\x62\x43\x33\xbf\x56\x15\xe3\x7c\x85\xcf\xb2\x37\x34\xe2\x73\xbc\x18\xcc\xa3\xa3\x97\x76\xee\x68\xcc\xe0\x5b\x5d\xb3\x92\x05\x65\x49\x89\x00\x19\xb4\xcc\x5a\xad\x14\x5a\xce\x32\xf4\x28\x38\x8a\xd4\x5a\xc2\x37\xbe\x60\xeb\xe5\x30\x09\xbb\xed\x4f\xa1\x41\xc2\x2b\x87\xff\xdb\x1a\x05\x19\xdb\x9b\xde\xbe\x8e\x32\x6f\xba\xcb\x0f\x1c\xfc\xb2\x11\xcb\x76\xcc\xeb\xb9\x6c\x62\x6c\xdd\xa9\x10\x3f\x49\x9b\xb8\x3f\xe2\x10\x1f\xee\x2d\xe0\xe3\xde\xa0\x6d\xa8\x85\x1c\x3e\x6f\x97\x11\x6a\x67\x92\xba\x42\x7c\x11\xe5\x93\xb3\xf8\xf7\x50\xfe\x9e\xef\x84\x9c\x9e\x9d\xa3\x0f\xee\xaf\x4b\x9e\xdd\xbf\xa3\xb2\x78\x5a\x72\xba\x9b\xd0\x55\x3e\xb1\xbb\x88\xc9\xf7\xc6\x64\x41\x37\x2d\xb1\x72\x3c\x41\xe2\x85\x44\x7c\xfd\xb7\x7e\x68\x69\x32\xc2\x20\x3d\x44\xca\xdd\x9f\x00\x00\x00\xff\xff\x4c\x21\x1b\x1a\x60\x04\x00\x00")

func mapping_static_partials_analysis_wordlists_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_analysis_wordlists_html,
		"mapping_static/partials/analysis/wordlists.html",
	)
}

func mapping_static_partials_analysis_wordlists_html() (*asset, error) {
	bytes, err := mapping_static_partials_analysis_wordlists_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/analysis/wordlists.html", size: 1120, mode: os.FileMode(420), modTime: time.Unix(1445123824, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_mapping_index_mapping_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x58\x5f\x6f\x9b\x3e\x14\x7d\xef\xa7\x70\x79\xe9\xef\xa7\x89\xa2\xed\x39\x89\xd4\xa6\xaa\xf6\xb0\x4d\x95\x56\x69\x8f\x91\x63\x3b\xc1\xaa\xc1\x96\x6d\x92\xa6\x9f\x7e\xd7\x60\x18\x29\xe4\x0f\x81\xa4\x5b\x1e\x0a\x31\xf6\xb9\xe7\xdc\x7b\x8f\x6b\x32\xa2\x7c\x85\x88\xc0\xc6\x8c\x03\x9e\x52\xf6\xfa\x1d\x2b\xc5\xd3\x65\x30\xb9\xba\x1a\x5d\x87\x21\x1a\x9f\xf6\x41\x61\xe8\x10\x6a\xe8\x86\x11\xcb\x65\x1a\xb4\x0f\x7f\x65\x98\x32\x8d\x4c\x2c\xd7\xcf\x1b\xc5\x3c\x0b\xf3\xb3\x5a\x84\x50\x7d\x95\x96\xeb\x7c\x6c\x7b\x94\x48\x11\x9a\x24\xfc\xfc\xc5\x3f\x83\xa7\x18\xa5\xcb\xd0\xa1\x8e\x83\xeb\x5d\xe0\x7e\x2e\x7c\x60\x2e\x11\x9c\xbc\x00\xad\xf6\xb9\x68\x8c\xac\xce\x58\x85\x0f\x11\x78\x19\x7d\x29\x36\x2a\xe6\x04\x26\x55\x77\x21\x89\xd9\x4a\xc3\x55\xf3\x65\x6c\x83\xc9\x28\xe2\xb5\x95\x02\xcf\x99\x98\xb8\x28\xa8\x0c\x33\x8a\x8a\xc1\x92\x7e\x84\xdb\x94\x0c\x23\x64\x81\x85\xe9\xae\x84\xca\x75\xda\x43\xc8\x28\x82\x7a\xe5\xd5\x2c\x6e\xfc\xa5\xad\x25\xee\x25\xdd\x20\xbb\x43\xe6\xc1\x5c\xf4\xeb\x18\x9f\x3c\x4c\xe9\x34\xe6\x82\x7a\xf0\xff\xd2\x4c\x88\xff\x83\xc9\x1d\xa5\xa8\xae\x76\xa7\xba\x53\x39\xb8\xa7\xc0\x82\xa7\x44\x64\x94\x81\x48\x8b\x2d\x27\x33\xa5\xd9\x82\xbf\xa2\x4f\xe8\x26\x52\x58\x5b\x0e\x05\x8c\x92\x82\x42\xe4\x12\x15\xfa\x2f\xb7\xb1\x4d\xc4\x8d\xab\x92\xa7\xb3\x27\xef\xe5\xf5\x63\xbc\x7e\x97\x62\xb1\x79\x63\x7a\x78\xa3\x37\x90\x77\x99\xe3\xfd\xc4\x33\x58\xbc\x0a\x71\xbc\xbd\xfb\xd0\x1f\xda\xd8\x07\xe9\x77\x35\x35\x6e\x13\xb7\x5f\xfe\xc9\x7d\xb1\x6d\x25\x64\x34\xd9\x6b\xa7\x9c\x9a\xe1\xfe\xc6\x31\xf8\x77\xcc\xf4\xc8\x85\x3d\x87\x95\xde\xe1\xee\xea\xc4\xed\x69\x67\xb0\xd1\x34\x33\x56\x26\xc8\xc7\x39\xde\x4b\xa7\xf2\x1f\xda\x47\xc7\xf1\xef\x6a\xa6\x45\x53\xdd\x3e\xf5\x27\x77\x45\xc6\xe7\xa1\xc5\x73\xc3\x6c\x4d\x98\x1f\x44\x31\x74\x21\xfc\xe3\x19\x07\xd3\x18\x6b\x4c\x20\x60\x29\xb3\x96\xbf\x1e\x6e\x24\x00\xeb\x85\xb6\xf8\xb1\x48\x9b\xe7\xb2\x8f\xdd\xb3\x7c\x61\x29\x7f\x1b\x8c\x96\xad\xf0\x7a\xb3\x1a\x36\x5f\x39\xb1\x01\x12\xf6\x4b\x6a\x8a\xbe\x71\x63\x07\xe2\xb5\x06\x3c\xe1\xe0\x8e\x25\x55\x0d\x54\x7d\xf7\x97\x6e\xbe\x4f\x5a\x2a\x06\x72\xd9\xf0\xfb\x6f\x13\x7a\xd7\x16\xd6\x98\x79\x8e\xc3\x0c\x5d\xe1\x94\x30\x7a\xfc\xfe\xdb\x8f\xff\xe0\xa7\x99\x03\xfc\xbb\xee\xbf\xaa\x55\xdd\x81\x04\xf4\x3a\xce\xf8\xa7\x0b\xa9\x93\x70\xa9\x65\xa6\x82\xf6\x77\xb1\x47\xce\xc4\x7b\x99\x2e\x7f\xa9\xca\x6c\xfe\x62\x35\x0e\x2c\x7b\xb5\xc1\x16\x20\x24\xd1\x6a\x29\x6a\x25\xaa\x0a\x95\x48\xca\xc4\xf6\xcf\x04\xb7\x0e\x66\xb6\x70\x81\x1a\x2b\x94\xc0\x84\xc5\x52\x80\x43\xc6\x41\xed\x4b\x10\xfd\xc9\x79\xcd\xfc\xc7\x4a\x7b\x60\x0b\x9c\x09\x9b\xbf\x80\x9d\x59\x1c\x2d\x42\xcd\x1c\xdc\xa5\xe5\x95\x27\xe0\xa6\x44\xc3\x04\x74\xd1\x21\xce\xe5\xf9\xb5\xc1\xdb\x2d\x94\xca\x75\x21\x30\xb1\x08\x1b\x64\x11\x10\x82\xbf\x3c\xad\x4e\xe6\x3f\x70\xc2\x4c\x73\x69\x5b\x2e\xeb\x9b\x77\x41\x6d\x10\xfd\x0f\xd8\xb2\xe8\x99\x27\x0c\x3d\x61\x6d\x4e\xcf\x03\x05\x1c\x0b\x30\x33\x95\xc3\x74\x4b\x87\x5b\xec\x38\x14\x14\x3e\x3e\x29\x97\x70\x74\x99\xb8\x8b\x9a\xfa\x7e\x63\x19\xba\xd3\x1a\x6f\xd0\x54\xa6\x2b\xd8\x2c\xbb\x57\x7c\x0e\x18\x33\xec\x30\x66\xa4\xc4\xe8\x56\x6e\x87\x90\x93\xa8\x38\x0c\x5d\xf2\x0b\x1c\x5e\x0a\xa4\xdf\x01\x00\x00\xff\xff\x57\xb6\xbd\xb5\xd8\x15\x00\x00")

func mapping_static_partials_mapping_index_mapping_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_mapping_index_mapping_html,
		"mapping_static/partials/mapping/index-mapping.html",
	)
}

func mapping_static_partials_mapping_index_mapping_html() (*asset, error) {
	bytes, err := mapping_static_partials_mapping_index_mapping_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/mapping/index-mapping.html", size: 5592, mode: os.FileMode(420), modTime: time.Unix(1445119850, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_mapping_type_mapping_tree_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x58\x4d\x6f\xe3\x36\x13\xbe\xe7\x57\x30\x3a\xac\xdf\x17\xad\xd7\xf7\x22\x36\x50\x6c\xb1\xe8\xa5\xc5\x1e\x72\x37\x18\x89\xb6\xd8\xd0\xa4\x40\xd1\x69\xd2\xd4\xff\xbd\x1c\x7e\xc8\x24\x45\x7d\x79\xb7\x8b\x0a\x48\x2c\x51\x9c\xaf\x47\xc3\xe1\x33\x7c\xa8\xe8\xcb\xee\x0e\x21\xf8\x45\x67\xba\x56\x92\x90\x75\x8d\x79\xc5\x88\x1e\x35\x57\xc9\x70\xdb\x6e\x8b\x13\x6e\x1a\xca\x8f\xbf\x9a\x77\xc5\xce\xbc\x7d\x68\x1b\xcc\x11\x3f\xae\xe9\xa1\x9b\xf0\x71\xff\x4c\x79\x85\xb6\x5b\xb4\x72\x23\x8f\x6f\x0d\x59\x39\x09\x2d\x43\xbd\xc6\x23\x7b\x6b\x6a\x5a\x0a\x8e\xba\xbb\xf5\x81\x82\xf2\x87\x0d\xd5\x7f\xa0\x7c\xd2\xce\xfd\x90\x9d\xf7\x8b\x15\x75\x6a\x86\xf5\x70\x7c\x22\xe0\x2e\x3f\x33\x16\x78\xb9\xab\xc8\x01\x9f\x99\x02\x5f\x26\x34\xdd\x77\x2e\x91\x8a\x2a\x7d\x73\x55\x33\x64\xb0\x9b\xa1\x1d\x7d\x0f\x5f\x5c\x2e\x5e\x34\x34\xe7\x35\x39\xe4\xb0\x52\xb2\x0d\x54\xe4\xbd\x21\x1c\x3f\x31\x52\x15\xbb\xbf\x51\x45\x5b\x73\x1f\x82\x3a\xe8\x9f\x93\x43\x1f\x3e\x20\x3f\x54\xbd\x69\xdf\x68\x19\x98\x44\x48\x6b\xb5\xa3\x37\x2b\xb5\x00\xef\x31\xc7\xec\xed\x2f\x22\x13\xed\x57\x5c\xd2\x89\x97\x4b\x6c\x32\x4a\x95\xc9\xb4\x71\xdf\x28\xf4\xc4\xa4\xc0\xbd\x4b\x81\xc0\x89\x0a\x2b\xbc\xe6\xa2\x92\xf8\x78\x4d\x0c\xde\x9c\xd5\xcc\x9c\x0f\x54\xe9\x4b\xe9\xb1\x6d\xa1\xc8\xab\x2a\x50\xc3\x70\x49\x6a\xc1\x2a\x22\xb7\x45\xc3\x08\x6e\x09\x22\x5c\x11\x89\xb0\x99\x87\x4c\x92\xc4\xf2\xda\xe6\x49\x54\x84\x25\x99\xb4\x59\xe8\xda\xad\x6e\x35\x52\x34\x44\xaa\xb7\xe5\xae\x8d\xac\x1c\xbf\x60\x02\x75\x41\x8e\x7f\x12\x5c\x49\xc1\xae\xa9\xfe\x80\xfd\xeb\x46\x7f\xaa\xb5\xa4\xc7\x5a\xa1\x27\xc5\xe1\x6f\xfd\xda\x06\x6a\x82\x4f\x77\x17\xba\x99\xc9\xc9\x22\x9a\x50\x32\x5a\x3e\x6b\xfd\xa2\x39\x37\x8f\xe2\x78\x64\xe4\x7f\x6e\xfe\xff\xc3\x04\x1d\x2f\x63\x0d\x3b\xb7\xbe\x8c\xe1\xce\x79\xa8\xb1\x7d\xf7\x8d\x25\x88\x14\x53\xae\x17\x41\x08\x6c\x36\x88\xc1\x30\x82\x15\x08\x96\xf4\xac\xb6\x16\x7f\xba\x50\x20\x03\x9c\x40\xf2\xed\xbc\x47\x30\x2b\x5a\x82\x7e\x6f\x08\x46\x70\x80\x10\xae\xaa\x4f\x35\x65\xd5\x6f\x56\x6b\x16\x25\x7b\x51\xde\xea\xc4\x41\x25\xcc\xf6\x4e\x04\xb8\xd8\x14\x49\x8c\xcd\x34\xfe\x99\x12\x56\xcd\x35\x7d\x80\xc9\xe3\x86\xa3\xc7\xf8\x61\x3c\xf5\xcc\x0f\x64\xf3\x8c\x1c\x74\x31\xc0\xec\x9f\xa1\x92\xdf\x92\x60\x84\x97\x94\x25\x29\x36\x58\xfb\x7c\xc9\xcb\xe7\x40\x6e\xc1\x4d\x14\xc1\xaf\x5e\x86\x29\x04\xbf\x08\xde\xad\xb3\x1f\xd1\x01\xb3\x96\x2c\x40\x43\x92\x93\x78\x21\xfd\x05\xf7\x2f\xbb\xa9\xe4\x79\x89\x97\xe2\x39\xe7\xe1\xd0\xf6\xb4\xd5\x1f\x0b\x0c\xcc\xd8\xa7\x26\xf3\x52\x49\xdc\xd6\xf3\xc3\xb5\x70\x7e\x96\xe2\xf4\x05\x4b\x5d\xfe\x83\x88\x6b\xda\x2e\x88\xd8\xda\xcd\x27\xa9\x7d\x70\x85\x2a\x87\x40\x3f\x40\xf3\x19\x24\xc1\xf9\x48\x3a\x4c\x19\x7e\x22\x6c\xe7\x76\x43\xbb\xbb\x95\x35\x29\x9f\x9f\xc4\x6b\x91\xd9\xa9\x7c\xf9\xdc\x24\xc5\xc3\x8d\x77\xb5\xc0\xaa\xbd\xd1\x88\x27\x50\xa9\x11\x37\x9e\x33\xd2\x55\x1f\x77\x03\x77\x82\x75\x24\x5d\x07\x4d\xda\xbb\xee\xd3\x8d\xec\x6b\x7d\x6f\x4c\x21\xec\xf2\xdf\x60\x68\x43\x30\x2f\xae\x7b\x91\x73\x84\x51\xd0\x21\x49\x43\xb0\x72\x73\x74\x61\x45\x79\x6d\x28\xf2\xf0\x2e\xf9\x84\x66\xee\x75\xaa\xc9\x39\xf3\xe2\x7d\xe5\x3e\xfb\xea\x27\x5b\xa7\xbb\x3c\xb8\x14\xd1\x06\x9a\x6f\x52\x52\x13\x51\x9b\x62\x64\x23\xda\x11\x5b\x88\xb6\x8d\xf7\x77\xfb\xd2\xd3\x9d\x8e\x90\x5f\xb5\x0c\xb0\xf0\x9e\x19\xab\x08\x90\x05\x0e\xee\x15\xc3\x73\xca\x60\x47\x85\x4d\x8f\xe3\x19\xfc\xaa\xb7\xc7\x65\xa4\x7c\x9d\x88\x23\xe9\xef\x8e\x9a\x65\xb7\x04\xcb\xb2\x06\xd5\x08\xb7\xd0\xf6\x78\x37\x6d\x33\xd2\x75\x3f\x81\xbd\x8c\xe7\x59\x2f\x3c\x5d\x87\x0a\x16\x44\x03\x54\x14\xd8\x66\x3f\x12\xcb\xfa\x63\xe1\x08\xfe\x45\xe6\x35\xed\x25\xaf\x00\xbc\xb9\x99\x2d\xd6\x2a\x21\xcd\xf7\x32\x37\x0b\xac\x95\xec\x5c\x91\x3d\xe5\x7b\x0c\x7d\x24\x98\x35\x23\xb0\x52\x34\xac\x30\x0a\x60\x7a\x12\xb2\x50\xad\xa6\xe0\xa7\xfd\x0b\x29\xb5\x4f\xed\x22\x3c\xbd\x17\xa0\x00\x39\x05\x33\x10\xed\x8f\xf5\xba\xbc\xb1\xae\x2f\x59\x5f\x89\xc1\x4c\xd1\x36\x1a\xa2\x0a\x1b\x68\xdd\x0d\x62\x16\xd5\x5f\xd3\xc2\xf4\x20\xd0\xd7\x58\x57\x63\xab\x59\xa6\xa5\xb1\xd7\xb5\x76\x26\x6b\x69\x13\x63\x93\xb8\x9e\x34\xef\x33\xba\x1e\xb8\xc6\x3a\x1f\xa3\x64\x39\x05\x4d\xe0\xee\x75\x6d\x3d\x2a\x6a\xc2\xec\x11\xe9\x1b\xc8\x68\x08\x43\x16\x85\x80\x94\x26\xbb\xc2\x30\x1a\x33\x13\x69\x36\xef\x5b\x0a\x8f\xe1\x7f\xc6\xdb\x1c\x49\x9d\x46\x6a\x80\xa8\x7e\x3f\xa7\x7b\x94\x75\xda\xe7\x0c\x6d\x75\xfe\x66\x17\x7b\x47\x5c\x07\xda\xcc\xd9\x24\x75\x66\x98\x3d\xb2\xea\x23\x4d\xa9\xea\x74\xa4\x39\xba\x6a\xa4\x7a\xab\x39\xa0\xad\xa3\xa5\x6e\x98\xb8\x26\xd1\x4d\xb4\xbe\x99\xca\xe8\x6b\x23\xd4\xbe\xa1\xed\x84\x30\x5d\xf0\x7b\x35\xcc\x10\x92\x5c\xb1\xb3\xb8\x8a\x46\x51\xc1\xb5\xd7\x0a\x18\x81\x42\x07\x21\xf5\x7f\xbd\x8b\x19\x69\x38\xd8\x4a\x49\x8f\x31\x66\xc5\xd0\x0b\x66\x67\x5d\x8b\x8b\x9d\x78\xfa\x43\x1b\x7f\xd8\xd8\xf1\x0c\x89\x30\xce\xa5\xbb\x4e\x2f\xd0\xec\xc1\xc0\x42\x8e\x34\x06\x5f\xc4\x7f\x06\x70\x9c\xb5\xc9\x8c\x6f\x33\x83\x1b\x4c\x7f\x8b\x89\x0f\xf5\xbe\x1a\x98\x21\x7a\x30\x06\x8a\x27\x5f\xcb\xf2\xaa\x3b\xc7\xbd\x21\xb7\xbc\xec\xef\x3a\xf8\x59\xe9\x45\x79\x4d\x24\xfd\x7e\xf9\x05\x30\xea\xf5\x4a\x14\x3d\x91\x25\x50\x7a\x19\xd4\x60\xd9\x2e\x45\xd4\x0b\xef\xad\xf0\x2d\xc0\x82\x8a\x47\xad\xe2\x8b\xd1\xf0\x9f\x85\x77\xc6\xf2\x9d\xec\xb5\x43\xda\x9f\xf6\xd9\xf6\x32\xef\xa6\x5c\x5e\x6a\xd0\x36\x0c\x79\x83\xe6\xdd\xb7\x36\x98\xb4\x1a\x43\xa1\x0e\x77\x1f\x73\x1d\x5a\x50\x4d\xbc\xdc\xb2\x08\xc2\xae\x66\x22\x8e\xc1\xfe\x65\x3a\xe9\x86\xce\x74\xb5\x24\xb5\xe7\x2b\x82\x7d\xd3\xe3\x15\xf7\x9b\x3b\x60\x71\xaf\x26\x8e\x58\xdc\xac\xf0\x90\x25\xd5\x39\x7e\xcc\xd2\x3b\xe5\xcd\x1f\xb4\xa4\x47\x6e\x97\x48\xc0\x41\xbf\x2d\x5a\x85\x15\x2d\xf7\x8d\x24\x07\xfa\x8a\x7e\x40\xab\x8d\xae\x47\x8a\x6a\xfe\xbb\x71\x1a\x36\x10\xdd\xda\x3d\x18\xb7\x3e\xd6\xea\xc4\x56\x40\xa6\x42\x90\x2d\xfa\xff\x04\x00\x00\xff\xff\x0c\xc8\xac\x3e\x75\x1e\x00\x00")

func mapping_static_partials_mapping_type_mapping_tree_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_mapping_type_mapping_tree_html,
		"mapping_static/partials/mapping/type-mapping-tree.html",
	)
}

func mapping_static_partials_mapping_type_mapping_tree_html() (*asset, error) {
	bytes, err := mapping_static_partials_mapping_type_mapping_tree_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/mapping/type-mapping-tree.html", size: 7797, mode: os.FileMode(420), modTime: time.Unix(1445103319, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mapping_static_partials_mapping_type_mapping_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x90\xb1\x4e\xc4\x30\x0c\x86\xf7\x3e\x45\x94\xa5\x03\xca\x65\x47\xbd\x2e\xbc\x02\xfb\xc9\x6a\xcc\x61\xc9\x75\xa2\xc4\x87\x40\x88\x77\xc7\xad\x72\x45\x47\xb6\xff\xff\xed\x2f\xb6\xa7\x44\x1f\xee\x46\x41\x2b\xe2\xd9\xe7\xa2\x94\xa5\xf9\x79\x70\x6e\xca\x7c\x0f\x82\xe4\x84\xcd\xbc\xed\xc9\x35\xac\x26\xf9\xec\x57\x28\x85\xe4\xda\x7c\x4f\x12\x28\x04\xfd\x2a\x78\x44\xaf\x26\x5e\xb2\x28\x90\x60\xdd\xa9\xc6\x65\xda\x18\x15\x0b\x82\x1e\x95\x8e\xc4\xfd\xe7\xb9\x87\xff\x0f\x73\x61\x68\xed\x68\xfc\x2b\x36\x68\x8f\xbe\x47\x4c\xa4\x16\x8e\xcf\x77\xe8\xe9\xd2\xad\x9f\x87\x06\x92\x85\x6f\xc9\x06\x6e\x0a\x4a\xcb\xa5\x54\x7c\xa3\x4f\xf7\xe4\xc6\x58\xa0\x2a\x01\xb7\xd8\x09\x71\xdb\x2c\x74\xb1\x8f\x75\x7a\xd7\x95\x47\x3f\x4f\x91\x69\xbf\x58\xcc\x3c\x0f\x53\xb4\x93\xce\xc3\x6f\x00\x00\x00\xff\xff\x6f\x9d\x14\xad\x59\x01\x00\x00")

func mapping_static_partials_mapping_type_mapping_html_bytes() ([]byte, error) {
	return bindata_read(
		_mapping_static_partials_mapping_type_mapping_html,
		"mapping_static/partials/mapping/type-mapping.html",
	)
}

func mapping_static_partials_mapping_type_mapping_html() (*asset, error) {
	bytes, err := mapping_static_partials_mapping_type_mapping_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "mapping_static/partials/mapping/type-mapping.html", size: 345, mode: os.FileMode(420), modTime: time.Unix(1445103377, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"mapping_static/js/mapping/analysis-analyzer.js":                       mapping_static_js_mapping_analysis_analyzer_js,
	"mapping_static/js/mapping/analysis-charfilter.js":                     mapping_static_js_mapping_analysis_charfilter_js,
	"mapping_static/js/mapping/analysis-tokenfilter.js":                    mapping_static_js_mapping_analysis_tokenfilter_js,
	"mapping_static/js/mapping/analysis-tokenizer.js":                      mapping_static_js_mapping_analysis_tokenizer_js,
	"mapping_static/js/mapping/analysis-wordlist.js":                       mapping_static_js_mapping_analysis_wordlist_js,
	"mapping_static/js/mapping/analysis.js":                                mapping_static_js_mapping_analysis_js,
	"mapping_static/js/mapping/index-mapping.js":                           mapping_static_js_mapping_index_mapping_js,
	"mapping_static/js/mapping/type-mapping.js":                            mapping_static_js_mapping_type_mapping_js,
	"mapping_static/partials/analysis/analyzer.html":                       mapping_static_partials_analysis_analyzer_html,
	"mapping_static/partials/analysis/analyzers.html":                      mapping_static_partials_analysis_analyzers_html,
	"mapping_static/partials/analysis/charfilter.html":                     mapping_static_partials_analysis_charfilter_html,
	"mapping_static/partials/analysis/charfilters/generic.html":            mapping_static_partials_analysis_charfilters_generic_html,
	"mapping_static/partials/analysis/charfilters/regexp.html":             mapping_static_partials_analysis_charfilters_regexp_html,
	"mapping_static/partials/analysis/charfilters.html":                    mapping_static_partials_analysis_charfilters_html,
	"mapping_static/partials/analysis/tokenfilter.html":                    mapping_static_partials_analysis_tokenfilter_html,
	"mapping_static/partials/analysis/tokenfilters/dict_compound.html":     mapping_static_partials_analysis_tokenfilters_dict_compound_html,
	"mapping_static/partials/analysis/tokenfilters/edge_ngram.html":        mapping_static_partials_analysis_tokenfilters_edge_ngram_html,
	"mapping_static/partials/analysis/tokenfilters/elision.html":           mapping_static_partials_analysis_tokenfilters_elision_html,
	"mapping_static/partials/analysis/tokenfilters/generic.html":           mapping_static_partials_analysis_tokenfilters_generic_html,
	"mapping_static/partials/analysis/tokenfilters/keyword_marker.html":    mapping_static_partials_analysis_tokenfilters_keyword_marker_html,
	"mapping_static/partials/analysis/tokenfilters/length.html":            mapping_static_partials_analysis_tokenfilters_length_html,
	"mapping_static/partials/analysis/tokenfilters/ngram.html":             mapping_static_partials_analysis_tokenfilters_ngram_html,
	"mapping_static/partials/analysis/tokenfilters/normalize_unicode.html": mapping_static_partials_analysis_tokenfilters_normalize_unicode_html,
	"mapping_static/partials/analysis/tokenfilters/shingle.html":           mapping_static_partials_analysis_tokenfilters_shingle_html,
	"mapping_static/partials/analysis/tokenfilters/stop_tokens.html":       mapping_static_partials_analysis_tokenfilters_stop_tokens_html,
	"mapping_static/partials/analysis/tokenfilters/truncate_token.html":    mapping_static_partials_analysis_tokenfilters_truncate_token_html,
	"mapping_static/partials/analysis/tokenfilters/wordmap.html":           mapping_static_partials_analysis_tokenfilters_wordmap_html,
	"mapping_static/partials/analysis/tokenfilters.html":                   mapping_static_partials_analysis_tokenfilters_html,
	"mapping_static/partials/analysis/tokenizer.html":                      mapping_static_partials_analysis_tokenizer_html,
	"mapping_static/partials/analysis/tokenizers/exception.html":           mapping_static_partials_analysis_tokenizers_exception_html,
	"mapping_static/partials/analysis/tokenizers/generic.html":             mapping_static_partials_analysis_tokenizers_generic_html,
	"mapping_static/partials/analysis/tokenizers/regexp.html":              mapping_static_partials_analysis_tokenizers_regexp_html,
	"mapping_static/partials/analysis/tokenizers.html":                     mapping_static_partials_analysis_tokenizers_html,
	"mapping_static/partials/analysis/wordlist.html":                       mapping_static_partials_analysis_wordlist_html,
	"mapping_static/partials/analysis/wordlists.html":                      mapping_static_partials_analysis_wordlists_html,
	"mapping_static/partials/mapping/index-mapping.html":                   mapping_static_partials_mapping_index_mapping_html,
	"mapping_static/partials/mapping/type-mapping-tree.html":               mapping_static_partials_mapping_type_mapping_tree_html,
	"mapping_static/partials/mapping/type-mapping.html":                    mapping_static_partials_mapping_type_mapping_html,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func     func() (*asset, error)
	Children map[string]*_bintree_t
}

var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"mapping_static": &_bintree_t{nil, map[string]*_bintree_t{
		"js": &_bintree_t{nil, map[string]*_bintree_t{
			"mapping": &_bintree_t{nil, map[string]*_bintree_t{
				"analysis-analyzer.js":    &_bintree_t{mapping_static_js_mapping_analysis_analyzer_js, map[string]*_bintree_t{}},
				"analysis-charfilter.js":  &_bintree_t{mapping_static_js_mapping_analysis_charfilter_js, map[string]*_bintree_t{}},
				"analysis-tokenfilter.js": &_bintree_t{mapping_static_js_mapping_analysis_tokenfilter_js, map[string]*_bintree_t{}},
				"analysis-tokenizer.js":   &_bintree_t{mapping_static_js_mapping_analysis_tokenizer_js, map[string]*_bintree_t{}},
				"analysis-wordlist.js":    &_bintree_t{mapping_static_js_mapping_analysis_wordlist_js, map[string]*_bintree_t{}},
				"analysis.js":             &_bintree_t{mapping_static_js_mapping_analysis_js, map[string]*_bintree_t{}},
				"index-mapping.js":        &_bintree_t{mapping_static_js_mapping_index_mapping_js, map[string]*_bintree_t{}},
				"type-mapping.js":         &_bintree_t{mapping_static_js_mapping_type_mapping_js, map[string]*_bintree_t{}},
			}},
		}},
		"partials": &_bintree_t{nil, map[string]*_bintree_t{
			"analysis": &_bintree_t{nil, map[string]*_bintree_t{
				"analyzer.html":   &_bintree_t{mapping_static_partials_analysis_analyzer_html, map[string]*_bintree_t{}},
				"analyzers.html":  &_bintree_t{mapping_static_partials_analysis_analyzers_html, map[string]*_bintree_t{}},
				"charfilter.html": &_bintree_t{mapping_static_partials_analysis_charfilter_html, map[string]*_bintree_t{}},
				"charfilters": &_bintree_t{nil, map[string]*_bintree_t{
					"generic.html": &_bintree_t{mapping_static_partials_analysis_charfilters_generic_html, map[string]*_bintree_t{}},
					"regexp.html":  &_bintree_t{mapping_static_partials_analysis_charfilters_regexp_html, map[string]*_bintree_t{}},
				}},
				"charfilters.html": &_bintree_t{mapping_static_partials_analysis_charfilters_html, map[string]*_bintree_t{}},
				"tokenfilter.html": &_bintree_t{mapping_static_partials_analysis_tokenfilter_html, map[string]*_bintree_t{}},
				"tokenfilters": &_bintree_t{nil, map[string]*_bintree_t{
					"dict_compound.html":     &_bintree_t{mapping_static_partials_analysis_tokenfilters_dict_compound_html, map[string]*_bintree_t{}},
					"edge_ngram.html":        &_bintree_t{mapping_static_partials_analysis_tokenfilters_edge_ngram_html, map[string]*_bintree_t{}},
					"elision.html":           &_bintree_t{mapping_static_partials_analysis_tokenfilters_elision_html, map[string]*_bintree_t{}},
					"generic.html":           &_bintree_t{mapping_static_partials_analysis_tokenfilters_generic_html, map[string]*_bintree_t{}},
					"keyword_marker.html":    &_bintree_t{mapping_static_partials_analysis_tokenfilters_keyword_marker_html, map[string]*_bintree_t{}},
					"length.html":            &_bintree_t{mapping_static_partials_analysis_tokenfilters_length_html, map[string]*_bintree_t{}},
					"ngram.html":             &_bintree_t{mapping_static_partials_analysis_tokenfilters_ngram_html, map[string]*_bintree_t{}},
					"normalize_unicode.html": &_bintree_t{mapping_static_partials_analysis_tokenfilters_normalize_unicode_html, map[string]*_bintree_t{}},
					"shingle.html":           &_bintree_t{mapping_static_partials_analysis_tokenfilters_shingle_html, map[string]*_bintree_t{}},
					"stop_tokens.html":       &_bintree_t{mapping_static_partials_analysis_tokenfilters_stop_tokens_html, map[string]*_bintree_t{}},
					"truncate_token.html":    &_bintree_t{mapping_static_partials_analysis_tokenfilters_truncate_token_html, map[string]*_bintree_t{}},
					"wordmap.html":           &_bintree_t{mapping_static_partials_analysis_tokenfilters_wordmap_html, map[string]*_bintree_t{}},
				}},
				"tokenfilters.html": &_bintree_t{mapping_static_partials_analysis_tokenfilters_html, map[string]*_bintree_t{}},
				"tokenizer.html":    &_bintree_t{mapping_static_partials_analysis_tokenizer_html, map[string]*_bintree_t{}},
				"tokenizers": &_bintree_t{nil, map[string]*_bintree_t{
					"exception.html": &_bintree_t{mapping_static_partials_analysis_tokenizers_exception_html, map[string]*_bintree_t{}},
					"generic.html":   &_bintree_t{mapping_static_partials_analysis_tokenizers_generic_html, map[string]*_bintree_t{}},
					"regexp.html":    &_bintree_t{mapping_static_partials_analysis_tokenizers_regexp_html, map[string]*_bintree_t{}},
				}},
				"tokenizers.html": &_bintree_t{mapping_static_partials_analysis_tokenizers_html, map[string]*_bintree_t{}},
				"wordlist.html":   &_bintree_t{mapping_static_partials_analysis_wordlist_html, map[string]*_bintree_t{}},
				"wordlists.html":  &_bintree_t{mapping_static_partials_analysis_wordlists_html, map[string]*_bintree_t{}},
			}},
			"mapping": &_bintree_t{nil, map[string]*_bintree_t{
				"index-mapping.html":     &_bintree_t{mapping_static_partials_mapping_index_mapping_html, map[string]*_bintree_t{}},
				"type-mapping-tree.html": &_bintree_t{mapping_static_partials_mapping_type_mapping_tree_html, map[string]*_bintree_t{}},
				"type-mapping.html":      &_bintree_t{mapping_static_partials_mapping_type_mapping_html, map[string]*_bintree_t{}},
			}},
		}},
	}},
}}

// Restore an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// Restore assets under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	if err != nil { // File
		return RestoreAsset(dir, name)
	} else { // Dir
		for _, child := range children {
			err = RestoreAssets(dir, path.Join(name, child))
			if err != nil {
				return err
			}
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

func assetFS() *assetfs.AssetFS {
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, Prefix: k}
	}
	panic("unreachable")
}
