package mapping

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"github.com/elazarl/go-bindata-assetfs"
	"io"
	"io/ioutil"
	"os"
	"path"
	"path/filepath"
	"strings"
	"time"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindata_file_info struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindata_file_info) Name() string {
	return fi.name
}
func (fi bindata_file_info) Size() int64 {
	return fi.size
}
func (fi bindata_file_info) Mode() os.FileMode {
	return fi.mode
}
func (fi bindata_file_info) ModTime() time.Time {
	return fi.modTime
}
func (fi bindata_file_info) IsDir() bool {
	return false
}
func (fi bindata_file_info) Sys() interface{} {
	return nil
}

var _static_bleve_mapping_js_mapping_analysis_analyzer_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x57\xcd\x6e\xdb\x38\x10\xbe\xe7\x29\x18\xa1\xa8\x65\xd4\xb0\xb1\xd7\x35\x72\xe8\x16\x58\x60\x0f\xd9\x53\x6f\x86\x11\xb0\xe2\x28\x26\x4c\x51\x5a\x92\x72\xe3\x06\x7e\xf7\x1d\x52\x7f\xa4\x7e\x62\xb9\x45\xb1\xdb\x1c\x1c\x91\x33\xf3\x71\xe6\xe3\x70\xc8\x49\x4b\x99\x18\x9e\x4b\xf2\x87\x80\x13\x7c\x94\x54\x9c\xbf\x81\x7a\xcc\x19\x15\x9f\x8c\x12\xf1\x3b\x9d\xe4\x05\xac\xc8\xbb\xcc\x4e\xfd\x25\xb5\xa1\x32\xb1\xe3\x83\x31\xc5\xea\x8e\x5c\xf9\x93\x34\x43\xe5\x13\x15\x25\xfe\xcb\x68\x51\x70\xf9\xbc\x22\x08\x62\x78\xf2\x54\x28\x48\xf9\xcb\x92\xbc\x3a\x98\x6a\xa5\x75\xae\xf8\xf3\xdf\x68\x45\x1e\x9c\xf1\xd6\x97\xc9\x89\x79\x50\x2a\x57\x8f\xa0\x35\x7d\xb6\xf2\x28\x0a\xa4\x69\xae\xb2\x82\x9a\xc3\x50\x52\x3b\x84\x82\xfa\x2b\x90\x06\x5e\xa2\x4e\x30\xde\xde\xf9\xaa\xb4\xe6\x0d\xb5\x5e\x2f\x15\xc8\x66\x43\x50\x74\x26\x5c\x56\xe1\x13\x74\x83\x00\xe3\x06\x97\x71\x0a\x76\x1c\x9f\xa8\x22\xc7\x56\xa7\xa1\xa2\xb6\x97\x00\x8c\x30\x80\x02\x81\x1d\x56\x9e\xe2\x9c\x36\x38\x4b\x95\xa2\x67\xdd\x2a\xf3\x94\xc4\x47\xf2\x80\x01\x26\x07\xaa\x9e\x52\x2e\x0c\x28\x1d\xf9\x78\x6e\x37\xe0\xab\x95\xd7\x62\x74\x76\xb7\xdf\x06\x0a\xad\x4f\x49\xca\x5b\xaf\xd6\x3e\x66\x1f\x72\x08\xbb\x2e\x4a\x7d\x88\x87\x96\x3b\xc4\xdc\x2f\xc3\xf5\x2e\xc1\xa8\x47\x66\x60\x6d\xb7\x3d\x58\xa6\x03\xba\x10\x10\x1a\x3c\x0e\x4c\x7e\x04\xf9\x16\x09\x4e\x61\x06\x0b\xc6\x67\x21\x40\x9d\xa0\xc1\x07\xf6\x79\x08\x6c\x77\xe6\x56\x22\x02\xf3\x8a\x09\x7f\xa5\x01\x15\xaf\x6f\xa1\xed\x8e\x7b\x84\x70\x7e\xe1\xa7\x67\x7b\x57\xfd\xfa\x79\xed\x56\xe1\x68\x64\x4f\x64\x43\x95\xaf\x20\x72\xca\x3e\xf7\x95\x9a\x9a\x12\xfb\x2c\xb9\x82\xb1\x2e\x72\x6d\xe2\xc5\x86\x16\x7c\xf3\x14\x82\x2f\x56\xf5\x19\x5c\xae\x75\x99\x24\x78\x98\xe3\x16\x87\x51\x43\xfb\x8c\x4f\x79\x68\x75\xbb\x59\x9f\x9b\xe5\xba\xfd\x76\x05\x23\xc4\x5f\xe1\x11\x63\x30\xb1\x4a\xaf\xc0\x58\x7d\x1f\xb8\xfa\xbe\x5c\xa3\x26\x5e\x86\x1a\x36\x9b\xff\x74\x5b\xf8\x16\xbd\x9f\x06\x5a\x33\xf9\xed\xc1\x7f\x27\xc1\x43\x27\x1d\xc3\xfe\xd9\xfc\x6f\x39\xee\xf1\xd3\x27\x99\x32\x4f\xc3\x27\xcf\x89\x7d\x5f\xd2\x46\x25\x30\xa4\x09\x4e\x76\xf8\xdb\xa0\xe6\xd6\x26\xf7\x58\x75\x4a\xc9\xf0\x5e\x90\x58\x9b\xdf\xbf\x27\xde\x7c\x34\x28\x40\xcd\xf5\x02\x02\x10\x9b\x7d\x1c\x2b\x77\x55\xf1\xa8\x06\xcb\xc1\x19\x0d\x23\x54\x90\xe5\x27\x18\x0f\x92\xa3\x57\x2f\x41\x9a\xcc\x59\x5c\x17\x82\x27\x50\x19\xaf\xc8\x6f\xe3\xdc\xbb\x33\x76\x3d\x7d\x3f\x0f\xd5\x6e\xa9\x0f\x3f\x9e\xc0\x23\x7e\x76\x35\xe2\xff\x91\xc2\x7d\x8e\x7e\x99\x1c\x1e\xbd\xaa\x7f\x76\xee\x8e\x2f\x3a\x2b\x67\x91\x0f\x8f\xeb\x1b\x99\xec\xed\xd2\x4f\x60\x31\x48\xc9\xdb\x69\x9c\x08\xed\x2a\x8f\xe1\xb2\xb3\x88\x4c\x6c\x17\x20\xbc\x55\x48\x78\x98\x83\x6e\x61\xcd\xb8\xce\x38\x1e\xd7\x45\x65\xb6\x18\xc7\xfc\x52\x72\xc1\xa6\xca\x03\x3e\x87\xb3\x52\x1b\x72\xa0\x27\x20\xd4\xb5\x00\x01\xff\xf7\x5e\x8b\x30\xef\x74\x46\xae\xcb\xe0\x9a\x28\xf8\xa7\xe4\x0a\x58\x14\x3e\xc9\x14\x98\x52\x49\x9f\xf8\xe0\x6d\x6e\x8d\x9d\x47\x32\x37\x84\x0a\x05\x94\x9d\xc9\x17\x20\xa5\x06\x16\x78\xe6\xf7\x2e\xf7\x0f\x83\x36\x07\x73\x24\xec\x46\xaa\x7d\xd1\x5c\xb7\x1b\xa4\x77\x1e\xc6\x7e\x66\x74\x4d\x65\x77\x9e\x32\xb2\x88\xc8\x87\xa0\x8d\xfa\x40\xa2\x45\xeb\x37\xbc\x70\x6d\xf4\x4d\x04\x80\xd4\xa5\x02\x62\x0e\xd4\xe0\x0f\xd2\x88\x8f\xd2\xa6\x8d\xc2\x1a\x99\x15\xb9\x04\x69\x2c\xbf\xf8\xd4\xe4\x1d\x25\x4d\x74\x5e\xab\x64\xff\xda\x37\x37\x75\xed\xd0\x04\x25\xfd\xd8\x9b\xf9\x1d\x75\x8f\xda\x09\x2b\x2b\xed\x1f\xa0\xd6\xfa\x5b\xf5\xa4\xf6\x7d\x19\xe7\xbd\xc3\x6f\xe4\xdb\x41\x50\xbb\xa8\xb5\x8d\xac\x41\x3b\xda\x76\xdc\x19\xec\xe0\x1e\xdb\xc6\x33\x8c\x27\x6a\x80\xa2\xdf\x5b\xcc\xce\x71\x0f\x64\x78\x5b\x3a\x96\xa9\x81\x1a\x7a\xb1\xf2\xd6\x99\x79\x61\xe2\xae\x62\xc2\x72\x53\x6f\x59\x9d\x00\x38\xd1\x4b\x0b\x5d\x0a\xd3\xa3\xac\x13\xcc\xe6\xcc\x85\x11\xd6\x89\x44\xe4\x1a\xe2\x0a\x67\xf9\x83\x57\x32\x06\x93\x9b\x03\xa8\xaf\x1c\x1b\x22\x2c\x40\x85\xa0\xe7\xca\xfa\xbb\x6e\xee\xa6\x60\x5d\xb6\xff\x06\x00\x00\xff\xff\x36\xf6\x5e\x36\x32\x11\x00\x00")

func static_bleve_mapping_js_mapping_analysis_analyzer_js_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_js_mapping_analysis_analyzer_js,
		"static-bleve-mapping/js/mapping/analysis-analyzer.js",
	)
}

func static_bleve_mapping_js_mapping_analysis_analyzer_js() (*asset, error) {
	bytes, err := static_bleve_mapping_js_mapping_analysis_analyzer_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/js/mapping/analysis-analyzer.js", size: 4402, mode: os.FileMode(420), modTime: time.Unix(1445359170, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_js_mapping_analysis_charfilter_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x56\x4b\x6f\xe3\x36\x10\xbe\xef\xaf\x60\x84\xc5\x4a\x46\xbd\xd2\xbd\xc6\x5e\x9a\xa2\x40\x0f\xe9\x69\x6f\x86\x61\x30\xd2\xd8\x26\x22\x51\x2a\x49\x39\x31\xb2\xfe\xef\x1d\x92\x7a\x90\x7a\xd8\xda\xa6\xd5\xc1\x96\x38\xc3\x99\xe1\x37\x0f\x7e\x87\x9a\xa7\x8a\x95\x9c\xfc\x96\xc3\x19\x1e\x4f\x54\xfc\xc1\x72\x05\xe2\xa9\xcc\x68\xfe\xa8\x44\x1e\x7d\x96\x69\x59\xc1\x9a\x7c\x2e\xf4\xd2\x9f\x5c\x2a\xca\x53\xfd\x7d\x52\xaa\x5a\x7f\x22\x77\x1f\x4e\x0b\x54\x3f\xd3\xbc\xc6\xbf\x82\x56\x15\xe3\xc7\x35\x41\x33\x8a\xa5\xfb\x4a\xc0\x81\xbd\xad\xc8\xbb\x31\x64\x7d\xc5\xa5\x60\xc7\xbf\x70\x17\xf9\x66\x36\x6f\x5c\x19\x9f\x59\x07\x21\x4a\xf1\x04\x52\xd2\xa3\x96\x07\x81\x27\x3d\x94\xa2\xa8\xa8\x3a\x8d\x25\x4d\x40\x28\x68\xde\x3c\xa9\x17\x25\xea\x78\xdf\x9b\x4f\xae\x6a\x8a\xd8\x1d\x0c\x76\xa8\xf7\x7e\xb5\x66\x92\x84\xa0\xf0\x42\x18\xb7\x00\x10\x0c\x84\x40\xc6\x14\x3a\x32\x0a\xfa\x3b\x3a\x53\x41\x5e\x3a\x9d\x16\x8c\x49\xdb\xdb\x97\x1d\x9a\x37\x7a\xf8\x6a\x9d\x5c\x6d\x1c\xda\x8a\xac\x50\x1a\x4d\x06\xff\xe3\x07\x09\x13\xbb\xf4\xf5\x59\x27\xfb\x6b\x73\xe0\x70\xe5\x1f\xa4\xe6\x2f\xbc\x7c\xe5\x7d\x2d\x7c\xbf\x54\xf0\x1d\x8a\x2a\xa7\x0a\xa1\xed\x62\x43\x5f\xbf\x90\x20\xa9\xa8\x50\x8c\xe6\x32\xa1\x9c\xe6\x17\xc9\x64\xd2\x47\x2b\x93\x23\x70\x10\x2c\x8d\x4f\xaa\xc8\x83\x31\x60\x63\x07\x52\xa3\xd7\xf9\x08\x04\x1c\xe1\xad\x0a\x7e\x5d\xe6\xcd\x6a\x5b\x67\xb6\x34\xaf\xb7\x7c\xfe\x0e\x07\x5a\xe7\x6a\xce\x65\xdb\x1b\x91\x9b\x11\xfd\x08\x50\xb5\xe0\x83\x45\x7f\x6f\x10\x8c\x5b\x03\xa5\x78\xc4\x14\x8c\xd8\x93\x36\xd5\x62\x93\x79\x37\x6c\x1d\xef\x76\xd7\x68\xd4\x55\x86\xa8\x3d\x8e\x14\x26\x83\x37\x3d\x1b\x1f\x41\x45\x61\x42\x2b\x96\xec\x07\x86\xc3\x55\x2c\xeb\x34\xc5\x2e\x8a\xba\xfd\x68\x9e\x0e\x01\x98\x0d\x4b\x2b\x9b\xe5\xbd\x4d\xc9\x5e\x69\x81\x73\xba\x55\xdc\xbd\x9b\x8e\xf5\xfd\xac\xb1\x5b\x32\x98\xf1\x36\xe8\x70\xad\xef\x1a\xde\x78\xc0\x4d\xc2\x12\xb5\x95\xce\x0e\x24\x7a\x18\xf5\x56\xac\x83\x75\x9d\x67\xb6\x3e\xf4\x5e\x3d\x38\x9a\xe4\xf6\x4e\xb5\x99\x9b\x85\xb5\x75\x2c\xec\x6e\x80\xd8\xcd\x8d\xe5\xd6\xa2\xd5\xb0\x66\x0c\xa6\xb9\x84\x05\x6e\xde\x47\x05\x37\xa9\x69\x00\xd1\x50\xf7\x7e\xbd\x89\x33\x1e\xae\xb7\x5b\x7b\x3b\xed\x61\x77\xab\xd8\x31\x85\xdc\xe4\x7b\xb2\xa0\x39\xbc\x36\xd9\x99\x36\xfd\x33\xb9\x9a\x09\xee\xe3\x69\x9b\x31\xec\x65\xf0\x7f\xca\x5c\x83\xcf\x02\x18\xee\x26\x69\x06\x87\xff\x20\xf9\x4b\x40\x70\xdc\xdc\xbc\x9f\xee\x0d\x52\xcd\x5d\x72\xa7\x9a\x88\x3f\x1f\x3d\x8e\x13\x67\x4c\x16\x0c\x67\x61\x68\xb7\x85\x83\x19\xd3\xd8\x7c\xae\x59\x9e\xcd\x15\x28\x12\x80\xa2\x96\x8a\x9c\xe8\x19\x08\x35\xb4\xc5\xcb\xc5\x83\x43\x6b\x96\xcd\xbd\xc0\x30\x23\x26\xf1\x16\xfa\xbb\x66\x02\x32\x67\x20\xe9\xc7\x5e\x4e\x2e\x0e\x6e\x30\x86\x3e\x99\x88\x78\xa9\x08\xcd\x05\xd0\xec\x42\x9e\x81\xd4\x12\xb2\xa9\x2a\x31\x1b\x1e\xbe\x8d\xa8\xd9\x97\x2f\x03\x06\x15\xb7\x37\xb2\x3b\xff\xbb\xac\x6b\x33\x73\x25\x34\x3c\xa0\xce\x2c\x4d\x75\xbd\x37\x65\xaf\x37\x67\x24\x0c\x90\x01\xb8\x51\x21\x1f\x08\xbb\x23\xc0\x1b\x93\x4a\xfe\x14\x16\xc0\x65\x2d\x80\xa8\x13\x55\xf8\x83\x88\x62\xb7\xb4\x2c\x10\x2f\xa2\xa2\x2a\x39\x70\xa5\xa1\x46\xbe\xc5\x7a\x74\xfa\x02\x97\x83\x8e\x74\x24\xde\xc1\xa7\xe6\xd3\xa6\x8f\x05\xbb\x43\x3d\x75\x3c\xd4\xc7\x28\x68\x61\x45\xd6\x30\x41\x38\x5c\xac\x51\xc3\x09\xc0\x27\x18\x3d\x04\x8e\x5f\x4b\x07\xaa\x52\x76\x7c\xc0\x1c\x14\xdb\xa8\x89\x26\x5c\x3b\xa1\x2d\xe4\x06\x08\x2c\x96\x0f\x53\x0d\x6a\x2d\x59\x62\x6a\x90\x19\x89\xb3\x71\x00\x5f\x2f\x58\x80\x9e\x57\x48\x7e\xdf\xa6\x79\x29\x21\xb2\x96\x56\x1f\x24\x1f\x78\x9c\x52\x9d\x40\xbc\x32\x1c\x4d\x38\x10\x70\xca\x5c\xec\xee\x7f\xc5\x51\xda\x01\x72\xdd\xfc\x13\x00\x00\xff\xff\x61\x9e\x3f\x26\x7a\x0d\x00\x00")

func static_bleve_mapping_js_mapping_analysis_charfilter_js_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_js_mapping_analysis_charfilter_js,
		"static-bleve-mapping/js/mapping/analysis-charfilter.js",
	)
}

func static_bleve_mapping_js_mapping_analysis_charfilter_js() (*asset, error) {
	bytes, err := static_bleve_mapping_js_mapping_analysis_charfilter_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/js/mapping/analysis-charfilter.js", size: 3450, mode: os.FileMode(420), modTime: time.Unix(1445445471, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_js_mapping_analysis_tokenfilter_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x58\xcd\x6e\xe3\x36\x10\xbe\xef\x53\x30\xc2\x62\x25\xa3\x5e\xab\x48\xb1\x97\x1a\x7b\xe9\x16\x05\x7a\x48\x4f\xbe\x19\x86\xc1\x48\xb4\x4d\x98\x22\x55\x92\x72\xe2\x26\x7e\xf7\x0e\x25\x59\x22\x25\xca\x56\x9c\x14\xf5\x21\xb1\xc5\x99\x6f\x86\xdf\xfc\x68\xc8\x4d\xc1\x13\x4d\x05\x47\xbf\x31\x72\x20\x0b\xb1\x27\xfc\x0f\xca\x34\x91\x0f\x22\xc5\xec\x87\x96\x2c\xfa\xac\x12\x91\x93\x29\xfa\x9c\x99\x47\x7f\x72\xa5\x31\x4f\xcc\xef\x9d\xd6\xf9\xf4\x13\xba\xfe\xe1\x38\x03\xf9\x03\x66\x05\xfc\xcb\x70\x9e\x53\xbe\x9d\x22\xc0\xd1\x34\x59\xe7\x92\x6c\xe8\xf3\x04\xbd\x94\x48\x95\xb1\x99\x90\x74\xfb\x17\x68\xa1\xef\xa5\xf2\xdc\x5e\xe3\x03\xcf\x89\x94\x42\x3e\x10\xa5\xf0\xd6\xac\x07\x81\xb3\xba\x11\x32\xcb\xb1\xde\xf5\x57\x6a\x87\x60\xa1\xfe\xe6\xac\x3a\x5e\x82\x8c\xf3\x7b\xfe\xc9\x16\xd5\x86\xbd\x4d\xc9\x1e\x08\xbe\x9c\x2a\x9c\x38\x46\xb0\x7a\x44\x94\x57\x0c\x20\xf0\x04\x91\x94\x6a\xb0\x54\x0a\x98\xdf\xd1\x01\x4b\xb4\x6f\x64\xce\x6c\xf8\xc1\x97\xfb\x15\xe0\x97\x82\xf0\xb5\xb2\x72\xea\x7b\xf2\x80\x73\x43\xa1\x02\xd9\xe5\xca\xf5\x94\x09\x9c\x2e\x3a\x32\xe7\x4c\x88\x1c\xe3\x26\xc6\xb3\x5c\x28\x1d\x85\x31\xce\x69\xbc\x76\xa0\xc3\x69\x4d\xd9\x64\xa6\x8a\x24\x01\xee\xa3\x06\x26\xc5\x1a\xdb\x50\x17\xdc\x33\xa2\xd5\xc3\x35\xe0\xa9\x79\xa3\x73\x9a\xcc\x9a\xef\x65\x78\x5d\xf8\x29\x30\x9b\x92\x01\x23\x9d\x74\x30\xf2\x36\x70\x4d\xdb\x15\x5e\xa2\x49\x2d\x60\xe2\xa3\x72\xc0\x89\xbc\x79\xf1\xfa\x8a\xc2\xb8\x7a\xf4\xf5\xd1\x54\xd2\xd7\x9a\x98\x70\xe2\x5a\x28\xf8\x9e\x8b\x27\x6e\x15\xda\xe2\x98\x93\x05\xc9\x72\x86\x35\xf8\xd9\x78\x08\xc6\x7e\x42\x41\x9c\x63\xa9\x29\x66\x2a\xc6\x1c\xb3\xa3\xa2\x2a\xb6\x12\x41\xc5\x5b\xc2\x89\xa4\xc9\x6c\xa7\x33\x16\x78\xb2\xb1\x6f\xc2\xf0\xdd\xf2\x15\xa4\x34\xd1\xeb\x44\x64\xb9\x28\x78\x1a\xfc\x3a\xd2\xac\xa3\x55\x19\x6f\x1b\x41\x40\xd2\x2d\x59\xf3\xad\xc4\xd9\x68\xc0\x56\xa5\x8f\xc6\xa8\x82\x80\x8f\x87\xaa\xe4\x7b\x38\x7b\x72\x7c\x12\x32\x85\x0c\x93\x7b\x22\x47\xc3\xb9\x6a\x3d\x54\x46\xf8\x56\xef\x46\xa3\x55\xe2\x3d\x94\xb7\x91\xe5\xe7\x89\x43\x83\xc3\x8c\xfe\x43\xd6\x05\xa7\xa6\x2e\xc6\xe3\x75\x35\x7b\xd8\x6a\x07\xa9\xcc\xc6\x23\xd6\xf2\x7d\x1c\x2d\xf2\xaa\x83\xa8\xf1\x58\xad\x4e\x0f\x4f\x4b\x68\x07\x90\xd4\xd5\xfa\x68\x48\x57\xcd\x46\x3d\x5d\xac\xa1\xdf\xc9\x06\x17\x4c\x5f\x29\x21\x6f\x23\x35\x1f\x49\x74\x21\x79\xe7\x61\x0b\xd1\x34\x40\xc0\xf0\x35\xca\xe5\xcf\x2b\x47\xf3\x64\xb5\xb3\xa1\xea\xbb\xc1\x17\xa3\x0f\x9a\xc1\x46\x0a\xae\x83\xfe\xfb\x3d\xc8\xa8\x61\xfa\x17\xdf\x0a\x7e\xee\xaf\x0c\xb9\xd9\x94\xf5\x0d\x3e\x9a\xf0\x26\x8c\xa8\x8f\xe2\xac\xd7\x1b\x6e\xf0\xa9\xc6\xf8\x30\x9f\x9a\xce\x72\x83\x2f\xd7\x42\x74\xff\xed\xdb\x18\x17\xde\x91\x45\x57\x93\x64\x94\x7d\x4f\x4b\xbb\xc1\x17\x33\xfa\x99\x8c\xe6\x9b\x24\x18\x63\xb6\xed\x76\x37\x6f\xfc\x7e\x98\x7a\xcf\x8a\x28\x74\x5e\xe8\xb5\x19\x7a\x29\x34\x2c\x63\x18\x9a\x17\xf1\x48\x2a\x02\xad\x0d\x6b\x61\x72\x34\xf0\x15\x27\xb4\x38\x46\xaa\xd5\x51\x5b\x75\x1a\xf2\x0d\xdb\x6d\x01\xde\x9f\xf1\xbd\x6e\x7e\x83\x3f\x4d\xd5\xdc\x5f\xcb\xf0\xcb\xad\xde\x99\x9a\x8b\x1c\xa6\x47\xb2\xe8\x4b\x5c\x98\x99\xb7\xc4\x1d\x99\x2d\xc5\xf0\x86\x69\xd9\xb5\x6b\x0d\xcc\xd5\x3b\x6d\xad\xcd\xca\xff\x30\x38\xfb\xa9\x69\xc6\x66\xba\x41\xd1\x5d\xff\x04\x33\x33\xee\xda\xe6\xd3\xea\xcd\x6a\x94\xcd\x01\xad\x8e\x62\x6b\xd6\xe0\x5c\x7e\x27\x2f\x2d\x88\xd5\x25\x26\x9b\x03\xda\x1b\xf0\xa2\x89\xc5\x40\x4b\x2c\xd4\xe8\x18\x43\x2f\x27\x9f\xf6\x00\x2b\x86\xf1\xd6\xf2\xf9\x70\x67\x29\x58\x07\xd9\x2b\x93\xfe\x72\xc0\xc4\xea\x62\xe6\xff\xd8\x61\x5e\x06\xde\x9b\xdc\x9c\x3c\xd5\x41\x1a\x00\x7f\x53\xcc\x86\x1c\xfc\x88\xf8\x0d\x61\x3b\xb1\xfc\xcf\x62\x58\xf3\x34\x86\x8d\xeb\xf1\x1a\xa0\xe3\x43\x32\x61\x0c\x15\x7d\x43\x97\x8f\xb1\x5d\xaa\x3a\xad\x36\x31\xf7\x47\xcc\xca\x30\xe4\xf6\x4f\xe7\x9e\x69\x96\x52\x95\x51\x68\x95\x61\xa5\x16\xfa\x4f\xee\x8f\x05\x65\xe9\x50\xd2\xc6\x31\xca\x0a\xa5\xd1\x0e\x1f\x08\xc2\xe5\xcd\x91\x13\x97\x3b\xeb\x66\x69\x5c\x53\x0c\xca\xcb\x29\xaa\xe0\x4d\xf4\x77\x41\x25\x49\xad\x5e\x65\x3e\xd5\x0b\xca\xe6\xc1\x76\xa6\xbc\xc1\x2a\x3d\xe2\x42\x23\xcc\x24\xc1\xe9\x11\x3d\x12\x54\x28\x92\xfa\x32\xa6\x54\xb8\xfb\xde\xbb\x1d\xfb\xf2\xc5\xe7\x6b\x7d\xf5\x30\x3b\x1f\x7e\x9c\x37\x45\x93\x0b\x06\x73\x28\xb3\xba\xbb\x2d\xe3\x8c\xea\x62\x30\x8a\x29\x0a\x03\x38\x69\xd9\xee\xc1\xb9\x2b\x6c\xf6\x42\x9e\xa9\xd2\xea\x4d\xa4\xc0\x08\x52\x48\x82\xf4\x0e\x6b\xf8\x03\xd4\x42\x09\x9d\x6f\xe4\x50\x79\xbc\xe2\x84\x6b\xc3\xf9\x01\x66\xc2\x96\x26\xfb\x64\xd7\x29\x54\x7b\xc9\xd9\xb6\xb7\x7d\xcd\x5b\x77\xa0\x64\xf4\x43\x73\x2d\xe8\x52\x14\x9c\x69\x85\x21\xc3\x33\x80\x38\x5c\x83\x88\xed\x83\x67\x5e\x6b\x6f\xbd\xda\xd9\x69\x20\x7e\x46\xc8\x9d\x69\x5a\x26\x2d\xdf\xfb\x57\x76\x25\x5f\x50\x96\xf5\x8e\xc2\xa9\xb5\xbd\x91\xa3\x08\xc4\x07\xd2\x91\xea\x9a\xfc\xf3\x00\x46\x75\x27\xc0\x0a\x5a\x6f\x27\x08\xed\xc2\x98\x10\xd8\x5a\x9d\x46\x90\x30\xa1\x48\x54\x41\x4d\xde\x39\xea\xc0\x7e\x84\xde\x11\xf9\x44\xa1\xe7\x41\x87\x81\xb6\x75\xac\xb4\xdf\x33\x11\x9d\xe6\xff\x06\x00\x00\xff\xff\x57\x18\x23\x5f\x4f\x17\x00\x00")

func static_bleve_mapping_js_mapping_analysis_tokenfilter_js_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_js_mapping_analysis_tokenfilter_js,
		"static-bleve-mapping/js/mapping/analysis-tokenfilter.js",
	)
}

func static_bleve_mapping_js_mapping_analysis_tokenfilter_js() (*asset, error) {
	bytes, err := static_bleve_mapping_js_mapping_analysis_tokenfilter_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/js/mapping/analysis-tokenfilter.js", size: 5967, mode: os.FileMode(420), modTime: time.Unix(1445445498, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_js_mapping_analysis_tokenizer_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x57\xcd\x72\xe3\x36\x0c\xbe\xe7\x29\x18\xcd\xce\x4a\x9e\x7a\xe5\xe9\xb5\x9e\xbd\x74\xdb\x43\x0f\xe9\xc9\x37\x8f\x27\xc3\x48\xb0\xcd\x89\x44\xa9\x24\xe5\x9f\x66\xfd\xee\x05\xa9\x3f\x52\xa6\x2c\x6f\x32\x9d\xf5\x21\x91\x44\xe0\x03\xf0\x01\x20\xc1\x6d\xc5\x13\xc5\x0a\x4e\x7e\xcf\xe0\x00\xab\xe2\x15\x38\xfb\x17\xc4\x53\x91\xd2\xec\x9b\x12\x59\xf4\x49\x26\x45\x09\x73\xf2\x29\xd7\x9f\xfe\xe2\x52\x51\x9e\xe8\xf7\xbd\x52\xe5\xfc\x81\x4c\xfd\x38\xcd\x51\xfa\x40\xb3\x0a\xff\xe5\xb4\x2c\x19\xdf\xcd\x09\xa2\x28\x96\x3c\x97\x02\xb6\xec\x34\x23\x6f\x06\xa7\x36\x15\x17\x82\xed\xfe\x46\x2d\xf2\xd5\x28\x2f\xed\x35\x3e\xf2\x1d\x84\x28\xc4\x13\x48\x49\x77\x7a\x3d\x08\x9c\xd5\x6d\x21\xf2\x92\xaa\xfd\xf5\x4a\xe3\x10\x2e\x34\x4f\xce\xaa\xe3\x25\xca\x38\xef\xcb\x07\x5b\x54\xb5\xcc\xa1\xd8\xdb\xa5\x46\x59\x2c\x08\xae\x9d\x09\xe3\x75\xfc\x04\xfd\x20\x90\x32\x85\x76\x8c\x80\x7e\x8f\x0e\x54\x90\xd7\x4e\xa6\xe5\xc2\x07\xbd\x7e\xdd\x20\xba\x11\xc3\xc7\xda\xc6\xc5\xef\x85\xe6\x4f\xa2\xf0\x7a\xe3\xba\x99\x15\x34\x5d\x0d\x85\xda\x1a\x88\x1c\xe3\x3a\xbf\x71\x59\x48\x15\x85\x0b\x5a\xb2\xc5\xb3\x0b\x1e\xce\x1b\xc6\x66\xb1\xac\x92\x04\xa9\x8f\x3a\x9c\x94\x2a\x6a\x63\xdd\xf2\x50\xcb\xf6\x5f\xe5\xb2\x53\xba\xcc\xe2\xee\xd9\xa4\xd7\xc5\x9f\x23\xb7\x29\x8c\x58\x19\x94\x83\x96\xb7\x81\x1b\xea\xa6\xa8\x89\x66\x8d\x84\x4e\x91\x2c\x11\x28\xf2\x16\xc6\xf7\xef\x24\x5c\xd4\x9f\xbe\xbc\xe8\x36\xfa\xd2\x50\x13\xce\x5c\x13\x15\x7f\xe5\xc5\x91\x77\x56\x56\xe7\x12\x56\x90\x97\x19\x55\xe8\x66\xe7\x20\x9a\xfa\x85\x04\x8b\x92\x0a\xc5\x68\x26\x17\x94\xd3\xec\x2c\x99\x5c\xf4\x34\x2d\x76\xc0\x41\xb0\x24\xde\xab\x3c\x0b\x46\x4a\xd1\x86\xd7\x54\xf7\x54\x05\x02\x76\x70\x2a\x83\xdf\xee\xb2\x55\x0b\xd7\xa6\xfa\x8e\x0f\xe0\x94\x40\xa9\xf3\x71\x27\x4c\x27\x5f\x23\xf9\x72\xe0\xb8\xfe\x07\x6c\x69\x95\xa9\x31\xcf\xbd\x55\xab\x7f\x02\x54\x25\xf8\xe0\xa3\xab\x1b\x04\xce\xe2\xc5\x2a\x8e\x91\x00\xdf\x61\xad\x53\x97\xa8\xbf\xde\x5c\xef\x95\x41\x17\xae\x76\xa9\xe2\x4c\x57\xf4\xb8\x67\x93\x84\x39\x0d\x5f\x95\x58\xf5\xb0\x1a\xae\xdf\xe8\xf5\x1d\x5c\xb7\xba\x51\x0b\xdf\xd9\xe2\xad\x4d\xb7\xc5\x9f\x95\xfe\xfc\x13\xfa\xdc\xc7\x48\xd7\xe2\x6c\x4b\xa2\xc7\x61\x00\xb1\x76\xd5\x36\x9d\xd6\x25\xa9\x55\xf5\x59\xd2\xd4\x53\x6f\x52\xa3\xdc\x2a\xe5\xb5\x05\xb0\x99\xa2\x0f\x2d\xdc\x8d\x15\xcd\x86\x85\x62\xe8\xcc\x24\x4c\x1b\x79\xbb\x2a\x32\x9f\xa0\xe1\x42\x73\xdc\x5b\x6d\x4f\x20\x4b\xdc\x3a\x69\x6f\xee\x46\x6b\x2f\xfc\xe6\x46\x71\x7f\xdb\x53\x6e\x92\xec\xad\x60\x0e\xc7\x26\x29\x5e\xe0\x1f\xc8\x90\xdf\xb1\x8f\xe6\xca\x8f\xea\x64\xed\x7f\xc9\x56\xc3\xcb\x74\xfc\x53\x99\x19\x21\xe0\xc3\xf9\xbe\x27\xfc\x6b\x23\xb7\x0e\xd2\x89\x1d\x93\xa6\xe9\x9f\xed\xc6\x6c\x57\x93\x59\xb5\xa3\xd4\x4c\x35\x43\x27\x1c\xeb\x4e\x9f\xaa\x82\xb8\xdf\xf2\xe3\xb2\x92\xfb\x2b\xfd\xa5\xa3\x3e\x58\xb5\xa6\xd3\x51\xef\x05\xe4\xc5\x01\xbc\x01\x30\x9e\xc2\xe9\xd6\xf8\x68\x7b\x27\xcb\x8c\x25\x50\xeb\xcc\xc9\xaf\xfe\x89\x28\xd1\x93\x7e\x66\xd9\x20\xee\xa9\xe1\xdc\x08\xe2\x94\xc9\x9c\xe1\x11\x11\xd6\x6a\xa1\x1f\xf3\xa5\x62\x59\x3a\xd6\xc5\x38\x30\xe7\x95\x54\x64\x4f\x0f\x40\xa8\x99\xf2\x9d\x74\x3c\x5a\xb7\x80\xfb\x4e\x84\xc0\x5c\x24\x98\xc4\x63\xfa\x9f\x8a\x09\x48\x83\xa5\xe7\xf4\xb6\x49\xb7\x9d\x31\xb7\x0d\xe3\x11\x2f\x14\xa1\x99\x00\x9a\x9e\xc9\x0b\x90\x4a\x42\xea\x6b\x29\xa3\xf0\xf8\xf5\xea\x26\xf3\xf9\xb3\xcf\xd7\x66\x4a\x8c\xdb\x61\xc9\x1a\x83\xd7\x16\xe0\x58\xef\x0d\x43\xed\xba\xc1\xf8\x9d\x92\x30\xc0\x99\xcc\x76\x0c\x27\xb4\xb0\x8b\x02\x4e\x4c\x2a\xf9\x43\x74\x00\x97\x95\x00\xa2\xf6\x54\xe1\x1f\x24\x15\x4b\xb7\xbd\x37\xe1\x29\x9d\x97\x05\x07\xae\x34\xdb\x78\x47\x61\x3d\x41\x7d\x58\x83\xfd\x6b\x24\x5e\xcf\x66\xb2\xb4\xfd\xc0\x16\xd6\xf7\x25\x9a\x65\xe8\x06\xd4\x91\x68\x17\x7a\x38\xbc\x60\x32\x2c\x42\x72\xc4\xf4\xb1\xdd\x5e\xe9\x9c\xe1\xac\x0e\x02\x78\x62\x24\xf7\x90\x77\x88\xdd\x2d\x4c\x69\xd4\xe9\xdc\x0c\xd3\x61\x45\xa1\x2c\xdf\x6f\x65\x57\x6d\xbc\x1c\xe3\x46\xa9\x9e\xba\x1b\xa9\x6b\x25\x68\x71\x70\x56\xf4\x0c\x9b\x3d\x38\xae\xf7\x2f\xee\x30\xd9\xdb\x5c\x3e\xdc\xb8\xe8\x99\xec\xe1\x4e\xda\xb8\x12\xce\x2d\xbf\xee\x1c\x05\x31\x4b\xd8\x16\x4c\x35\xa5\xd0\x4e\xc9\x4c\x0d\xca\x4d\xe2\xe9\x38\x28\x8a\x7e\xe1\xfe\xa2\x30\x71\xb8\xdb\x51\x92\x15\x12\xa2\x1a\x68\xf6\xc1\x69\x13\xa3\x29\xb0\x64\xc4\x91\xe1\x11\x85\xfb\x1c\x9e\x33\xe7\x5a\xfb\x5d\x43\x69\xbb\x2f\x5e\x96\xff\x05\x00\x00\xff\xff\x27\x1e\x7c\xf5\x7e\x11\x00\x00")

func static_bleve_mapping_js_mapping_analysis_tokenizer_js_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_js_mapping_analysis_tokenizer_js,
		"static-bleve-mapping/js/mapping/analysis-tokenizer.js",
	)
}

func static_bleve_mapping_js_mapping_analysis_tokenizer_js() (*asset, error) {
	bytes, err := static_bleve_mapping_js_mapping_analysis_tokenizer_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/js/mapping/analysis-tokenizer.js", size: 4478, mode: os.FileMode(420), modTime: time.Unix(1445445509, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_js_mapping_analysis_wordlist_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x54\xc1\x6e\xdb\x30\x0c\xbd\xe7\x2b\x58\xa3\x68\x1c\xd4\x73\xb7\xeb\x8c\x5e\xb6\xd3\x80\x75\xd7\x1e\x8a\xa2\x50\x2c\xa6\xd1\x26\x4b\x9e\x28\x37\x0d\x8a\xfc\xfb\x28\x39\x49\x2d\x27\xe9\x92\x43\x9c\x88\x7c\xcf\x8f\x8f\xa4\x16\x9d\xa9\xbd\xb2\x06\xbe\x69\x7c\xc1\x7b\xeb\xe4\x4f\x45\xfe\xce\x4a\xa1\xbf\x7b\xa7\xf3\x4b\xaa\x6d\x8b\x05\x5c\x36\xe1\xe8\x87\x21\x2f\x4c\x8d\xc5\x04\xfe\xf3\x31\xa2\x61\xd4\x8a\xf9\xa8\x80\x46\xb4\xad\x32\xcf\x05\x30\xda\xab\xfa\xa9\x75\xb8\x50\xaf\x33\x78\x8b\x34\xfd\x2b\xca\x80\x80\xdb\x08\xac\x86\xe7\xd6\xa9\xe7\x5f\x27\x62\xe8\x9c\x75\x77\x48\x24\x9e\x43\x3c\xcb\x92\xa8\xc1\x55\x28\xe8\x30\x10\x65\xf1\x71\x7c\x96\xa4\x55\x8d\xf9\xe7\x59\x05\x37\x37\x50\x3b\x14\x1e\x81\xd3\xd6\x43\x04\xa1\xc6\xda\xa3\xbc\xdf\x22\x1f\x1e\x13\xc2\x6d\x81\x1c\xd8\xfe\x4a\xa2\x49\xd5\x9c\x93\xfc\xaf\x26\xc3\xd4\x3a\xb8\xab\x39\x67\xdf\x97\x7c\x67\x53\xcc\x4a\xba\x50\x4a\x45\x8d\x22\xca\xa7\x3d\x6c\x3a\xeb\x5f\xbb\x49\x39\x85\x94\x5b\x1b\x76\xa4\x09\xa7\x5a\x40\x9e\x1a\x36\x8c\x8e\x5d\x2b\xdb\x8e\x96\xe3\xfc\xea\x58\xfa\xa1\xfb\x51\xdb\x31\x85\x0e\x1b\xdb\x0f\xdf\x29\x91\xdc\x19\xb2\xce\x83\x5f\x22\xec\x7a\x11\xdb\x07\xca\x48\x7c\x45\xe2\xa7\xb7\x20\x91\x6a\x34\x32\xb4\x82\x63\xe8\x52\x3c\xac\xb8\xb1\xc2\x70\x96\x46\xee\xb1\xf2\xd8\x10\xac\x94\x5f\xda\xce\xc3\x52\xbc\x04\x18\x93\x08\xf9\xbb\x23\xbf\x23\x9e\x8c\xca\x4a\x26\xa1\x0c\xa2\xf2\xbd\x62\x51\xcc\x67\x6f\xe0\xd0\x77\xce\xc0\x1c\x3e\x81\xa8\x60\x33\x70\x67\x61\x1d\xe4\x2f\xc2\xf5\xdc\xfc\x7d\x94\xf4\x43\xfb\xa9\x8d\xd3\x7a\x0c\xf7\x10\x59\x1f\x0b\xf8\x32\x1b\xfb\x7d\xc6\x24\x8f\x5a\x32\xef\x94\xfe\xa8\x1b\x4d\xb0\x88\x3d\x43\x10\x71\x2d\x93\x71\xba\x18\xac\xf4\x89\x6a\xc6\x9b\x1b\x37\x5c\x11\x9b\xf7\xb7\x53\x0e\x65\x96\xce\x54\xef\xe9\xb0\xac\xa1\x98\x78\x75\x44\x45\xc6\x7a\x10\x9a\x77\x58\xae\x61\x8e\xd0\x11\xca\xa3\x83\x1e\x00\x17\xb7\x07\x57\xcc\xd5\xd5\x68\xa3\x4b\x61\x84\x5e\x93\xa2\xd2\xdb\x3f\x68\x9e\xf8\x98\x1e\x06\x24\x8f\x67\x96\x17\x67\x5b\xab\xa0\x90\x51\x12\xa6\x19\x5c\x27\x17\xdf\x35\x64\xd3\xbd\x72\x7c\xe5\x4c\x3a\xdf\x02\x87\xd4\x69\xcf\xef\x79\xdb\x54\xa3\xc3\x44\x6c\xc8\x48\x38\x33\xbf\x6e\x31\xfb\x0a\x59\xcd\xe6\xd9\x26\x2b\x46\xd1\x50\x33\x71\x7c\x38\x82\xef\x02\xaa\xc9\xa9\x8b\xa9\xd6\x96\x30\xef\x15\xbc\x5f\x4a\x9b\xea\x5f\x00\x00\x00\xff\xff\xd3\xa0\x01\xf2\x6e\x06\x00\x00")

func static_bleve_mapping_js_mapping_analysis_wordlist_js_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_js_mapping_analysis_wordlist_js,
		"static-bleve-mapping/js/mapping/analysis-wordlist.js",
	)
}

func static_bleve_mapping_js_mapping_analysis_wordlist_js() (*asset, error) {
	bytes, err := static_bleve_mapping_js_mapping_analysis_wordlist_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/js/mapping/analysis-wordlist.js", size: 1646, mode: os.FileMode(420), modTime: time.Unix(1445359196, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_js_mapping_analysis_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5a\x41\x6f\xdb\x3a\x12\x3e\x6f\x7e\x05\x2b\x14\xb5\xdd\xa4\xce\x3d\x41\xb0\xe8\xb6\xbb\x40\xb1\xdb\x3d\xa5\xd8\x83\x11\x04\xb4\x44\xd7\x44\x69\xc9\x10\xa9\xa4\xee\x36\xff\x7d\x67\x28\x89\x22\x29\x4a\xa6\xd3\xc5\x7b\x70\x63\x1d\xde\x8b\x45\xce\x70\xe6\x9b\xe1\xf0\xe3\xa8\x97\x97\x24\x2d\x72\x55\x16\x42\xb0\x92\x94\x4c\x6e\x8b\x5c\xf2\xa5\x60\x64\x55\x94\x64\x59\x71\x91\xf1\xfc\x2b\xa1\x24\xad\xa4\x2a\x36\x84\xe6\x54\xec\x24\x97\x20\xb5\x81\xa9\x2c\x57\xf2\xec\x6c\x55\xe5\xa9\xe2\x45\x4e\xfe\x26\xd8\x03\x7b\xdf\x4c\xf9\xa0\x4a\x31\x7d\x2d\xd3\x62\xcb\x2e\xc8\xeb\xb5\x52\x5b\xf8\x9f\x28\xbe\xc2\x7f\x37\x45\x46\xc5\x8c\xfc\xf7\x8c\xc0\x03\x26\x68\xad\x3f\x58\x09\xba\xf0\x4d\x2d\x34\xcf\xd9\xe3\xfb\x66\x80\xdc\x90\x76\x91\x69\x2b\x87\x4f\xc9\x54\x55\xe6\xad\x00\xcb\xb8\x6a\x25\xa6\x49\x72\x61\x4d\xc4\x27\x51\xbb\x2d\x4b\xae\x48\x52\xfb\x92\x5c\xb8\xa3\xe9\x9a\x96\xf7\x2b\x2e\x14\xd8\x01\xb3\x16\x77\xde\xb8\x2a\xbe\xb1\x9c\x83\x6a\x54\x51\xe5\x3c\x2d\x32\xe6\xeb\xd0\x73\x1c\x25\x66\xfc\x69\x76\xad\xff\x7e\xba\x76\x9c\xcc\x98\x60\x8a\x85\xfc\xcc\xe9\x86\xd9\xbe\x56\x92\x65\x30\xde\xc8\x71\xd9\xca\x7c\x81\xf7\xf5\xe4\x6b\x33\x97\xaf\xc8\x14\xe7\xcf\x3c\x08\x28\x44\x59\x4d\x93\xdb\x35\x44\xb0\x05\x9d\xa4\x34\xcf\x0b\x45\x96\x8c\xd4\xc6\x64\xc9\xb9\x23\xd4\xf8\x06\x13\x52\x0a\x4a\x09\x57\x04\xc4\x97\x0c\x13\x43\x1b\xb5\xdc\x11\xb5\x66\x30\xe3\xbc\xfe\x7d\x4e\x92\x79\x62\x59\xd3\x45\xaa\x7b\xf7\xe4\xd8\x0a\x39\xb8\xe2\xe5\x66\x9a\xbc\x2f\x19\xd9\x15\x15\x91\x55\xf3\xc7\x23\xcd\x15\x51\x45\x63\x1a\x99\xe0\x22\xe8\x2c\x2e\x32\xf9\x6b\x32\xf3\x3d\x6c\xe6\xb5\x28\xe5\x19\xfb\xfe\x99\x6e\xb7\x60\xeb\xbc\xcd\xdd\xb9\x49\xb7\x05\x6a\xba\xf3\x8d\xf2\x22\xe4\x22\x3d\x16\x21\x3b\x93\x09\x05\x07\x34\x1a\x3c\x27\x9b\xda\x02\x49\xa6\xf0\xe3\x81\x96\xbc\xa8\x24\xd9\x0a\x9a\x32\x39\x3b\xb3\xc5\x01\x04\xa9\x48\xba\x66\xe9\x37\xa2\x6d\x27\xb8\xa3\x04\x78\xb5\xa2\x95\x50\x46\xbd\x03\x5e\xc8\xd7\x46\xe0\xde\x04\xf9\xe6\x86\xf8\xe6\x76\x61\x21\x49\xbd\x58\x63\x67\x6f\xb9\xc4\x86\xc8\xb6\x17\xc2\x9e\x37\xe6\x62\x06\xb4\x72\x59\x91\x56\x1b\x88\x5b\xa3\xcf\x48\x80\xeb\x24\xdb\x58\x49\x1c\x32\xb9\x11\xba\x8e\x4a\xfc\x4f\xf9\xc7\x22\x6d\x34\xe8\x78\x5c\xc0\x02\x17\x24\x49\x22\x36\x43\xeb\xbb\x63\x35\xeb\xcc\x36\x09\x1d\xeb\xbd\x2f\x8f\x25\x94\xd1\x74\x4d\xb0\xf0\x18\x41\x7c\x3b\xd5\x48\x14\xe9\x2d\x0c\x60\x82\x84\xf0\x40\x21\xd9\x4b\x6f\xe3\xed\x00\x8a\x5a\x6a\xd1\xa8\xbe\x73\xf7\xe0\xa1\x40\x9a\x17\x1e\xa0\x63\xa0\x3a\xc0\xfa\x80\xa0\x71\xf5\x16\x6e\x7d\xc7\x5d\x4c\x12\x57\xf5\x53\x08\xee\x46\x67\x5e\x09\xe1\xd6\x51\xdc\x74\x30\x9a\x56\xa5\xe4\x0f\x8c\xac\x99\xd8\x36\xfb\x63\xaf\x9f\xfe\x5e\x76\x5d\xde\x52\xb5\xf6\x76\xb7\xbd\x3d\x9d\x88\x47\xec\xd2\x4e\x75\xf4\xe6\x44\x31\xdf\x8a\xa1\xe4\x35\xba\xa8\xd2\x79\x8b\x72\x1e\xac\x84\x09\xa8\xde\xf1\xaa\x62\xc2\x02\xa0\xe4\xc5\x63\x03\xc9\x8a\x33\x91\x49\xb4\x40\xe1\x01\xa3\x41\xe9\xa7\xbd\x9e\xf5\x49\xd7\x1b\xc8\x7c\x0b\x96\x5a\xdc\x77\x56\xbf\x85\x48\xf5\x26\x2e\x3a\x45\x77\xfd\xdc\xd4\x83\xf3\x7d\x08\xbb\xb3\x87\x66\xd8\x20\x81\xc9\x18\xf9\xda\x2a\x14\xc8\x34\xdc\x9d\x82\xeb\x9e\xf8\xd3\x20\xe2\x8e\x32\x80\x0d\x83\x36\x14\xbd\xbd\xe8\xeb\x4a\x93\x33\x09\x07\x38\xd9\x96\x90\xf9\xa5\xda\xf5\xd1\x6f\x47\xfe\x8d\x67\xa8\x8b\x7f\x33\xc4\xfb\x55\x47\x56\x4b\xd8\x35\x6e\x10\xba\xd9\x0b\x5b\x67\x20\x14\x7b\x52\x38\xb6\x1c\xd5\x46\xd4\xfb\xf2\x1c\x08\xc6\xb9\xbd\xec\xec\xb0\x5c\x3f\x78\xcd\x91\xa5\x0e\xaa\x56\x01\xa6\xda\xaf\x42\x0f\x54\x54\x4e\x22\x62\xe0\x34\x67\xfe\x94\x4b\x45\xf3\x94\x61\x15\xd7\x2f\xe6\xa0\x2d\x9f\xda\x7e\xd2\x9c\x6f\x28\x2a\xbb\x6a\x17\x33\x6f\xe4\xdf\x73\x0a\xd4\x3e\xb3\x49\xab\x62\x1b\x20\x22\x8a\x7d\x29\xc5\x95\xa1\x12\xb0\x88\xe2\xe9\xfd\xb6\x64\x2b\xfe\x9d\xfc\xfc\x49\x26\x97\xf5\xab\x77\x4b\xdc\xd4\xef\x9a\x7a\x3e\x99\x91\x3e\x53\x9c\x5c\x6e\x29\xa4\x05\x15\xf2\xb2\x25\x5c\x97\xed\x36\x9c\xaf\xd5\x46\x4c\xec\xe5\xbb\xcb\xc7\x15\x99\x74\xd7\x07\x98\xfb\x19\xdd\xc3\x3b\x84\x33\x1f\x6e\x28\x85\x78\x60\x57\x5e\x68\x11\xb7\xab\xf0\x15\xc1\x0d\x48\x6f\x83\x3e\xb9\x0c\x5e\x43\x3f\xaa\xc9\xe8\xd2\x53\x47\x95\x35\x30\xc5\xa9\x0b\x1c\xe6\xa3\xca\x9d\x18\x1d\xb4\x84\x23\x39\x94\xcc\x4e\x62\xcf\xae\xbb\xd4\x76\xf2\x70\x0e\xf1\x80\x23\x63\x8e\x4c\x68\x6a\x4c\xa8\x5f\xfa\x86\xe0\x41\x9d\x65\xf5\xd1\x50\xcf\x40\x5e\x8f\xf5\xcf\xa7\x89\xf8\x98\x82\x55\x4f\xfd\x27\xdb\x61\xb5\x0a\x6b\xc6\x07\x0b\x8d\xbe\x17\xbc\x82\x52\x9f\x24\xe4\xcd\x1b\x4b\xf2\xd5\x70\xf5\x6f\x2c\x2b\xd9\xa6\x00\xf6\x80\xd6\x14\x4d\x61\x0f\x4e\xfd\xa5\xeb\x45\x08\xe5\xfa\x89\xd4\x67\x3c\xba\x23\x37\x03\xa7\x14\x4e\xb0\xe6\x59\x81\x73\xbc\x15\x05\x85\x13\xe7\x81\x72\x81\x15\xc1\xba\x80\xfb\xb3\x31\x04\x82\xe6\x03\xeb\x35\x76\xa3\xb6\x76\xdf\x62\x89\x94\x50\x33\xc6\xe6\xbf\x86\x12\x01\xb4\xa9\x2f\xd7\xc7\x0a\xe3\x0a\xeb\x0f\x85\x0e\x86\xa6\xb3\x7d\x08\x5b\x99\x7c\x31\xb4\x51\xb0\x33\x01\xf8\xaf\x8a\xe9\x44\x57\x1e\x92\x71\xb9\xe1\x12\x19\x33\x55\x50\x9b\xf0\xda\xc9\x1e\xc9\x47\x28\x95\xd3\x99\xb5\xa2\x7f\xad\x07\x74\x1f\x8b\x32\x23\x82\x4b\xd5\x6b\x67\xfc\x07\x46\xfe\x05\x03\xf1\xed\x8c\x56\xa2\x6e\x67\xe8\xf6\x82\xbc\x5a\xdc\x8d\x36\x13\x42\xab\xec\x6b\x26\xb4\x32\xcf\x6d\x26\x18\x9f\x5f\x5e\x37\xa1\xee\xf9\x40\x0d\x8b\x6d\x27\xd8\x58\xef\x69\x27\x74\xa9\xa4\xfb\x09\x45\x2e\x76\x1d\x48\xb8\x2e\x69\x7a\x4d\x7d\xa2\xa7\x87\xff\xa1\x47\x5b\xae\x17\xe1\x46\xa3\xce\xc7\xc1\x52\x36\x70\xef\x0c\xeb\x59\x78\x56\x78\xc5\xb0\xef\x21\xdb\x2c\x59\x56\x37\x4d\xa8\xee\x94\x30\xb5\x23\xc5\x0a\x76\xe3\x6a\xc5\xb0\x66\x58\xcc\x5b\xf6\x98\xa6\xb5\xda\x3c\xe3\xa9\xba\x37\xb1\x69\x2f\x00\xa1\xc2\x64\x4b\x21\x75\x49\x05\x93\x87\x4b\x7e\x63\x3b\xf4\xe5\x19\x92\x52\x15\xdb\xbe\xd4\xd8\xa5\xcf\x0e\x7d\x73\x09\xd1\xa9\xec\xc7\x1c\xb3\x7a\xe4\x16\xe7\xa9\x75\xd9\xea\x5f\x02\x55\xe8\x05\x50\x55\x8c\x21\xa6\x63\x0c\x55\x6d\x61\xf9\x73\xa8\xaa\xce\xb6\x03\xa8\x6a\xbd\x33\xe5\x89\xb1\x9e\x18\x6b\xfc\x11\x16\x82\xb9\x7e\x62\x15\x3e\x87\xb3\x86\x57\xfe\x43\xc8\x1b\x7e\x05\xa2\x29\xd6\xd5\xf6\x64\xf5\x38\xdc\x07\x98\x60\x4e\xc2\x48\x16\xd7\xc9\xd4\x3c\x6e\x94\xbe\x85\x17\xd8\x47\xe0\x3a\xa9\xe7\x52\x38\xdf\xf3\x97\xc7\xe4\xec\x2f\x80\x91\x5c\xce\x85\x7d\x0f\x9b\xeb\xe5\x16\x42\x5c\x93\xba\x25\x33\x90\xf5\xef\x62\xa6\xb2\x50\xeb\xae\xb4\x97\xd0\x19\x3d\xbd\xa0\x77\x8d\xa7\xc8\x7b\xa7\xbd\xae\xb7\x3d\x8d\x6d\xa9\x41\xc2\xf4\x76\x4d\xdb\xc7\x06\x36\x54\xd2\x3a\x59\xed\xd9\x4d\x58\x72\xe1\x2d\x11\x28\x53\x3a\x67\x3c\x65\xe3\x95\xb4\xa5\x54\x06\x14\x8b\x4e\x39\x70\x07\xb8\x94\x9b\xaf\xee\xaf\x3d\xec\xca\x4a\x22\xb7\x40\xbc\x00\x8a\x85\x01\xaa\x43\x1a\x43\xb2\x3a\x68\x4e\x1d\xc1\x13\xbf\x3a\x4e\x7e\x35\x76\xb0\x84\x80\xae\x9f\x78\x95\x47\xc6\xb1\xcc\xbf\xa4\xe9\x91\xab\xdb\x76\x24\x9e\x5b\x19\x91\x08\x6a\x15\x54\xbf\x8f\x59\x19\xa1\xe7\x12\x2b\xe3\xee\xcb\x63\x54\x5d\xa4\x23\xf9\x94\x03\xf6\x1e\x3a\xd5\x29\xd7\x3c\xca\xa2\x50\x6f\x0b\x40\xa9\x7c\x6b\x27\x5a\x2b\xe7\xf6\xc7\x78\x2c\x99\xea\x34\x05\x5b\x63\x3c\x82\x4e\x59\x58\x38\x6b\x07\xbe\x98\x9a\xf1\xb9\xa5\x3d\xb2\x2d\xc4\x7f\x04\x7a\x42\x7c\x84\xc5\x0c\x7d\x59\x1e\x86\xf7\xb8\x18\x2a\x02\x6a\xf8\xe4\x41\x78\x3e\x87\x13\x3e\x97\x01\x0e\x96\xa6\xdf\x90\x00\x76\xe9\x1d\xc1\xff\x0c\x30\x27\xfa\x77\xa2\x7f\xc7\x49\xff\x86\x4f\xc1\x10\xcc\xf5\x13\xab\xf0\x18\xa9\xdf\x50\x6b\xed\xd6\xf9\xca\x74\x08\xff\x8b\x6e\xae\x0d\x2c\x11\xc5\x01\x7f\xad\xbd\xe6\x7c\xb3\x79\x99\x44\xf0\xc0\xde\x9a\x07\x7a\x0c\x1b\xfc\x1d\x1b\x6b\xd6\x47\xbd\x7e\x67\x6d\xf4\xab\x2d\x3e\xfe\x27\xc1\x9b\x01\xd9\x85\xbf\xcc\x40\x77\xad\xa7\xef\x18\xda\x6b\x23\xbb\xfe\x77\xa5\x57\xf1\x0d\x36\x0b\x9c\x13\xc5\x3a\x51\xac\x23\xa6\x58\xff\xe7\x16\x9b\xab\xf3\x48\x88\xd6\xd3\xd9\xff\x02\x00\x00\xff\xff\xaa\xab\x7f\xe5\xd3\x37\x00\x00")

func static_bleve_mapping_js_mapping_analysis_js_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_js_mapping_analysis_js,
		"static-bleve-mapping/js/mapping/analysis.js",
	)
}

func static_bleve_mapping_js_mapping_analysis_js() (*asset, error) {
	bytes, err := static_bleve_mapping_js_mapping_analysis_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/js/mapping/analysis.js", size: 14291, mode: os.FileMode(420), modTime: time.Unix(1445453689, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_js_mapping_index_mapping_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x56\xdf\x6f\x22\x37\x10\x7e\x86\xbf\x62\x8a\xa2\x63\x57\x22\xd0\xe7\x44\x79\xe0\x92\x97\x6b\x95\x4b\x75\x8d\xfa\x12\x45\xc8\xec\x0e\xe0\xe0\xb5\x57\xb6\x37\x39\x7a\xe1\x7f\xef\x78\x7f\xb0\xde\x1f\x10\xda\xaa\x2a\x0f\x09\xd8\x33\xdf\x8c\xe7\xfb\x66\xec\x55\x26\x23\xcb\x95\x04\x2e\xb9\xfd\x2c\xf0\x15\xbf\xc8\x18\xbf\xdf\xb3\x34\xe5\x72\x7d\xab\xa4\xd5\x4a\x08\xd4\xc1\x10\xe8\x73\x61\x22\x95\xe2\x04\x2e\x36\xd6\xa6\xf4\x4f\xa8\x35\xfd\xcd\xf8\xf2\x5e\xc5\x4c\x4c\x08\xa4\xf6\xfd\x22\x27\xa0\x52\x87\x6d\x42\xf8\x91\xbb\x97\x3f\xe1\xe6\xf0\xed\xfd\x1d\x7e\xec\xaf\x87\x1e\xf8\xd4\x58\x66\x79\xb4\x48\x35\xae\xf8\x77\x32\xed\x5d\x26\xbf\x71\xb1\x72\xb9\x74\x49\x5f\x26\x45\xd0\x31\x61\x0d\x5e\x99\x6e\x64\x02\x37\x39\xbe\x17\xa3\xb9\x0b\xbf\xfc\xfe\xf0\x75\x9a\x32\x6d\x30\xc8\xbf\x1a\xab\x69\x83\xaf\x76\x41\xf3\x40\x61\x58\xa6\xea\x2f\x4f\xed\x2e\x45\xe3\xc5\xe8\xd9\x2c\x8f\xd9\xd9\x65\x92\x89\x9d\xe1\x47\xbd\x0f\xfb\x25\xc0\xa0\x77\xb7\xf8\xf2\x27\xea\x0f\x71\x3c\xcb\xd3\x88\xd1\x86\xe9\xc5\x8a\x0b\x7b\x0e\x68\xc3\xf8\x34\xae\x55\x5b\x94\xfc\xac\x54\x3d\xd3\xf7\xf7\x8f\x20\xcf\xce\xb5\x69\x7d\x46\xb2\x0b\x52\xd6\xb9\xb0\xb9\xa9\x2f\x69\xbe\x82\x86\x84\x9e\x46\x31\xae\x58\x26\xec\xa2\xd4\xeb\xe8\xb9\xea\x8d\x7e\xe5\x3c\x8d\x46\xcf\x24\xd0\x0f\x30\x0a\x65\xed\x8b\x98\x4e\xfd\x36\x89\x72\xaf\xb2\xa5\x1f\x09\xaa\xdb\xd1\x55\x33\x77\xa3\x86\xcd\x8e\xe4\xe6\x0f\x26\x78\x4c\x88\xd5\xb4\x08\x28\x6b\xd0\x68\x33\x2d\x5d\xac\xca\x22\x08\xaf\xa1\xd5\xcd\x3e\xf8\x37\x34\x94\x76\xeb\x38\xc5\x62\xe9\x94\x67\x3b\x2f\x8b\x7a\x6b\xb5\x08\x4e\x4f\x9c\x2a\xd1\xd9\x0c\x2e\xff\xe6\xa7\x91\x65\xd5\x16\x5f\x59\x82\xde\x78\x6a\xad\x13\xb3\x4f\x54\xeb\x41\xe9\x24\x14\x8b\xe7\x2d\x47\xbf\x40\xf5\xd0\x71\xb9\x4f\x53\x65\x6c\x30\x9e\xb1\x94\xcf\x16\x0d\xdc\xf1\xe4\x78\xb1\x82\x30\x9c\x1e\x70\x4c\x16\x45\x68\x4c\x70\x08\x12\x33\xcb\xfc\x40\x27\x4e\xe4\x4c\xeb\xee\xbf\x3e\xb8\xec\x3d\x7c\xd4\x5a\xe9\x26\xfa\x04\x22\x15\xa3\x8b\x31\x18\x54\xe7\xce\xcd\xee\x29\x11\xb6\xc6\x12\xd9\xc7\xa3\x02\x55\xa3\x8e\xd4\xdf\x5f\xc9\x9b\x1b\x90\x99\x10\x39\xae\x97\x74\xa7\xa2\x24\x28\x5f\xda\xa5\x19\x45\xc4\x47\x9e\xe0\x6f\x6e\x62\x77\x38\xeb\xdb\xed\x61\xee\x8e\xcc\x6c\x07\xe4\x4c\xfe\xe2\xae\xf3\x7f\xc2\x62\xff\x49\x73\x2e\xab\x14\x16\xf9\xbd\xf5\x7f\x50\xda\x9b\xdc\x71\x62\x7b\x0a\xde\x4f\xef\x72\x67\x71\xae\x35\xdb\xd1\xac\x7a\x45\x6d\xbb\x14\x1f\xb3\x70\x34\x8f\x5f\x8c\x92\xe3\xe7\x7a\x30\x3c\x3e\xdc\x3d\x5c\x81\xcb\xe0\xf3\x11\xb7\x95\x56\x09\x50\x4e\xb4\x36\xfd\x97\xf3\xa4\x9c\x89\x35\x99\x84\x34\x17\x42\xbd\x19\xb0\x1b\x84\x88\xb9\xc9\x0b\x56\x41\x8c\x14\x3e\xe1\x12\x5d\x49\x69\x4b\xe3\xd8\x00\xa3\xe1\xed\x06\x6d\xae\x20\x28\xc7\x7b\x4d\x66\x39\x65\xaf\x5a\x73\x79\x32\xfc\x30\x1a\xa5\xa5\x39\x8d\xd6\x62\x39\xd3\x1a\xa5\x6d\x46\x99\xf8\x18\x29\xea\x8d\xbb\xca\xb8\x24\x4f\x93\x52\xc9\xd1\xa1\x30\xc8\xa8\x4a\x94\xe7\xad\x46\x22\x73\x76\xa7\x24\xce\x1e\x7e\x85\x65\x66\x2d\xbd\x20\x23\xc1\xa3\xed\xb5\x8f\xa3\xf4\x24\x8f\xe8\xdc\xe0\x8d\x49\xeb\x9e\x5b\x04\x64\xb0\xc8\xa4\x91\x41\xf1\x0a\xeb\xbd\x0b\xaf\x8e\xb7\x96\xaf\x9f\x7f\xcc\x9a\xf7\x08\xee\xb6\xae\x7f\x3f\x93\xfa\x7f\x6a\x16\x9f\x5a\xbb\xd5\xba\xa5\x04\x5c\x1b\x78\x3d\x54\x73\xe4\xee\x67\x7d\xf2\xd1\xd9\x73\xd8\xc3\xcb\x33\x8f\x50\x3d\x39\xf3\xbb\xd7\xd6\x97\x7b\xd5\x4f\x85\x51\xeb\x99\x40\xe6\xba\x7e\x54\xd4\x86\x31\x0a\xd2\x62\x73\x6f\xd8\x3a\xcc\xf1\x5c\x4d\xa4\xb3\x65\xa0\xc3\xb0\xd9\xca\x44\xc5\x37\x24\xa1\x19\xfe\x8a\x62\x47\x30\x89\x22\xf5\x91\x02\xf5\x0e\x48\x7b\xf4\xf7\x8d\xdb\x0d\x8c\x2f\xc6\x50\xbc\xe8\x27\xf0\xb6\xe1\xd1\x06\x12\xbe\xde\x58\x58\x62\x85\x12\x67\x85\xf4\xe4\x3a\x13\x4c\xbf\x18\x48\xd0\xb2\x7c\x00\x36\x99\x2b\xf2\x48\xda\x6c\xb9\x33\xa9\x95\x5b\xa7\xc9\x34\x52\xcb\x17\x8c\xec\xa8\xcd\xd8\x4a\x69\x08\x1c\x2d\x5b\xa7\xf8\xa4\xbd\xdd\xc2\xda\x16\x58\x45\x09\x46\xf0\xe9\x13\x6c\xf3\x17\xf0\xdc\x06\x3f\x17\x5b\x17\x9d\x08\xad\x5a\x27\x4f\x5b\x8f\x00\xff\x13\x29\xd7\x24\x19\x76\x77\x3d\x05\x55\x1f\x07\x43\xac\x96\x47\xa7\x1f\x61\xd3\x6d\xdf\x27\xbf\x92\xd1\xa4\xa2\x6b\x3f\xfc\x2b\x00\x00\xff\xff\x5f\x50\x03\x26\x03\x0e\x00\x00")

func static_bleve_mapping_js_mapping_index_mapping_js_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_js_mapping_index_mapping_js,
		"static-bleve-mapping/js/mapping/index-mapping.js",
	)
}

func static_bleve_mapping_js_mapping_index_mapping_js() (*asset, error) {
	bytes, err := static_bleve_mapping_js_mapping_index_mapping_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/js/mapping/index-mapping.js", size: 3587, mode: os.FileMode(420), modTime: time.Unix(1445455002, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_js_mapping_type_mapping_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x59\x5f\x8f\xdb\xb8\x11\x7f\xdf\x4f\xc1\x13\x82\x93\x8c\xf5\xea\xd2\x57\xbb\x41\x91\xcb\xe5\x80\x14\x68\x6f\xb1\x4d\xef\xc5\x58\x18\xb4\x44\xef\xb2\xd6\x1f\x83\xa2\x7c\x71\x2f\xfb\xdd\x3b\x43\x8a\x14\x49\x51\x5e\xa7\x40\x84\x00\x91\x35\xc3\xe1\x70\x38\xf3\xfb\x0d\xb9\xfb\xbe\x29\x24\x6f\x1b\xc2\x1b\x2e\x7f\xae\xd8\x89\x7d\x3e\x1f\xd9\x3f\xe8\xf1\xc8\x9b\xa7\x0f\x6d\x23\x45\x5b\x55\x4c\x64\x6f\xba\xa2\x3d\xb2\x25\x91\xa3\xf4\x53\xb3\x20\x7f\xde\x10\x78\x6a\xfd\xa1\x23\xef\xc8\x0e\x4d\xc0\xb8\x13\x13\xf2\x57\xd1\xd6\x8e\xb5\xcc\x1f\x7b\xa3\x86\x6a\xbb\xf9\x9e\xb3\xaa\x44\x5d\xb4\xb1\x49\x25\xfb\x22\xd3\x25\x49\x9b\xbe\xde\x31\x81\x6f\x25\x95\x4c\xf2\x9a\xa9\x77\xde\x51\x98\xa7\x4c\x1f\xd7\xda\xc8\x89\x0a\x72\xe0\x4d\xf9\x5e\x4a\x81\x06\xb4\x57\xf8\x24\xca\x70\xb2\x72\x3e\xe1\x93\x1e\x05\xcc\x2a\xe4\x39\x5d\x91\xa6\xaf\xaa\xa5\x2f\x6d\x28\x4c\x14\x95\xe0\x12\xe2\x12\xda\xd0\xea\xfc\x5f\x70\x36\x2a\xed\x64\x2b\x66\x06\x82\xdf\xec\xcb\x9c\xa8\xa8\xfa\x92\x6d\x25\x13\xf5\xf6\xc4\x0a\x30\xd2\x5d\xd6\xe4\xcd\x96\x56\x55\x5c\x07\x43\xb8\xdd\xb7\xa2\xa6\x72\xa2\xf0\x32\xbe\x26\xc3\x6e\x4e\x83\x36\x1f\x16\xd6\xe8\x0d\x89\xcf\x7b\x86\x81\xbc\x98\x11\xb2\x3d\xed\x2b\xb9\x0d\xc2\x37\x3a\xa6\xde\x5e\x86\x8d\xb6\x9b\xbc\x49\x07\x2f\x31\x67\xd2\x47\xd8\xf3\xa9\xc8\xa6\xc7\x4f\x3f\x91\xbb\xff\xef\xf1\x72\xd4\xc9\x72\xf3\xba\xf6\x14\x58\xc9\x25\x7c\x05\x39\x2e\xc1\x97\x1d\xdb\x63\x7f\x9c\x97\x7c\x6e\x9f\x9e\x2a\x06\x72\x53\x8f\x59\xbb\xfb\xcf\xc2\xd9\x80\xc0\x4c\xe6\xff\x7e\x47\x94\xfa\xdf\x94\x79\xb2\xc2\x5f\x6b\x1d\x38\x6f\x2a\xc1\xea\xf6\xc4\xb0\x2c\xef\xa9\x60\x8d\x0c\xe6\x5b\x12\xa5\x16\x99\x16\x57\xa6\x82\xfb\x4b\xdb\x30\xad\xba\xa7\x55\xc7\x16\x6b\x0c\xee\x07\xda\x14\xac\x22\xb4\x39\x13\x54\xec\xf2\x1b\x3b\xde\x9d\x37\x5b\xc4\x7c\xa2\x65\xf9\xe1\x99\x57\xe5\xaf\x58\xa8\xae\x43\x43\x8c\x5d\x6f\xf8\xde\x2e\x7c\x88\xf5\x22\xc8\x51\xc1\x64\x2f\x9a\xb5\x93\x3e\xf6\x15\x41\x62\xef\x81\x03\x3e\x5b\xcc\x9b\x15\x49\x15\x4e\xa4\x7e\x72\x1a\x90\x58\x91\x24\xf1\x25\x58\x09\xd3\xaf\x08\x0e\xf0\x15\xc1\x2b\x90\x98\xec\x9e\x8e\x51\xc0\xb0\x22\x52\xf4\xcc\x17\x28\x58\x88\x0b\xa6\xa0\x70\x49\x4f\x43\x42\x4c\xc3\x01\x84\x09\x1e\x8c\x21\xdc\xe7\xdb\x31\xb1\xed\xee\x40\xe0\x89\xde\xd6\x8f\xc0\x11\x67\xb3\x5b\x1a\xc8\x3b\x48\x0f\x48\x0d\xc7\x88\x2f\xce\xfb\xa6\x7b\xe6\x7b\x99\x81\xd6\x4d\x2c\xd7\x86\xc9\xd6\x73\xe9\xaf\xab\x48\x39\x1a\x4d\xa6\x81\x65\xbe\x67\x3a\xe1\xe0\xda\x4c\xa3\x3d\x0a\x47\x5b\xf1\xe0\xde\x6c\x5a\xd6\x73\x69\xe9\x4c\xa0\x4d\x40\x89\x7b\xc8\x07\xb5\x6e\xe1\xee\x9a\x14\x1d\x80\x3a\x9a\x0d\x1a\xa6\x63\x22\xbd\x6b\x2b\xb2\x79\x5c\xc6\x16\xa8\x24\xb1\xd4\xa9\xbf\x29\x75\x8c\xb5\x25\xa9\xe3\xc9\x63\x14\x6c\xfa\xd4\x17\xd3\xa7\xfe\xe6\xf4\xb1\x30\x77\x01\x88\x71\xbf\xe8\xa0\x33\x72\x0e\x28\xe5\x6a\xcf\x1e\x9d\xc2\x69\x05\xc9\x8c\x3a\x94\xa3\x1e\x16\x26\x09\x8c\xdc\x24\xdb\x84\xdc\x6a\xb5\x5b\x92\x6c\x3f\x3e\x3c\x24\x8f\x9e\x9b\x17\x94\xef\x1f\x3e\xfe\xae\xb4\x51\x86\x5f\x1f\xa3\x69\xa6\x1c\x1c\x63\x83\x7b\x3c\x09\xcf\x28\x9e\xe1\x0f\x8f\x06\x26\xe4\xd1\x1e\xc2\x38\x9d\x68\xc5\x4b\x3b\xdb\x77\x0b\xa1\x51\xf8\x1d\xa7\xa3\x80\x87\x60\x57\x29\x9a\x78\xf8\xb8\x08\x85\xeb\xbb\xea\x4a\x3c\x3b\x31\x25\x3d\xa1\x5e\x97\xa7\xac\x83\x80\x9f\x16\xe4\xc7\x1f\xb5\xce\x7a\x32\xfc\xc5\xfb\xf2\x42\x18\xb0\x28\xd4\x83\x65\x51\x28\xce\x7c\x32\xc8\x6e\xed\xb0\xcd\xd1\x14\xf0\xe7\x7a\x99\xc3\xac\x1f\x94\x63\xdf\x00\x74\xd7\xed\x41\xc9\x2a\x26\xd9\x6c\x36\xaf\xaf\x54\x0e\x97\x12\x3a\xdf\x1e\x30\xb6\x48\xb4\xed\x3e\x73\x73\x7a\x81\x18\x99\x9a\x84\x4c\x23\x55\x66\x55\x33\xdd\xb5\x7c\x6a\x4e\xed\x81\x11\x93\xf4\x85\x0e\x3f\x55\x87\xa1\x02\x18\x73\x47\x8b\x43\x1e\x73\x64\xf4\xde\x9a\xbc\x50\x4a\x73\x58\x53\x3c\xd3\xe6\x89\x95\xf7\x43\x8f\xe1\x56\x93\x82\xdb\x90\xa8\xd4\xc7\x7c\x8b\xb0\xae\xa2\x84\xeb\x1d\xbe\x99\x3e\x45\x7d\x0f\x57\xae\x75\x70\x18\x31\x03\x8c\xfe\x3a\xec\xb2\x3d\x07\xdb\x23\x3a\xe3\x1f\xa7\x68\x51\xb0\x23\x34\x0b\xd6\xd5\xae\xed\x45\xc1\xde\xab\xcf\x4b\x88\x4c\x27\xdd\xf7\x4f\xd8\xc3\x84\x0e\xbd\xce\xba\xf8\xe8\x84\xd4\x5d\x66\x98\xd9\x93\xe2\xd7\x5e\xfc\x42\x25\x05\x6f\x5d\x97\xf2\x37\x75\x0b\xdb\x05\x35\xda\x07\x56\x70\x18\xba\x88\x2c\x0a\x83\x46\xcf\xf3\x37\xb0\xbd\x35\x34\xc7\x39\x26\x65\x86\xa7\x26\x7a\xa7\x8e\x7d\x8b\x00\x48\x06\x17\xb3\x71\x76\x8d\x5f\xb7\x09\x9e\x9b\x29\x6f\x98\x48\x54\x5a\x9a\x79\x66\xe2\x6d\x8f\xe0\x2e\x29\x52\x21\x96\xc0\xd6\xf0\xea\x46\xc7\xd6\x22\x07\x9f\xdf\xae\xe1\xbf\xbf\x12\xd0\xcc\x2b\xd6\x3c\xc9\x67\xf8\x7d\x7b\x1b\x0b\x37\xa8\x6c\x38\x80\x07\xf8\x32\x31\x69\xb7\x16\xcc\x74\xc7\x8a\x17\x2c\xe3\x4b\xf2\x97\xc5\x3c\x9c\x38\xae\x0f\x21\x70\x32\xb5\x53\x78\xb8\xf2\xd8\x3e\x16\x35\x9f\x80\x9c\xe3\xa7\x73\x49\xf0\xba\x15\xf7\xb6\xe1\x73\xeb\xde\x35\x04\x67\xb6\xc5\x34\xf6\xb0\x04\x44\x5d\x3d\x98\xec\xe1\x50\x44\x28\x69\x18\x15\x77\xca\xea\xdd\x5e\x70\xd6\x94\xd5\x99\x38\x66\xb1\x65\xa6\xd0\xb3\x8b\xbe\x80\xf9\x19\x91\x2d\xa1\x68\xe5\xdf\x9f\x46\x75\x5f\x25\x27\xe4\xe7\x33\x49\xd0\x6e\x02\xec\xd0\xe8\x0d\x20\x7f\x70\xf9\x0c\xcd\x19\x39\xb0\x33\x8e\x17\xec\x28\x58\x07\xa2\x8e\xc8\x67\x46\x86\x43\xb1\x8a\x85\xed\x7e\x6e\x6c\x9e\x5c\x79\xc7\x62\x62\xa6\x3a\xcc\xf1\xec\xba\x31\x84\xe8\xa8\xc2\xe7\xbf\xff\xeb\xb7\x7f\xe6\x47\x2a\x3a\x96\xa9\x57\x58\x01\x08\xf8\xfe\xec\x99\x1c\xe2\x68\xf3\x50\x79\x08\x9c\x10\x99\x36\x98\x1a\xdb\x80\x51\x69\x83\xef\x2e\x33\xdb\xde\xee\xd8\x77\xcf\xb6\x59\x9f\xf6\x80\xaa\xc2\xc0\x96\xd7\x05\xaf\x27\xe0\x3c\x48\x37\x09\x02\x9f\x4b\x28\x58\x0e\x38\xf7\x4c\xaf\x6e\x80\x52\x9e\x67\xda\xf5\x42\x87\x3d\xf0\x70\x50\xb0\x8b\xe8\x5a\x50\x29\x39\xd4\x13\x3d\xff\x26\x4a\x26\x3e\xb4\x35\xc4\x56\xf5\x14\x6b\xaf\x74\x82\x9b\x04\xbb\xc7\xf1\xc1\x19\x5d\x92\x9d\xeb\xba\xc1\x20\x9a\x0f\x03\xb6\x2d\x8e\x20\x5f\xbf\x92\xb7\x0b\x72\x47\xb2\x5d\x4c\xb0\x8e\xc2\x0f\xef\x3e\xd6\x47\x79\x0e\x1b\x5e\xbb\xd7\x07\xdc\xe8\x40\xe8\xf8\x10\x40\xf5\x4b\xe8\xe3\x58\xf1\xe1\xc4\x61\x4c\xe3\x09\x64\x72\xd7\x15\xe9\x83\xc9\x78\x21\x33\x9c\x2f\x71\x95\x1b\x37\xbb\xec\x1a\x0c\xf5\xe1\x52\xcc\x98\xe1\x1b\x67\xd1\xc6\xb2\x76\xac\x8f\x9a\x1b\x63\x28\xe8\x6c\x30\xbd\x4c\x1c\x6b\xd7\x72\x0c\x72\xa1\xf0\x81\xfe\xeb\x16\xf3\x35\xed\xcc\x62\x78\x03\xa8\x02\xff\xec\xe0\x72\x90\x4c\xfb\x42\x87\x0e\x70\x3d\xc3\xea\xe7\xbb\xd6\x21\x60\xb8\xa2\x41\x17\x68\x61\xda\xa3\x2a\xd3\x5e\xa7\x00\x23\xa6\x4d\xc3\x44\x7d\x28\x5e\xdd\xbe\x5c\xdb\xfa\x4e\xd4\xea\x49\x8d\xa7\x53\x5b\xb5\x29\xd4\x79\xb7\x02\x44\x09\xd9\x1b\x1f\x9b\x78\x17\xd8\x2e\xc6\xbd\x10\xec\x78\xa8\x6d\x50\xc7\x35\xe8\x8b\xa5\x28\x96\x84\x58\x35\xa6\x4b\x12\x85\xc6\xcb\xa8\xe2\xfb\x70\x0d\x04\x39\xc6\xe3\x97\x9b\xa1\x92\x2d\x37\xfd\xb2\x9e\x65\x52\x7a\x81\x11\x15\x69\xc6\x88\x16\x8d\xcc\x73\xed\xf7\x26\x52\xbf\x7d\xb0\x7d\x83\xc3\xa1\x3e\x5f\xfe\x69\xee\xa4\x9d\xc8\x75\x85\xe8\x77\xd9\x3c\x93\x5a\xab\x13\x1e\xe5\x0e\x20\x75\xf3\x0c\x6a\x34\x54\xd9\xc6\x5a\xa6\x8d\xc7\x63\x00\x83\x89\xba\x1b\x18\xbe\x5e\xc1\x93\x21\xd1\xdd\x5b\x14\x52\x17\xb4\x9d\x43\x7c\x93\xf4\xf0\x99\xe6\x1d\xe1\xeb\x48\xaf\xe8\x38\x3b\x5e\xcf\x3f\xb0\xa2\x17\x1d\x3f\x31\xc8\x16\xdd\x05\x13\xd8\x19\xd8\x5e\x67\x93\xd3\x6d\x0a\xd5\xce\xf6\xfc\x4b\xee\xd3\x87\x8e\x7a\x1d\x1e\x98\x86\x43\x62\xad\x5a\xf0\x04\x78\x8b\x15\x32\x99\x14\xac\x47\x6e\xf5\xdc\xad\xc0\x60\xeb\xa0\x6d\xe9\x0d\x4d\xf0\x24\x7a\xc0\x73\x9c\x78\x2f\xb3\xb7\x5a\xb4\x9d\xcc\x10\x06\x7c\x73\x98\x41\x5c\x08\x38\x1c\x86\xc2\x73\x8a\x13\x40\xf7\x41\x33\x36\xe1\xf0\xc7\x35\x08\x66\x5a\x0e\x6f\x5b\x82\xe8\x17\xa6\x8a\x75\xa9\xeb\xf2\x32\x20\x9b\xa8\x83\x3a\xdf\xf5\x92\x69\x9a\xa2\xc6\x44\xd9\x16\x3d\x1e\x9a\x6c\xae\x62\x4f\x08\x05\x38\x42\x1a\x4a\xf2\x28\xef\x4f\x53\x2c\x2c\x00\xc7\x8a\x2e\x3c\x57\x68\x41\x29\xce\xf8\x17\xa9\xf1\x2a\x4a\x1c\x4f\xdf\x96\x0e\x7f\xb0\x17\xbe\xb8\x78\x80\x1f\xde\x11\x5a\x55\xed\x1f\xb1\xdb\x1b\xaf\xef\x78\xe7\x2c\x66\xe3\x5b\x8d\xe4\x05\x4e\x3d\x0e\x8d\xdf\x32\x9b\xe7\xaa\x29\x26\x17\xcd\xee\x73\xe1\x72\xd8\x7d\xec\x45\xb1\xea\xf8\xe6\xf5\x46\x2f\x56\xb0\x69\xf3\x7a\xe3\xed\x72\x54\xe5\xe5\xaa\x82\x30\x2b\xcc\x5f\xeb\x44\x66\xfb\x8e\x57\x07\xfa\x93\x0e\xf5\xac\x34\x37\x63\x85\x04\x9b\xa8\xc3\x3f\x03\x8c\x81\xd5\x30\x65\x63\x74\x80\x4f\x40\x09\x79\x9c\x14\x9c\xa0\x60\x1e\xb8\xbc\x10\x67\x04\x67\x51\xb3\xa7\x27\x7c\x2e\xa0\xbd\xa7\xf7\x3a\x81\x44\x62\x60\x51\xd2\xfc\x15\x3a\x68\x85\x72\x0f\x0a\xc6\x1f\xee\xdf\x1c\x66\xbb\x94\xff\x05\x00\x00\xff\xff\xc8\x18\x29\xc5\xec\x20\x00\x00")

func static_bleve_mapping_js_mapping_type_mapping_js_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_js_mapping_type_mapping_js,
		"static-bleve-mapping/js/mapping/type-mapping.js",
	)
}

func static_bleve_mapping_js_mapping_type_mapping_js() (*asset, error) {
	bytes, err := static_bleve_mapping_js_mapping_type_mapping_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/js/mapping/type-mapping.js", size: 8428, mode: os.FileMode(420), modTime: time.Unix(1445644945, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_analyzer_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xe4\x57\x4f\x6f\xa3\x3e\x10\xbd\xf7\x53\x58\xe8\x77\x68\x0f\x94\xf6\xd7\x2b\x41\xaa\x22\xed\xad\xbd\xec\xde\x57\x0e\x4c\x82\x15\x63\x23\x63\xb2\x4d\xa3\x7c\xf7\xf5\x1f\x02\x36\x38\x29\xdb\x76\xa5\x4a\x1b\x29\x89\xb1\x67\x9e\x67\xde\x3c\x7b\x44\x5a\x90\x1d\xca\x29\x6e\x9a\x45\xb4\xa2\xb0\x83\x27\x5e\x60\x1a\x65\x57\x57\xee\x4a\xa5\x27\xe3\x12\x70\x01\x42\xad\x21\xf5\x49\xcb\x07\x7f\x55\x12\x49\x21\xca\x96\x6d\x23\x79\x85\x1e\x19\xa6\xfb\x57\x10\x69\x52\x3e\x64\x57\x69\xa2\xc0\x82\x98\x2b\x5e\xec\x4f\x88\x7a\x91\x6d\xe2\xa6\xe4\xbf\x16\x11\x08\xc1\xc5\x13\x34\x0d\xde\x40\x64\xd6\xcd\xa7\x73\xc6\x14\x84\x44\xe6\x37\x2e\x30\xdb\x80\xd0\x9e\x39\xe5\x78\xeb\x18\x0b\x4e\xa1\xb3\x8d\x32\x74\x38\xb8\x98\xc7\xa3\xdd\xb4\x8b\xcc\x8c\xd7\x5c\x54\xa7\x1d\xf4\x38\xea\x10\xcc\x38\xeb\x71\xdd\x2c\xf4\x52\xbc\x11\xbc\xad\x1d\x03\x63\x44\xf1\x0a\x28\x52\xeb\x2a\x02\x86\x2b\x45\xcd\xb3\xfa\x4d\x13\x33\x3f\xb2\x25\xac\x6e\xa5\xce\x40\x91\x02\x74\x11\x19\x7b\x24\xf7\xb5\xda\x5c\xc2\x8b\x8c\x3c\x73\x9f\x0a\x13\x41\xce\x99\x54\xb1\x46\x88\x14\xca\xc3\xba\xd7\x14\xe7\x50\x72\xaa\x6a\xb6\x88\x9e\x4d\x04\x43\x0a\x4e\xda\x33\x53\xb2\x09\x65\xcb\x12\x0b\x9c\x4b\x45\xf8\x37\x42\xd5\x5f\x13\xc8\x28\x6d\xe9\x09\x8c\x92\x46\x76\x60\xa3\x1c\xfa\x4a\xe3\x4e\x2a\xb7\xb9\x82\xfe\xb9\xb6\xa8\xb7\x14\xd8\x46\x96\x28\x45\xf7\x13\x62\xc9\x14\x3c\x26\x12\x54\x89\x9e\x39\xd3\x0c\x13\x2f\x98\xa4\xfd\x5b\xc1\x65\xe8\x6e\xec\xd8\x92\xb8\xe1\x42\x62\x75\x96\xa6\x90\x5d\x75\x83\x98\xf3\xb3\x9c\x68\x41\x21\x0b\xa8\x01\xcb\x01\x5a\x57\xc9\xd6\x07\x11\x86\x82\x1b\x22\xa9\xea\xb8\x45\xab\x3d\xfa\x8f\xb0\x02\x5e\x46\x01\xa8\x10\x9a\x1a\xb3\x53\x10\x1b\xba\xaf\x4b\xa2\x64\x86\xfa\x51\x5c\x11\xd6\xaa\xb8\xd3\x44\x1b\xea\xf3\x85\x02\xdb\x77\xe7\x6c\x0c\x6b\x4e\x2b\xc9\xb7\x8b\x48\x40\xc5\x77\x30\x78\x5c\xdb\x70\x6e\x82\x9a\xbf\x14\x8e\x05\x42\x75\x4b\x69\x2c\xc8\xa6\x94\x7d\x68\x3e\xb3\x41\x7d\xb8\x13\xf3\x8f\x77\x16\x3e\xce\x0e\x40\xce\x69\xdc\x54\xf1\xfd\x5d\x80\x5e\xa0\x90\x9b\x53\xaf\xca\xa2\xae\x30\x55\xbd\xa2\x18\x78\x58\x9a\xc9\xe2\xfa\x0c\x11\x9e\xa0\xac\x9f\x39\x96\xd6\xd9\x1c\xf7\x33\x7e\xa1\x7b\x23\x6c\xaa\x2f\x93\x29\xf6\x58\xaa\x26\x19\x5e\x4b\xc2\x99\x2b\xc5\xdc\x93\xe0\xf0\xa4\x43\x53\x10\x87\xc3\x30\x75\x3c\xa6\x89\x05\x98\x90\x94\x58\x96\xc6\x25\xf4\x6f\xaf\x33\xa4\xff\x3f\xe5\x7c\xd5\x4a\xc9\x5d\xf5\x79\x94\x5f\xcb\x92\x34\x37\xa7\x8b\xd7\xda\xbe\xc1\xe2\x4a\x32\xa4\xbe\x71\x01\x6b\xdc\x52\xe9\xa9\xef\xb1\x28\xd2\xc4\xa2\x04\xe3\x3f\x3b\xf1\xee\xdb\xb9\x6f\x37\xe6\x14\xfe\xe0\x5b\x60\xe4\x55\xb7\xec\x7e\x18\xba\xad\xa7\x42\x94\x27\xf3\x8b\x22\x0c\xdc\x68\xbd\x63\xc8\x7e\xa6\xf0\x8c\xea\xa6\x29\xf8\x0c\x4e\xf5\xd6\x6f\xad\xe5\xd6\x3f\xf4\x6a\xeb\x67\xc2\x62\x9b\x0a\xed\xfd\x2d\xd2\x04\xfd\xf9\xed\xd1\x64\xf0\x65\xfb\x63\x30\xba\x8f\x36\x48\x0f\xf4\x73\x3b\xa4\x29\x52\xa0\x45\x5e\xda\xf2\x43\x3d\xd1\xdd\x70\x66\x53\x74\x5c\xfe\xed\xae\xe8\x10\xf1\x67\x6d\xd1\x71\xfc\x9c\x96\x78\xea\x89\x0e\xf0\xcc\x7e\x28\x7d\xc1\x49\x3f\xb2\xe1\x8e\xfa\x50\x4b\x7c\x83\xf0\x99\x1d\xd1\xd5\xdd\xd7\x6a\x89\x76\xa8\xeb\x74\xe9\xa5\x72\xcd\xb9\x1c\x5e\x54\xbb\x0c\xc3\xd1\x45\x4e\xe6\x39\x66\x39\x50\xa5\xac\x6c\x69\x46\x7e\xa4\x53\xa6\x56\x2d\xa1\x5a\x88\x17\xc8\x19\x6d\x5a\x0b\x52\x61\xb1\xf7\x28\xf9\x8e\x77\x30\xec\xd4\x27\x65\xff\x7f\x07\x00\x00\xff\xff\x02\x33\xbe\x93\x9f\x0f\x00\x00")

func static_bleve_mapping_partials_analysis_analyzer_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_analyzer_html,
		"static-bleve-mapping/partials/analysis/analyzer.html",
	)
}

func static_bleve_mapping_partials_analysis_analyzer_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_analyzer_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/analyzer.html", size: 3999, mode: os.FileMode(420), modTime: time.Unix(1445528461, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_analyzers_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x54\x4d\x8f\xdb\x20\x10\xbd\xe7\x57\x20\x4e\xbb\x52\x9d\xa8\x3d\xdb\x96\x2a\xb5\xc7\xee\xad\x3f\x00\x9b\x59\x1b\x2d\x0b\x08\xc6\x9b\xb8\x51\xfe\x7b\x07\xfc\x9d\xa6\xc9\x6d\xa3\x28\x79\x03\xcc\xcc\x7b\x7e\x83\x73\x14\x95\x06\x56\x6b\x11\x42\xc1\x87\x20\xfd\x66\x01\xbd\x72\x20\x79\xb9\x63\x2c\xc7\x16\x84\x8c\x28\x62\x3f\x80\xb4\x5c\xbe\x88\x77\xc8\x0f\x04\x56\x6b\x4b\x4c\x28\x9d\x8e\x2b\x63\x85\x1c\x2b\x2b\xfb\xb9\x16\x33\x4d\xe6\xc1\x81\xc0\x82\x3f\x09\x43\xd5\xbe\x88\x0f\xa1\x9f\x99\x32\xf4\x95\x70\xfa\x25\x9c\x53\xa6\xd9\xd3\x9e\xee\x83\x0a\x03\xf8\x03\x3e\xf0\xa5\xa7\x2c\xcf\xe7\x94\x7c\xb9\x50\x2b\xb9\xde\x18\x21\x05\x52\x7d\x4c\x42\x2b\x34\x59\xe3\x6d\xe7\xd8\x8c\xb2\x53\xe0\xcc\x5b\x0d\x05\x4f\x31\x5f\x32\x29\xb7\xea\x10\xad\x89\x64\x6b\xad\xea\xb7\x82\x83\x54\xf8\x7d\x64\x32\xf2\x66\x89\x38\x67\xd8\x3b\x2a\x32\x64\xf0\x55\x91\xe9\xb3\x70\x48\xdd\x25\xbc\x8a\x4e\x63\xc2\xa7\xb0\x69\x4b\x8d\x83\x13\x66\xca\x68\x74\xef\x5a\x55\x13\x8f\x19\x65\x91\x07\x67\xc2\x2b\x91\xb5\x4a\x4a\x30\xe4\xa2\xef\x80\x93\x09\x31\xb5\x64\x3f\xe9\xc0\x5a\xc9\x61\x20\x76\x5f\x9d\x04\x0d\x08\x5b\x7d\x9f\xad\x0c\xbd\x08\xed\x5d\x69\x3f\x12\xcb\xbb\xe2\xf2\x03\xb9\x3e\x8f\xc3\x3c\x1a\xd3\x5c\xce\x23\x18\x5a\x7b\x2c\xf8\x6f\x54\x3a\xec\xdf\xa0\x0f\x4f\x0f\x66\xef\x79\xaf\xc1\x34\xd8\xb2\x9c\x7d\x5d\xcf\x21\xab\xad\x8e\xe4\x0a\xfe\x8d\x97\x2f\xd6\xc0\xbf\x3d\xe9\x7f\xba\x01\x39\xbe\x5a\x8b\x37\xee\xd5\xb6\xce\xee\xff\x46\x19\x38\xce\x2e\x3d\x34\xe8\xca\x9e\xf0\xbe\x71\xc9\x75\x5a\x67\x5e\x35\x2d\x12\x73\x38\xb2\xa9\xee\xf5\x43\xbd\xa9\x68\xd0\x41\x20\xbe\x3b\xca\xdd\xdf\x00\x00\x00\xff\xff\x11\x61\x6b\xeb\x57\x04\x00\x00")

func static_bleve_mapping_partials_analysis_analyzers_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_analyzers_html,
		"static-bleve-mapping/partials/analysis/analyzers.html",
	)
}

func static_bleve_mapping_partials_analysis_analyzers_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_analyzers_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/analyzers.html", size: 1111, mode: os.FileMode(420), modTime: time.Unix(1445528403, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_charfilter_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x54\x4d\x8f\x9b\x30\x10\xbd\xef\xaf\xb0\x7c\x6a\x0f\x14\xb5\x7b\x05\x2e\x91\x7a\xdb\xbd\xb4\x7f\xc0\x98\x09\x58\x3b\x60\x64\x0f\x69\xa3\x28\xff\xbd\x63\x9b\x84\x8f\xa2\x1e\x8a\x14\xe2\xcc\x3c\xcf\xbc\xf7\x26\x76\xd1\x98\x8b\xd0\xa8\xbc\x2f\x65\x8d\x70\x81\x37\xdb\x28\x94\xd5\xcb\xcb\x3a\xd3\x87\x60\xd6\x81\x6a\xc0\x71\x4e\xf0\x53\x74\xaf\xdb\x2c\x19\x42\x90\xd5\x69\xf2\x64\x7b\x71\xea\x94\x13\xdf\x0d\x12\xb8\x22\xef\x5e\xab\x97\x22\xe7\x7a\x87\x65\x6b\xdb\x5c\x1f\x45\x43\x72\x68\x33\xdf\xd9\x5f\xa5\x04\xe7\xac\x7b\x03\xef\x55\x0b\x32\xe6\xe3\x33\x6f\x56\x08\x8e\x44\x7c\x67\x8d\x1a\x5a\x70\x61\xa7\x46\xab\x3e\x56\x60\x67\x11\x66\xac\xac\xc4\xed\xb6\xae\x79\xbf\xa7\xa6\x33\xb3\xb8\x3e\x5b\xd7\x3f\x3a\x84\xb5\x9c\x2b\xc4\x75\xf5\xac\xbb\x56\x11\x52\x59\xeb\xec\x34\xae\x00\x11\x84\xaa\x06\x14\x9c\x2f\x25\x0d\xaa\x67\x77\xde\xf9\x5d\xe4\x31\xbe\xc3\x9a\x61\x9c\x28\x28\x60\x53\x00\x4b\x19\xf1\x82\xae\x23\x37\x27\xf8\x4d\x72\x03\xdf\x5a\x11\x19\x68\x3b\x10\x73\x95\xc2\x34\x8f\x76\x62\x44\xa5\xa1\xb3\xc8\x63\x2b\xe5\x7b\x64\xb0\x48\x58\xc9\xfe\x2f\x49\x9a\x47\x7c\x8e\x13\x0e\x2c\x65\xf5\x93\xdf\xc7\xda\x56\x95\xb5\xc5\xcc\xf7\xd9\xd7\x6f\x22\x0a\x3e\x6e\xe2\x01\x41\x47\x33\xb8\x07\x4f\x36\xf5\x4a\xff\xa6\xd0\xe5\x14\xa3\x9f\x3e\x1f\x7a\xb2\xf2\x70\x61\xf8\x25\x52\x3c\x84\x1f\x79\x78\x08\x0c\xbe\xee\x35\xff\x05\x2c\xec\x48\xc6\x0e\x81\x84\x83\x11\x14\xed\xb8\xb3\x6c\xb1\x15\xe3\x65\x75\xbb\x6d\x42\xf7\x7b\x91\xa7\x32\x3b\x5f\xf2\x64\xcc\x3e\x1a\xe7\xb8\xfb\xb9\x1d\xeb\xf3\x48\xed\x1d\x09\x19\x33\x68\x9c\x1a\x10\xde\xe9\x64\xc3\xa8\xa8\x93\xf9\x7c\x22\xf3\x10\xf9\xd7\xf1\x3d\x5b\x4b\xcb\xad\x50\x4f\x44\x2c\xff\x71\xa3\xd0\x20\xf8\x93\x35\x70\x56\x13\x92\x4c\x27\xd4\xe8\x0f\x66\xa2\x06\x0d\xc8\x33\xac\x4e\x71\x55\xe4\x69\xeb\xb6\xce\x82\xaf\x27\x83\x0d\xc3\xe7\x23\x91\xf2\xdb\x41\xed\x9a\x8e\xce\xf4\xca\x5d\xc5\x38\x21\x66\xce\xb4\x1d\xdf\x00\x3f\xd4\x05\x96\x4e\x4f\x51\xe9\xfb\x4f\x00\x00\x00\xff\xff\xc7\x91\xe3\xdd\x0c\x05\x00\x00")

func static_bleve_mapping_partials_analysis_charfilter_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_charfilter_html,
		"static-bleve-mapping/partials/analysis/charfilter.html",
	)
}

func static_bleve_mapping_partials_analysis_charfilter_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_charfilter_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/charfilter.html", size: 1292, mode: os.FileMode(420), modTime: time.Unix(1445528467, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_charfilters_generic_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func static_bleve_mapping_partials_analysis_charfilters_generic_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_charfilters_generic_html,
		"static-bleve-mapping/partials/analysis/charfilters/generic.html",
	)
}

func static_bleve_mapping_partials_analysis_charfilters_generic_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_charfilters_generic_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/charfilters/generic.html", size: 0, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_charfilters_regexp_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x8f\x41\x8e\x83\x30\x0c\x45\xd7\xe1\x14\x51\xf6\x0c\x17\x08\xec\xe6\x02\x73\x83\x4c\x62\x20\x92\x89\x23\xc7\x8c\x98\xdb\x37\x40\x17\xad\xd4\x4a\x6d\x57\x89\x2c\xbf\xef\xff\x94\x0d\xf1\x4f\x7b\x74\xa5\xf4\x66\x24\x5e\xda\x89\x69\xcd\x66\x68\x94\xb2\xe8\x7e\x01\x75\x9d\xf6\xc6\xcf\x8e\xc7\x88\x02\xfc\x03\x13\x6c\x75\xa1\xbe\x2b\x3a\xd6\xdf\x5b\x66\x28\x25\x52\xb2\xdd\x01\xec\xa8\xb2\x31\xe5\x55\x74\x9a\xda\x85\x02\xe0\x6d\xc0\x17\x9f\x09\x5a\xfe\x33\xf4\x46\x60\x13\x73\xd7\xc0\x53\x12\x26\x34\x3a\x86\x07\x87\x75\x46\xe7\x61\x26\x0c\x50\x7b\xed\x45\x6d\x57\x1d\x86\xa6\xf9\xc4\xe5\x08\xdb\x65\x8e\xcf\x02\x49\x5e\xb7\x38\xd9\xf7\x35\xae\xdc\x13\x8f\x4b\x00\x00\x00\xff\xff\x7e\x49\xa0\xae\x92\x01\x00\x00")

func static_bleve_mapping_partials_analysis_charfilters_regexp_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_charfilters_regexp_html,
		"static-bleve-mapping/partials/analysis/charfilters/regexp.html",
	)
}

func static_bleve_mapping_partials_analysis_charfilters_regexp_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_charfilters_regexp_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/charfilters/regexp.html", size: 402, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_charfilters_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x54\x4d\x6f\xdb\x30\x0c\xbd\xe7\x57\x08\x3a\xb5\xc0\xec\x60\xd8\xd5\xf6\x65\x1f\xb7\xf5\xb4\x9d\x07\x45\xa2\x6d\xa1\xaa\x24\x48\x74\x13\xa3\xe8\x7f\x1f\x25\xd7\x8e\x13\x77\xe9\x6d\x41\x90\x3c\xd2\xe1\xe3\x7b\x22\x95\x0a\xc5\xc1\x00\x93\x46\xc4\x58\xf3\x29\xc8\x9f\x45\xc4\xa0\x3d\x28\xde\xec\x18\xab\xb0\x07\xa1\x12\x4a\x38\x4c\x20\xa7\x9b\x07\xf1\x04\xd5\x9e\xc0\x2a\xf7\x6b\xf4\x9b\xdc\x39\x26\x94\x19\x52\xe6\x8d\xb5\xc2\x83\x53\xe3\xc2\xcf\x6c\x57\x04\xf0\x20\xb0\xe6\x77\xb2\xb5\xd4\xe2\x93\x6c\x9f\x85\xb9\x67\xda\xd2\x5b\xc1\xe9\xa7\xf0\x5e\xdb\xae\x14\x56\x98\x31\xea\x58\xca\x5e\x84\x3f\xad\x36\x08\x21\xf2\x73\x63\xd5\xbc\xbc\x4c\x0c\xaf\xaf\xd4\x50\x5d\x3f\x21\xd2\x12\x49\xee\xf6\xe9\x1b\xa4\x40\xe9\xe7\xf9\x80\x0e\x68\x8b\x2e\xb8\xc1\xb3\x05\x15\xa7\xc8\x59\x70\x06\x6a\x9e\x63\x7e\xae\xa4\xda\xc3\x80\xe8\x6c\x32\x24\x8d\x96\x8f\x35\x07\xa5\xf1\x2b\x69\xfd\x91\xa5\xce\xee\xd8\x64\x8f\xb3\xa4\x85\xda\xe4\x2a\xbe\x22\x9a\x5f\x67\x1d\x59\x81\x82\x56\x0c\x06\x33\x3e\xc5\x8b\xd6\xd4\x3c\x7a\x61\xe7\x8a\xce\x8c\xbe\xd7\x92\xb4\x2c\xa8\x48\x5a\x38\x13\x41\x8b\xa2\xd7\x4a\x81\xa5\x0d\x08\x03\x70\x1a\x56\x2a\x6d\xd8\x77\xfa\xc1\xda\xcd\x7e\x12\x76\xdb\xa1\x02\x03\x08\x1b\x8f\xff\xdb\x1c\x06\x11\xfb\x9b\xee\xbe\x65\xa1\x37\xfd\x55\x7b\x1a\xfe\xb2\x15\xcb\x86\xcc\x2b\xbc\x6c\x6b\xec\xdd\xb1\xe6\xbf\x51\x9b\x58\x3e\xc2\x18\xef\x3e\x5e\xd2\xfb\xd2\x80\xed\xb0\x67\x15\xfb\xbc\x5e\x58\x26\x9d\x49\xfa\x6a\xfe\x85\x37\x0f\xce\xc2\xb6\x2d\x7d\xcf\xf7\xa5\xc2\xd6\x39\x7c\xe7\x66\x5e\xf2\xec\xfe\x3d\x2e\x0b\xc7\xd5\xac\x3e\x9c\xd2\xd5\x8c\xe2\xd3\xc5\xa8\xfc\x60\x4c\x11\x74\xd7\x23\x69\x87\x23\x4b\xcc\x42\x12\x31\x9b\xf8\xaf\x4f\xf8\x5d\x6f\x93\x23\x02\xe9\x7f\xa8\xd9\xfd\x0d\x00\x00\xff\xff\x7a\x9f\xc4\x9d\xa3\x04\x00\x00")

func static_bleve_mapping_partials_analysis_charfilters_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_charfilters_html,
		"static-bleve-mapping/partials/analysis/charfilters.html",
	)
}

func static_bleve_mapping_partials_analysis_charfilters_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_charfilters_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/charfilters.html", size: 1187, mode: os.FileMode(420), modTime: time.Unix(1445123661, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilter_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x54\xcd\x6e\xdb\x30\x0c\xbe\xe7\x29\x04\x9d\xb6\x83\x67\x6c\xbd\x3a\xbe\x04\xd8\xad\xbd\xac\x2f\x20\xcb\x8c\x2d\x84\x96\x0c\x89\xce\x16\x04\x79\xf7\xe9\xc7\x49\x64\xd7\x18\x86\x0a\xa8\xaa\x90\x14\x3f\x7e\x1f\x4d\x55\xad\x3a\x33\x89\xc2\xb9\x3d\x6f\x10\xce\xf0\x6a\x5a\x81\xbc\xde\xed\x72\xcf\x10\x8c\x45\x0f\xa2\x05\xeb\x7d\xcc\xaf\xaa\x7f\x59\x7a\x49\x11\x02\xaf\x0f\x93\x23\x33\xb0\x77\x73\x02\xcd\x7e\x2a\x24\xb0\x55\xd9\xbf\xd4\xbb\xaa\xf4\x09\x37\xf3\x36\xa6\xbd\xdc\xb3\x06\xa7\xee\x0a\xd7\x9b\xdf\x7b\x0e\xd6\x1a\xfb\x0a\xce\x89\x0e\x78\xf4\xc7\x35\x5f\x16\x08\x96\x58\xdc\x8b\x56\xe8\x0e\x6c\xb8\x29\xd1\x88\x53\x16\x6c\x0d\xc2\x1c\xcb\x6b\x76\xbd\xe6\x39\x6f\xb7\x04\x3a\x57\x16\xcf\x47\x63\x87\x3b\x42\x38\xf3\x39\x43\x3c\xd7\x8f\xbc\x39\x8b\xe0\x2a\x3a\x6b\xa6\x31\x0b\x88\x41\x28\x1a\x40\xe6\xfd\x7b\x4e\x5a\x0c\x5e\x9e\x37\xbf\x57\x65\xb4\xaf\x62\x95\x1e\x27\x0a\x0c\xbc\x28\x80\x7b\x1e\xe3\x19\x5d\x46\x0f\x4e\xf0\x87\xf8\x02\x4e\x1a\x4d\xbe\x30\xbe\xc8\x31\x2f\xd5\xde\xe1\xd8\x88\x42\x42\x6f\xd0\xf7\x6d\xcf\xdf\x62\x05\x4f\x0a\x19\xed\xcf\x51\x0a\x3d\x3e\xc6\x16\x87\x32\x79\xfd\xee\xf7\x6d\x72\x59\x6a\x69\xb0\x70\x43\xf1\xfd\x07\x8b\x8c\xb7\x51\x1c\x20\xc8\xa8\x86\xec\x43\x6b\x67\xb0\xf4\x3d\x05\x98\x43\x34\x7f\xf9\xba\x29\x40\xa6\x62\x56\xe3\xb7\x58\xe4\x66\xfc\xff\x2a\x9b\xa4\x5d\xd3\xfe\x10\x59\x99\x91\x94\xd1\xa1\x0c\x0b\x23\x08\x5a\x97\xef\xa9\xb3\x15\x21\xc7\xeb\xeb\x75\x69\xbb\xdd\xaa\x32\x65\x5a\xa9\x53\x26\x79\xd6\xd6\xd8\xce\xd5\xcf\x65\x77\x1f\x93\xf5\x41\x96\xe0\x52\x5a\xe2\xd4\x02\x73\x56\x26\x2d\x46\x41\x3d\x2f\xe7\xc9\x2c\x83\xe5\x5f\x63\x7c\x34\x86\x9e\xcf\x43\x33\x11\x79\x09\xee\x4f\x0b\x69\xe6\xff\x8a\x16\x8e\x62\x42\xe2\x69\x52\x95\x3c\xf9\xef\x41\x68\x09\xe8\x3b\x59\x1f\xe2\xa9\x2a\xd3\xd5\x65\x9e\x67\x7c\x33\x29\x6c\x7d\xf8\x3c\x1a\xc9\xbf\xec\xd6\x0a\x74\xb4\x6a\x10\xf6\xc2\xc6\x09\xb1\xb0\xaa\xeb\xfd\x4b\xf0\x4b\x9c\xe1\x89\xf4\x20\x95\xfe\xff\x0d\x00\x00\xff\xff\x5c\xe4\x32\xa4\x15\x05\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilter_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilter_html,
		"static-bleve-mapping/partials/analysis/tokenfilter.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilter_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilter_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilter.html", size: 1301, mode: os.FileMode(420), modTime: time.Unix(1445528472, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilters_dict_compound_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x90\xbd\xae\x84\x20\x10\x85\x6b\x7d\x8a\x09\xbd\x97\x17\x40\xdf\xe0\xde\xe6\x6e\xb2\xa5\x41\x18\x0d\x59\x60\x08\xe0\x36\xc6\x77\x5f\xfc\x2b\x2c\x96\x6a\x72\x72\x3e\xbe\xc9\x54\x42\x9b\x37\x28\x2b\x53\x6a\xd9\x48\xd1\x35\x53\xa4\x39\xb0\xae\xae\x2a\x61\xe5\x80\x16\x4a\xda\xb2\x4c\x2f\xf4\xa3\xb1\x19\xe3\x63\x1b\x7f\x65\x48\xac\xfb\x9f\x07\x78\x52\xd4\x49\xf0\xbd\xbb\x53\x09\x2d\xaa\x0c\x7e\x6a\x1c\x69\xb4\x37\xf6\x47\x1b\x95\xfb\x3d\xe8\x9d\x0c\xec\x66\x56\xe4\x73\x24\xcb\xc0\xe8\x6f\xc2\x1a\xca\x2b\x0e\x0a\xd9\x90\xdf\x1c\x11\x03\xca\x7c\xf6\x4b\x09\x8c\x87\x6b\xfe\x93\x0e\x0b\xb4\x2c\x57\xb0\xae\x82\x1f\xe8\xf9\x93\xe0\xc7\xb6\x65\x71\xc1\xcb\x25\xba\x4f\x00\x00\x00\xff\xff\x61\x16\x44\xb1\x10\x01\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilters_dict_compound_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilters_dict_compound_html,
		"static-bleve-mapping/partials/analysis/tokenfilters/dict_compound.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilters_dict_compound_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilters_dict_compound_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilters/dict_compound.html", size: 272, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilters_edge_ngram_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x90\x41\x6e\xc4\x20\x0c\x45\xd7\xe4\x14\xc8\xfb\x69\x2e\x40\xd8\x75\xd9\x43\x10\x70\x52\x34\x0e\x46\x84\x54\xd3\xdb\xd7\x4c\xbb\x41\xd5\x48\xa3\xcc\xc6\x92\xf3\xfd\x7f\xde\x47\x99\x10\xbf\xb4\x27\xb7\xef\x13\x2c\x5c\xb6\xcb\x5a\xf8\xc8\x60\x07\xa5\x0c\xb9\x19\x49\xcb\xd7\x09\x2a\x5f\x31\x2d\x91\x2a\x96\xf7\xb0\x22\xd8\x36\xcd\x78\xbf\x68\xb7\xca\xec\x48\xe8\x6b\x17\xe5\x39\xd5\xc2\x04\x3a\x86\xff\x09\x3a\xad\x97\x8d\x03\x52\x27\xbd\xe1\x3d\xbd\x25\x2a\xc3\xb9\x46\x4e\x76\x29\x92\x63\xc6\xbf\xad\x93\x66\xe7\xaf\x9d\x62\xc6\x5f\x0e\x59\xcc\x28\xd5\xec\x30\x9c\xa8\xf8\x11\x13\x58\x19\x5d\xc1\x98\xf2\x51\x1f\x50\x6f\x62\xd0\xf5\x3b\xe3\x04\xe9\xd8\x66\x2c\xf0\xd4\x43\xb4\xff\xe8\x4c\xce\xe3\x27\x53\x40\x81\x80\x17\xc1\xdd\x4d\xc0\xdd\xed\x79\x70\x31\x9c\x01\x6f\xb6\x07\xe0\x3f\x01\x00\x00\xff\xff\xa6\xc2\x37\x43\x53\x02\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilters_edge_ngram_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilters_edge_ngram_html,
		"static-bleve-mapping/partials/analysis/tokenfilters/edge_ngram.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilters_edge_ngram_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilters_edge_ngram_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilters/edge_ngram.html", size: 595, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilters_elision_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x90\x3d\xce\xc3\x20\x0c\x86\xe7\xe4\x14\x88\x3d\x1f\x17\x20\x91\xbe\x03\xb4\x53\xf7\x88\x12\x27\x42\x35\x18\x01\xed\x12\xe5\xee\x75\xfe\x86\x0c\x65\xb2\x5e\xbd\x0f\x8f\xe5\x4a\x0f\xee\x23\x2c\x9a\x9c\x5b\x39\x52\xf2\xcd\x94\xe8\x1d\x65\x57\x57\x95\x46\xf3\x04\x14\x9c\xb6\xb2\xd0\x0b\xc2\xe8\xb0\x40\x7a\xac\xe3\xcd\xc4\x2c\xbb\xff\x54\x9c\x45\xc8\x5a\x6d\xd5\x0d\xca\x80\x60\x8b\x08\x53\xe3\x69\x00\xbc\xa0\x7f\xe6\x00\xfa\x2d\xec\xbd\x89\xf2\x22\xb7\x14\x4a\x22\x94\xc2\x0d\xbf\x9c\xb5\xe0\xc7\x1e\x8a\xc5\x51\x58\x3d\x09\x22\x98\x72\xf4\xb9\x24\x5c\x10\xe7\x7c\x37\x1e\x18\x9a\xe7\x33\x58\x16\xad\x76\xf4\xf8\x49\xab\x7d\x63\x5e\x5e\x2b\x3e\x46\xf7\x0d\x00\x00\xff\xff\x97\x76\x02\xbd\x13\x01\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilters_elision_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilters_elision_html,
		"static-bleve-mapping/partials/analysis/tokenfilters/elision.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilters_elision_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilters_elision_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilters/elision.html", size: 275, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilters_generic_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilters_generic_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilters_generic_html,
		"static-bleve-mapping/partials/analysis/tokenfilters/generic.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilters_generic_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilters_generic_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilters/generic.html", size: 0, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilters_keyword_marker_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x90\x4d\x0e\x83\x20\x10\x85\xd7\x7a\x0a\xc2\xde\x72\x01\xf4\x02\x4d\xbb\xea\xde\x50\x19\x0d\x11\x18\x02\xb4\x4d\x63\xbc\x7b\xc7\xbf\x85\x8b\xb2\x9a\xbc\xbc\x8f\x6f\x32\x85\xd4\xe6\xcd\x3a\xab\x52\xaa\x79\x8f\xd1\x55\x43\xc4\x57\xe0\x4d\x59\x14\xd2\xaa\x27\x58\x46\x69\xcd\x33\x8e\xe0\x7b\x63\x33\xc4\xc7\x32\xde\x54\x48\xbc\xb9\xc2\xf7\x83\x51\x27\x29\xd6\xea\x0a\x25\xb0\xd0\x65\xe6\x87\xca\xa1\x06\x7b\x42\x2f\xe3\x0e\xb4\x6b\xd8\x3a\x15\xf8\x49\xde\xa1\xcf\x11\x2d\x67\x46\xff\x73\x96\x8c\x1e\x79\x30\x64\x83\x7e\xf1\x44\x08\xa0\xf2\xde\xa7\x12\x33\x9e\x1d\xf3\x5d\x39\x20\x68\x9a\x8e\x60\x9e\xa5\xd8\xd0\xfd\x27\x29\xb6\x8d\x69\x79\x29\xe8\x18\xcd\x2f\x00\x00\xff\xff\x4f\xfe\x32\xc4\x13\x01\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilters_keyword_marker_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilters_keyword_marker_html,
		"static-bleve-mapping/partials/analysis/tokenfilters/keyword_marker.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilters_keyword_marker_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilters_keyword_marker_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilters/keyword_marker.html", size: 275, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilters_length_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\xce\x41\xae\x83\x30\x0c\x04\xd0\x75\x38\x45\xe4\x3d\x9f\x0b\x04\x6e\xf0\x0f\x11\x88\xa1\x51\x1d\x3b\x0a\xa1\xa2\xb7\xaf\xe9\x0e\x55\x95\x2a\x36\x59\xc4\x33\x9a\x67\x5c\x88\x0f\x3b\x91\x5f\xd7\x1e\x66\x29\xa9\x5d\x8a\x6c\x19\x86\xc6\x18\x47\x7e\x44\xb2\xfa\xdb\x43\x95\x3b\xf2\x1c\xa9\x62\xf9\x8f\x0c\x83\x3e\xae\x7b\xdf\x8f\xa4\x71\x91\xf3\x56\x2d\x2f\x6d\x92\x80\x74\xca\xff\x25\x2d\xd8\xfa\xcc\xd8\x03\x6f\x69\xc4\x02\xa7\xc1\x49\xb8\x16\x21\xb0\x31\x7c\xec\xd8\x4c\x7e\xc2\x9b\x50\x40\x45\x1c\x2a\xd7\x29\x78\x68\x9a\x2b\x70\xbf\x2b\xdc\xef\xbf\xc3\xb5\x70\x05\x7e\xd4\xbe\xc0\x5f\x01\x00\x00\xff\xff\xc5\x81\x9e\x7b\x70\x01\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilters_length_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilters_length_html,
		"static-bleve-mapping/partials/analysis/tokenfilters/length.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilters_length_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilters_length_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilters/length.html", size: 368, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilters_ngram_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\xce\x41\xae\x83\x30\x0c\x04\xd0\x75\x38\x45\xe4\x3d\x9f\x0b\x04\x6e\xf0\x0f\x11\x88\xa1\x51\x1d\x3b\x0a\xa1\xa2\xb7\xaf\xe9\x0e\x55\x95\x2a\x36\x59\xc4\x33\x9a\x67\x5c\x88\x0f\x3b\x91\x5f\xd7\x1e\x66\x29\xa9\x5d\x8a\x6c\x19\x86\xc6\x18\x47\x7e\x44\xb2\xfa\xdb\x43\x95\x3b\xf2\x1c\xa9\x62\xf9\x8f\x0c\x83\x3e\xae\x7b\xdf\x8f\xa4\x71\x91\xf3\x56\x2d\x2f\x6d\x92\x80\x74\xca\xff\x25\x2d\xd8\xfa\xcc\xd8\x03\x6f\x69\xc4\x02\xa7\xc1\x49\xb8\x16\x21\xb0\x31\x7c\xec\xd8\x4c\x7e\xc2\x9b\x50\x40\x45\x1c\x2a\xd7\x29\x78\x68\x9a\x2b\x70\xbf\x2b\xdc\xef\xbf\xc3\xb5\x70\x05\x7e\xd4\xbe\xc0\x5f\x01\x00\x00\xff\xff\xc5\x81\x9e\x7b\x70\x01\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilters_ngram_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilters_ngram_html,
		"static-bleve-mapping/partials/analysis/tokenfilters/ngram.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilters_ngram_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilters_ngram_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilters/ngram.html", size: 368, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilters_normalize_unicode_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x90\x3d\x12\xc2\x20\x10\x85\x6b\x3c\x05\x43\x1f\xb9\xc0\x86\xd2\xd2\xce\x03\x44\xd8\x64\x98\x6c\x76\x33\x04\x2d\x3c\xbd\x9b\x68\x13\x67\x62\xf7\x78\x3f\xdf\x00\x06\x52\x7e\xda\x48\xdd\xb2\xb4\xae\x97\x32\x35\x43\x91\xc7\xec\xc2\xc9\x18\xa0\xee\x8e\x64\xd5\x6d\x5d\x95\x11\xb9\xcf\x54\xb1\x5c\xb5\xd5\x51\x7e\xe1\x8d\x73\x94\x84\x2e\x5c\xd4\x01\xbf\xb5\xd7\x9d\x81\x05\x09\x63\xdd\x61\xa3\x70\x2d\x42\xce\xe6\xf4\x9f\x66\x79\x68\x26\x15\xb4\xab\x9d\x57\xc8\x76\x2b\xc5\xcb\x5c\xb3\x70\xe0\x3e\x82\xff\xea\x9f\x20\x1d\x05\xe3\xe1\x64\xdc\x6f\xc0\x7f\x1e\xa1\x07\xf0\xfa\x47\xe1\x1d\x00\x00\xff\xff\xd1\xd9\xe9\x1f\x2a\x01\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilters_normalize_unicode_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilters_normalize_unicode_html,
		"static-bleve-mapping/partials/analysis/tokenfilters/normalize_unicode.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilters_normalize_unicode_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilters_normalize_unicode_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilters/normalize_unicode.html", size: 298, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilters_shingle_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x92\xc1\x6e\xc3\x20\x0c\x86\xcf\xc9\x53\x20\xee\x5d\x5f\x20\xe1\x38\x69\x87\x69\x87\xed\x3e\x11\x70\x52\x54\x07\x47\x04\xa6\xec\xed\x67\xd6\x64\x52\xb5\x55\x62\x6d\x2f\x06\x61\xff\xfa\xbf\x5f\xa6\x6a\xac\xfb\x10\x06\xf5\x3c\xb7\xb2\xa7\x30\xee\x86\x40\x69\x92\xaa\xae\xaa\x06\x75\x07\x28\xf8\xb5\x95\x91\x8e\xe0\x7b\x87\x11\xc2\xb3\xf3\x52\x71\x69\xf6\xdf\xfd\x3c\x59\x35\xce\x4f\x29\x0a\x3f\xec\x46\xb2\x80\x67\xf3\x0f\x23\x0b\x44\xfc\x9c\xa0\x95\x3e\x8d\x1d\x04\x79\x66\x68\xc8\xc7\x40\x28\x85\xb3\xbf\x7c\xc4\x84\xda\xc0\x81\xd0\x02\x43\x64\xaa\x66\xcf\xc0\xaa\xae\xaf\x01\xd7\x0b\x83\xeb\xa5\x1c\x9c\x05\xd7\x80\x67\xd9\x3d\xc1\x9f\xbc\xc1\x64\x41\xaa\xf5\x22\x5e\x82\x1b\x9c\xd7\x28\xde\xf2\xd0\x1f\x79\xc4\x85\x44\x94\x22\xb7\xdf\x69\xd5\x6f\xe9\xcc\x01\xcc\xb1\xa3\xa5\x2c\xdf\x0f\xce\x4d\xa1\x5e\x81\xdb\x5c\x74\xd0\x91\x42\xf1\x4e\xe6\x4d\xb1\xb1\x47\x58\x62\x19\x77\x76\xbc\xeb\x5e\x1e\x1d\x22\x7f\x0a\x75\x3a\x8b\x23\xf4\x27\xd9\xbf\xf9\x57\xbb\x4b\x11\xbe\x02\x00\x00\xff\xff\x4a\x38\x26\x08\xcb\x03\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilters_shingle_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilters_shingle_html,
		"static-bleve-mapping/partials/analysis/tokenfilters/shingle.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilters_shingle_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilters_shingle_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilters/shingle.html", size: 971, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilters_stop_tokens_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x90\x3d\x8e\xc3\x20\x10\x85\x6b\xfb\x14\x23\x7a\x2f\x17\xc0\xbe\xc1\x6e\xb3\x91\x52\x5a\xc4\x8c\x2d\x14\x60\x10\x90\x34\x96\xef\x9e\xf1\x5f\xe1\x22\x54\xa3\xa7\xf7\xf1\x8d\xa6\x52\xc6\xbe\x61\x70\x3a\xe7\x56\x8c\x94\x7c\x33\x25\x7a\x45\xd1\xd5\x55\xa5\x9c\x7e\xa0\x03\x4e\x5b\x51\xe8\x89\x61\xb4\xae\x60\xba\xad\xe3\xaf\x8e\x59\x74\xff\x85\x22\xdc\x29\x99\xac\xe4\x56\xde\xb0\x8c\x0e\x87\x02\x61\x6a\x3c\x19\x74\x17\xf8\x27\x33\xd2\x6f\x41\xef\x75\x14\x17\xf5\x40\xa1\x24\x72\x02\xac\xf9\x66\xac\x81\x1f\x3b\x28\x16\x4b\x61\x75\x24\x8c\xa8\xcb\xd1\xe7\x12\xd8\x00\xe7\xfc\xa7\x3d\x32\x34\xcf\x67\xb0\x2c\x4a\xee\xe8\xf1\x93\x92\xfb\xb6\xbc\xb8\x92\x7c\x8a\xee\x13\x00\x00\xff\xff\x16\x19\x03\x3e\x11\x01\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilters_stop_tokens_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilters_stop_tokens_html,
		"static-bleve-mapping/partials/analysis/tokenfilters/stop_tokens.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilters_stop_tokens_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilters_stop_tokens_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilters/stop_tokens.html", size: 273, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilters_truncate_token_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8e\xc1\x0d\x83\x30\x0c\x45\xcf\xe9\x14\x96\xef\x94\x05\x02\x13\x74\x09\x20\x06\xa2\x3a\x76\x14\x9c\x4a\xdd\xbe\x81\x1b\xea\xc5\x07\xeb\x7d\xbd\xe7\x7c\x88\x1f\x58\x78\x3a\x8e\x01\x57\x2d\xa9\xdb\x8a\xd6\x8c\xe3\xc3\x39\xcf\xd3\x4c\x0c\xed\x3b\xa0\xe9\x9b\x64\x8d\x6c\x54\x5e\x24\x38\xb6\xb3\xd9\xee\xfb\x0b\x39\x61\xe7\xa3\xe4\x6a\x20\x5b\x97\x34\x10\xdf\x26\x4f\xbe\x70\x04\xfb\x66\x1a\x50\x6a\x9a\xa9\xe0\x4d\xbb\xa8\x58\x51\x46\x88\xe1\xcf\x06\x99\xa7\x85\x76\xe5\x40\x2d\xe5\x6c\xf3\x7d\xcb\x1e\x7f\x01\x00\x00\xff\xff\x0a\x91\xf6\x26\xbd\x00\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilters_truncate_token_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilters_truncate_token_html,
		"static-bleve-mapping/partials/analysis/tokenfilters/truncate_token.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilters_truncate_token_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilters_truncate_token_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilters/truncate_token.html", size: 189, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilters_wordmap_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8e\x31\x0a\xc3\x30\x0c\x45\x67\xf7\x14\xc2\x7b\x9a\x0b\x24\xb9\x41\x3b\x75\x2f\xc6\x56\x8a\xa9\x2d\x19\x59\xd0\x21\xe4\xee\x75\x48\x3d\x54\xd3\x47\xfc\xf7\xf8\xc6\x98\xa9\x62\x42\xaf\x40\xaf\x21\x73\xc0\x34\x5b\xe5\x37\xd2\x1a\x93\xa2\x5c\x3f\x2c\xe1\x99\x5d\xb1\xe0\x93\xab\x75\xb6\x2b\x4b\x1e\x3c\x93\x0a\x27\x0b\x31\xfc\xd5\x1f\x47\xbc\xb9\x52\xed\x72\x31\xd0\xae\xe9\xb9\x68\x64\x3a\xf4\x82\x05\x9d\xfe\x80\xd6\x82\x48\xd0\xf3\xdd\x65\x6c\xd4\xb6\xf5\xc7\xbe\x4f\xe3\x89\x76\xd5\x34\x9e\x4b\x97\x6f\x00\x00\x00\xff\xff\x38\x1c\x9d\x3b\xb5\x00\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilters_wordmap_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilters_wordmap_html,
		"static-bleve-mapping/partials/analysis/tokenfilters/wordmap.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilters_wordmap_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilters_wordmap_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilters/wordmap.html", size: 181, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenfilters_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x54\x4d\x6f\xdb\x30\x0c\xbd\xe7\x57\x08\x3a\xb5\xc0\xec\x60\xd8\xd5\xf6\x69\xdb\x6d\x3d\x75\xe7\x41\xb1\x68\x5b\x88\x2a\x09\x12\xdd\xc4\x28\xfa\xdf\x47\xc9\xf5\x47\xe2\x2c\xdb\x69\x41\x90\x3c\xd2\xe1\xe3\x7b\x22\x95\x02\xc5\x41\x03\xab\xb5\x08\xa1\xe4\x63\x90\x3e\xb3\x80\x5e\x39\x90\xbc\xda\x31\x56\x60\x07\x42\x46\x14\xb1\x1f\x41\x4a\x57\x4f\xe2\x05\x8a\x3d\x81\x55\xee\x79\x70\x9b\xdc\x12\x13\x4a\x0c\x31\xf3\xc1\x5a\xe0\xc1\xca\x61\xe6\x67\xa6\xcd\x3c\x38\x10\x58\xf2\x07\x6c\x0c\xb5\xf8\x84\xcd\xab\xd0\x8f\x4c\x19\x7a\x4b\x38\xff\x10\xce\x29\xd3\xe6\xc2\x08\x3d\x04\x15\x72\xb4\x47\x30\xbf\x1a\xa5\x11\x7c\xe0\x4b\x67\x59\xbd\xbd\x8d\x14\xef\xef\xd4\x51\x5e\x3f\x21\xd6\x1c\x49\xef\xf6\xe9\x07\xa4\x40\xaa\xd7\xe9\x84\x0e\x68\xb2\xd6\xdb\xde\xb1\x19\x65\xe7\xc0\x99\xb7\x1a\x4a\x9e\x62\xbe\x54\x52\xed\xa1\x47\xb4\x26\x3a\xaa\xb5\xaa\x8f\x25\x07\xa9\xf0\x39\x8a\xfd\x9e\xb4\x4e\xfe\xd8\x68\x90\xb3\x28\x86\xfa\xa4\x32\xbe\x62\x9a\x5e\x8b\x90\x24\x41\x42\x23\x7a\x8d\x09\x9f\xc3\x45\x6f\xea\x1e\x9c\x30\x53\x45\xab\x07\xd7\xa9\x9a\xc4\xcc\x28\x8b\x62\x38\x13\x5e\x89\xac\x53\x52\x82\xa1\x1d\xf0\x3d\x70\x1a\x57\x2c\xad\xd8\x37\xfa\xc1\xda\xce\x7e\x14\x76\xdf\xa2\x04\x0d\x08\x5b\x93\xff\xdb\x1d\x7a\x11\xba\xbb\xf6\xbe\x26\xa5\x77\x0d\x16\x7b\x1a\xff\xbc\x17\xf3\x8e\x4c\x5b\x3c\x2f\x6c\xe8\xec\xa9\xe4\x3f\x51\xe9\x90\x1f\x61\x08\x0f\xff\xb0\xa7\x8f\xb9\x06\xd3\x62\xc7\x0a\xf6\x79\xbd\xb3\xac\xb6\x3a\x0a\x2c\xf9\x17\x5e\x3d\x59\x03\xdb\xbe\xf4\x3d\xdd\x99\x02\x1b\x6b\xf1\xc6\xed\xbc\xe4\xd9\xfd\x79\x60\x06\x4e\xeb\x69\xfd\x75\x4e\x57\x53\x0a\x2f\x17\xc3\x72\xbd\xd6\x99\x57\x6d\x87\x24\x1e\x4e\x2c\x51\xb3\x91\xfb\xfa\x7c\x6f\x1a\x1b\xed\x10\x88\x7f\x44\xd5\x6e\xf7\x3b\x00\x00\xff\xff\xe2\xc9\xaa\x53\xa5\x04\x00\x00")

func static_bleve_mapping_partials_analysis_tokenfilters_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenfilters_html,
		"static-bleve-mapping/partials/analysis/tokenfilters.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenfilters_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenfilters_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenfilters.html", size: 1189, mode: os.FileMode(420), modTime: time.Unix(1445123724, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenizer_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x54\xc1\xce\x9b\x30\x0c\xbe\xf7\x29\xa2\x9c\xb6\x03\x43\xdb\x7f\x05\x2e\x3d\xff\xff\x65\x7d\x81\x10\x5c\x88\x6a\x12\x94\x84\x6e\x5d\xd5\x77\x9f\x13\xa0\x0d\x0c\x4d\xd3\x22\x35\x4d\xed\x2f\xb6\xbf\xcf\x75\x8a\x46\x5d\x99\x44\xe1\x5c\xc9\x6b\x84\x2b\xbc\x9b\x46\x20\xaf\x0e\x87\xd4\xd3\x07\x63\xd6\x81\x68\xc0\x92\x8f\xd1\x2a\xba\xb7\xb5\xd7\x2b\x8f\xc0\xab\xe3\xe8\xbc\xe9\xd9\xc9\x5c\x40\xab\x5f\x60\x8b\xbc\x7b\xab\x0e\x45\x4e\xd1\x76\x83\xd6\xa6\xb9\x2d\x21\x83\x53\xb7\x99\xeb\xcc\x8f\x92\x83\xb5\xc6\xbe\x83\x73\xa2\x05\x1e\xfd\x71\xcd\x97\x05\x82\xf5\x2c\xee\x59\x23\x74\x0b\x36\xdc\x94\x68\xc4\x25\x01\x5b\x83\x30\x63\x79\xc5\xee\xf7\x34\xe6\xe3\x31\x25\x9d\x2b\x8b\xe7\xb3\xb1\xfd\x92\x21\x9c\xf9\x1c\x21\x9e\xab\x67\xdc\x94\x45\x70\x65\xad\x35\xe3\x90\x00\x22\x08\x45\x0d\xc8\xc8\x5f\x72\xaf\x45\x4f\xda\x7c\xd0\x5e\xe4\xd1\xbe\xc1\x2a\x3d\x8c\x3e\x30\x20\x51\x00\x4b\x1e\xf1\x2b\xc8\xbc\xfc\x6d\xa0\x7a\x3c\xfc\xf4\x7c\x55\x81\x34\xda\x53\xad\xbb\x77\x54\xb3\x54\xc0\x06\x14\x12\x3a\x83\xd4\xc7\x92\x7f\xc4\xa2\x5e\xac\x12\x25\xfe\x8f\xe5\xd2\xf3\x50\x24\xaf\x4e\xb4\xef\xb3\x4d\x02\x4b\x83\x99\xeb\xb3\xaf\xdf\x58\x94\x60\x3f\x87\x03\x04\x19\xe5\x91\x5d\xe8\x75\x92\x2a\x24\x39\x46\xe3\xa7\xcf\xbb\xe4\x13\x51\x9f\x97\xbe\xc4\x02\x77\xd1\xff\xaa\xe9\x24\xea\x9a\xf0\x1f\xb8\xc2\x0c\x5e\x19\x1d\x4a\xb0\x30\x80\xf0\xeb\xc2\x89\x32\x5b\x11\x71\xbc\xba\xdf\x53\xcb\xe3\x51\xe4\x53\x8c\x8d\x22\xf9\x24\xc9\xd6\x1a\x1b\xb8\xf9\xb9\xee\xe7\x73\xbc\x36\x62\x04\x87\xd2\x12\xc7\x06\x98\xb3\x72\x52\x60\x10\xbe\xe3\xf9\x3c\x9c\x79\xb0\xfc\x6d\x92\xcf\xc6\xf8\xd7\xf3\x50\x8f\xde\x13\xf5\xe5\x69\xf1\x9a\xd1\x27\x6b\xe0\x2c\x46\xf4\x7c\x1a\x56\x25\x2f\xf4\x0f\x10\x5a\x02\x52\xf7\xaa\x63\x3c\x15\xf9\x74\x75\x1d\xe7\x85\xaf\x47\x85\x0d\xc1\xe7\x51\x98\xfc\xeb\x1e\x6d\x92\x0e\x56\xf5\xc2\xde\xd8\x30\x22\x66\x56\xb5\x1d\x3d\x06\xdf\xc5\x15\x5e\x99\x9e\xa4\xa6\xef\xdf\x01\x00\x00\xff\xff\x46\xdd\x8c\xd9\x15\x05\x00\x00")

func static_bleve_mapping_partials_analysis_tokenizer_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenizer_html,
		"static-bleve-mapping/partials/analysis/tokenizer.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenizer_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenizer_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenizer.html", size: 1301, mode: os.FileMode(420), modTime: time.Unix(1445528441, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenizers_exception_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x54\xc1\x6e\xdb\x30\x0c\xbd\xf7\x2b\x08\x63\x87\xf6\xe0\xba\xdd\xd9\x31\x30\x0c\x3b\xec\x52\x0c\xc5\x7e\x40\xb6\x58\x9b\x88\x2c\x19\x12\xdd\x26\x0b\xf2\xef\x93\x2d\x5b\xb6\xb3\xb4\x5d\x81\x22\x84\x42\xbe\xf7\xc8\x47\x26\x97\xf4\x0a\x95\x12\xce\xed\x92\x17\x63\xdb\xb4\xb6\xa6\xef\x92\xe2\x06\x20\x57\xa2\x44\x55\xfc\x38\x54\xd8\x31\x19\x0d\xbf\x04\x33\x5a\xed\xf2\x2c\x7c\x33\xe4\xf4\x6a\xae\x56\xe4\x78\xaa\x06\x5d\xa7\xae\x31\x6f\xbb\x84\xcd\x1e\x35\xfd\x41\x7b\x8f\x33\x8c\xbb\x57\xa8\x6b\x6e\x20\x87\xc7\x91\x67\x60\xa2\x7f\x51\x52\x62\x6c\x93\xe2\xc9\x68\xf4\x84\x34\xb2\x65\xfd\x07\xac\x23\x14\xfc\x1f\x77\x01\x0f\x73\x7e\x4f\xa9\x33\x96\x45\xa9\x70\x41\x68\x8d\x44\x75\x1d\xe2\x73\xcd\x13\xcc\x08\x64\xb1\x43\xc1\xbb\x04\x81\x34\x5c\x83\x03\xb6\xa2\xda\x43\x79\x84\x2f\xa4\x25\x1e\x26\x78\x4f\xe0\x3a\xa1\x67\x8a\x5a\x1d\xbb\x86\x2a\x6f\x42\x8c\xd2\x96\x74\xef\xd5\xe4\xd9\x90\x58\xc0\xe9\x04\x08\xe7\xf3\xa6\xda\x0b\xa8\x14\x55\xfb\x5d\x62\xb1\x35\xaf\x18\xbd\xbc\x0d\x64\x77\x8b\xd6\xe1\xef\x03\xb2\x50\x0f\x5d\xaf\x54\x6a\xa9\x6e\x38\x12\x87\x69\x6c\x1c\x1a\x82\xf7\xf7\x2a\x6e\xd6\x6a\x8f\xb6\x05\x95\x51\xa9\x6b\xd3\xc7\x87\x65\x18\xa4\xbb\x9e\x57\xce\x68\x7c\xb3\x58\xe3\xc1\x2f\x1b\x1f\x3b\xf4\x56\xe1\x81\xb7\xdd\x6c\xe8\x7d\x0f\x6c\x8d\xba\xc8\x20\xe9\x9d\x99\x67\xf2\x1c\xf0\xb2\xb9\x23\x2f\xe8\x5d\x69\x5f\x17\x65\x65\xcf\x6c\xd6\xa3\x16\x52\x2e\x73\xe6\x86\xdc\xdd\xac\x31\xa4\x5e\x68\x98\x91\x4b\xd6\xe0\xff\x53\x89\x2f\xa2\x57\xbc\x19\xf5\x37\x29\xf3\x2c\x54\x5f\xa8\x9b\x82\xe9\xe3\xe6\xd3\x73\x06\xff\xea\x25\x6a\xa1\x8e\x7e\x0f\x7f\xcf\x0b\x99\x14\x31\x1c\x32\xe0\x19\x5b\x41\x9a\x74\x0d\x3f\x87\xc1\xaf\x2f\xde\xa1\xc2\x6a\xb4\xa2\x6a\x84\xae\x71\x75\x25\xdf\xc7\x07\x79\xbb\x59\xab\x6b\xd7\x14\xa3\xe4\xaa\x49\xa3\x2f\x4b\xce\xd4\xb2\x09\xbf\x42\xab\xa3\x8a\x29\x9b\xe3\x7a\x12\x2d\xfa\xbb\x38\x9d\xe2\xcb\xf9\x9c\x67\xa1\x3a\x8c\x2c\xb4\x10\xa7\xf6\x37\x00\x00\xff\xff\x7a\x35\x23\x73\x04\x05\x00\x00")

func static_bleve_mapping_partials_analysis_tokenizers_exception_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenizers_exception_html,
		"static-bleve-mapping/partials/analysis/tokenizers/exception.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenizers_exception_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenizers_exception_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenizers/exception.html", size: 1284, mode: os.FileMode(420), modTime: time.Unix(1445281388, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenizers_generic_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func static_bleve_mapping_partials_analysis_tokenizers_generic_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenizers_generic_html,
		"static-bleve-mapping/partials/analysis/tokenizers/generic.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenizers_generic_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenizers_generic_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenizers/generic.html", size: 0, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenizers_regexp_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8f\x41\xae\xc2\x30\x0c\x44\xd7\xf9\xa7\xb0\xb2\xef\xef\x05\xd2\xee\xb8\x00\x37\x08\x8d\x29\x11\x6e\x1c\x39\x09\x0a\x9c\x1e\x17\x36\x20\x56\x96\xc6\x1e\xcf\x1b\xe3\x42\xbc\xc1\x42\xbe\x94\xc9\x9e\x59\xb6\x61\x15\x6e\xd9\xce\x7f\xc6\x38\xf2\x27\x24\x50\x75\xb2\x95\xaf\x98\xe2\x03\xe5\x88\x2b\x76\xdd\xeb\x6c\xe4\x05\x0e\x3d\x0b\x96\x12\x39\xb9\xf1\x75\xbf\x3b\x8d\x8b\x29\xb7\x0a\x69\x1d\x36\x0e\x48\x1f\xfe\x7f\x79\x3f\x80\x7a\xcf\xa8\x3a\xf6\x6a\xbf\xf2\x17\x4e\x55\x98\x2c\xc4\xf0\x1b\x0b\x99\xfc\x82\x17\xa6\x80\x0a\xb5\x53\xba\x51\x0b\xcc\xcf\x00\x00\x00\xff\xff\xfd\x95\x57\x19\xc7\x00\x00\x00")

func static_bleve_mapping_partials_analysis_tokenizers_regexp_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenizers_regexp_html,
		"static-bleve-mapping/partials/analysis/tokenizers/regexp.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenizers_regexp_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenizers_regexp_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenizers/regexp.html", size: 199, mode: os.FileMode(420), modTime: time.Unix(1444792171, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_tokenizers_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x54\xcb\x6e\xdb\x30\x10\xbc\xfb\x2b\x08\x9e\x12\xa0\x92\x51\xf4\x2a\xe9\xd4\x1e\x9b\x53\xfa\x01\x94\xb8\x91\x08\x33\x24\x41\xae\x62\xab\x41\xfe\xbd\x4b\xca\x7a\x58\x4e\xed\x5b\x0c\xc3\x1e\xae\xbc\x3b\x33\x9a\x95\x0b\x14\xb5\x06\xd6\x68\x11\x42\xc9\xc7\x43\xfa\xcc\x02\x7a\xe5\x40\xf2\x6a\xc7\x58\x81\x1d\x08\x19\x51\xc4\x7e\x04\xa9\x5c\x3d\x89\x57\x28\xf6\x04\x56\xb5\xe7\xc1\x5d\xd5\x96\x33\xa1\x34\x21\x56\xce\x53\x0b\xac\xad\x1c\xe6\xf9\xcc\xb4\x99\x07\x07\x02\x4b\xfe\x80\x86\x18\xbe\xe1\x9b\xd0\x8f\x4c\x19\x7a\x4b\x38\xfd\x16\xce\x29\xd3\xe6\xc2\x08\x3d\x04\x15\x72\xb4\x07\x30\xea\x2f\xf8\xc0\x17\x52\x59\xbd\xbf\xa7\xee\x8f\x0f\xe2\x92\x9b\x0b\x34\x30\x47\x12\x7a\x7d\xf1\x0c\xe9\x20\xd5\xdb\x74\x6b\x6a\x34\x59\xeb\x6d\xef\xd8\x8c\xb2\x53\xe0\xcc\x5b\x0d\x25\x4f\x67\xbe\x74\x52\x6f\xdd\x23\x5a\x13\xad\x34\x5a\x35\x87\x92\x83\x54\xf8\x3c\xe9\x3c\xdb\x62\xc9\x17\x67\x51\x08\x71\xa4\x16\xbe\x9a\x32\xbd\x16\x11\x89\x5e\xc2\x8b\xe8\x35\x26\x7c\x0a\x17\xbc\xc4\x1c\x9c\x30\x53\x47\xab\x07\xd7\xa9\x86\x84\xcc\x28\x8b\x42\x38\x13\x5e\x89\xac\x53\x52\x82\xa1\xe0\x7d\x0f\x9c\x32\x8a\xad\x15\xfb\x45\x3f\x58\x5b\xd9\x8f\xc2\x6e\xdb\x93\xa0\x01\x61\x63\xf0\xab\xad\xa1\x17\xa1\xbb\xe9\xed\x67\x92\x79\xd3\x5d\xb1\xa7\xdc\xe7\x85\x98\x97\x63\xda\xdb\x79\x45\x43\x67\x8f\x25\xff\x83\x4a\x87\xfc\x00\x43\x78\xb8\xb7\x9b\x8f\xb9\x06\xd3\x62\xc7\x0a\xf6\x7d\xbd\xa7\xac\xb1\x3a\xaa\x2b\xf9\x0f\x5e\x3d\x59\x03\xd7\xa4\xf4\x3d\x3d\x22\x05\xbe\x58\x8b\x9f\x3c\x8c\x97\x73\x76\xff\x8f\xca\xc0\x71\xc9\xe9\x6e\x44\x9b\x80\xc2\xeb\x45\x4e\xae\xd7\x3a\xf3\xaa\xed\x90\xa4\xc3\x91\xcd\x83\xb7\xf7\xf5\x53\x4f\xa3\x13\x02\xf1\x2f\xa7\xda\xed\xfe\x05\x00\x00\xff\xff\xde\x85\x6e\x79\x8f\x04\x00\x00")

func static_bleve_mapping_partials_analysis_tokenizers_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_tokenizers_html,
		"static-bleve-mapping/partials/analysis/tokenizers.html",
	)
}

func static_bleve_mapping_partials_analysis_tokenizers_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_tokenizers_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/tokenizers.html", size: 1167, mode: os.FileMode(420), modTime: time.Unix(1445123752, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_wordlist_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x54\xc1\x8e\xdb\x20\x10\xbd\xe7\x2b\x10\xa7\x5d\xa9\xae\x55\x45\x3d\x54\x72\x2c\x55\x7b\xed\xee\xa1\x3d\xf4\x4c\xcc\xc4\x46\x3b\x06\x0b\x70\xb2\xe9\x6a\xff\xbd\x03\x76\xb2\xd8\xf1\x6e\xaa\xaa\x45\x4a\x8c\x99\xc7\xcc\x7b\x8f\x31\x85\x54\x7b\x56\xa1\x70\x6e\xc3\xb7\x08\x7b\xb8\x37\x52\x20\x2f\x57\xab\x34\xd2\x86\xc5\xac\x01\x21\xc1\x52\x8c\xd1\x28\x9a\xf5\x34\xea\x95\x47\xe0\xe5\x5d\xef\xbc\x69\xd9\x4f\x63\x25\xfb\xa6\x9c\x2f\xf2\x66\x5d\xae\x8a\x9c\xb2\x2d\x26\xdd\x1a\x79\x3c\xa5\x0c\x41\x5d\x67\xae\x31\x87\x0d\x07\x6b\x8d\xbd\x07\xe7\x44\x0d\x3c\xc6\xe3\x18\x37\x0b\x04\xeb\x59\xfc\xcf\xa4\xd0\x35\xd8\xb0\xb3\x42\x23\x1e\x13\xb0\x35\x08\x23\x96\x97\xec\xf9\x39\xcd\xf9\xf2\x32\x14\x1d\x99\xc5\xf9\xce\xd8\xf6\x54\x21\xcc\xf9\x98\x21\xce\xcb\x73\xde\x54\x45\x08\x65\xb5\x35\x7d\x97\x00\x22\x08\xc5\x16\x90\x51\x7c\xc3\xbd\x16\x2d\x79\xf3\x40\xff\x45\x1e\xd7\x67\x58\xa5\xbb\xde\x07\x05\x64\x0a\xe0\x86\x47\x3c\xf3\xc7\x8e\x8a\x7b\x78\xf2\x7c\x02\x9f\x5a\x11\x19\x54\x46\x7b\xe2\xca\x99\x92\xa7\x72\xac\x43\x51\x41\x63\x90\x0e\x6d\xc3\x1f\x22\x83\x57\x09\x89\xec\xbf\x92\x74\xa0\x03\x76\xbc\x0c\xe7\xec\x96\x35\x39\x40\xa8\x52\x51\xc3\x02\xc8\xb8\x87\xb3\xb6\x47\xaf\x3a\x84\x88\x18\xe7\xc4\xdd\xf6\xb0\xa8\x36\x2a\x1b\xaa\x32\xa7\x7e\x11\xf4\x33\x5f\xb4\x60\x71\x33\xd5\x30\x9d\x57\x46\x13\x5a\xc9\x27\x26\x1c\x0b\xb9\x82\x16\x76\x43\x0b\x1f\xe2\xeb\x2d\x53\x9a\x8d\xca\xa6\x62\xf2\x81\xfc\xbf\x34\xb0\x11\xd4\x94\xcb\xd6\x25\xb9\x2a\x83\x99\x6b\xb3\x2f\xb3\x4c\x4b\x3d\x03\x87\xe0\xec\xd5\xb6\x79\xa7\x71\xce\x29\x26\xad\x13\x0c\xb9\xf0\x23\xaa\xbf\x42\x7a\x7d\x41\x9a\x60\xdb\xde\x7b\xa3\x87\xaf\x55\x55\x8f\xf4\x79\xca\xd8\x11\x37\xb7\x6f\xb0\xa5\x31\x28\x1a\x76\xbe\x8d\x3a\x5d\x63\x5e\x33\xfa\x11\x81\xf8\x90\xb0\x13\xd4\x5d\xbc\xfc\x2a\x65\x91\x0f\x39\xfe\x84\x96\x85\xd6\xec\xe1\x1a\x33\xc2\x4b\xe5\x04\x5d\x9d\x72\xd6\xe0\x1f\x11\x74\xed\x1b\x56\xb0\x4f\xff\x55\x18\xeb\x7a\xc4\xcc\xaa\xba\x21\x8d\xdf\x23\xe9\x65\x99\xb3\x33\x4b\x5e\x8b\x3c\xb4\xc2\x7b\xb7\xf4\xce\x18\xff\x7a\xf5\x8f\x5e\xcd\x68\x9d\x8c\x4e\x3c\xac\x84\xae\x00\xc9\xbf\xf2\x2e\xce\xa6\xc4\x2e\x3d\xdf\xf6\x0a\x83\xdd\x53\x5f\xe6\x85\x3a\xab\x5a\x61\x8f\x13\xe1\x3f\x44\x2a\xfb\x2c\x64\x78\xfe\x0e\x00\x00\xff\xff\x20\x31\x94\x98\xe5\x06\x00\x00")

func static_bleve_mapping_partials_analysis_wordlist_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_wordlist_html,
		"static-bleve-mapping/partials/analysis/wordlist.html",
	)
}

func static_bleve_mapping_partials_analysis_wordlist_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_wordlist_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/wordlist.html", size: 1765, mode: os.FileMode(420), modTime: time.Unix(1445528452, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_analysis_wordlists_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x54\x4d\x8f\x9b\x30\x10\xbd\xe7\x57\x8c\x7c\xda\x95\x4a\xa2\xf6\x0c\x9c\xda\x5b\xbb\xb7\xaa\xc7\xca\xe0\x59\xb0\x62\x6c\xcb\x1e\x36\x41\xab\xfd\xef\x1d\xc3\xf2\x91\x74\x9b\xdc\x1a\x45\xc9\x1b\x87\x79\xf3\x5e\xde\x40\x4e\xb2\x32\x08\xb5\x91\x31\x16\x62\x2a\xc6\xcf\x2c\x52\xd0\x1e\x95\x28\x77\x00\x39\xb5\x28\x55\x42\x09\x87\x09\x8c\xc7\xe5\x93\xec\x30\x3f\x30\xd8\x9c\xad\x35\xa3\xf1\xea\x74\xf2\xce\x90\x53\xe5\xd4\xb0\x70\x81\x6d\xb2\x80\x1e\x25\x15\xe2\x81\x3a\xcb\x74\x9f\xa8\x7b\x91\xe6\x11\xb4\xe5\xb7\xc2\xf3\x0f\xe9\xbd\xb6\xcd\x5e\x5a\x69\x86\xa8\xe3\x9e\xdc\x11\xed\xef\x4e\xfa\x28\xd6\xb1\xaa\x7c\x7d\x9d\xfa\xdf\xde\x78\x9c\xda\xfe\xf2\x0e\xb9\x50\xfa\x65\x36\x5b\x91\xcd\x9a\xe0\x7a\x0f\x0b\xca\xce\x51\x40\x70\x06\x0b\x31\xd6\x62\xed\xe4\xde\xaa\x27\x72\x36\x09\xae\x8d\xae\x8f\x85\x40\xa5\xe9\x97\x0b\xea\xbb\x8e\x34\x6b\x87\x49\xbc\x00\x1a\x3c\xd3\x4c\x3d\x62\x43\x33\xbf\x56\x15\xe3\x7c\x85\xcf\xb2\x37\x34\xe2\x73\xbc\x18\xcc\xa3\xa3\x97\x76\xee\x68\xcc\xe0\x5b\x5d\xb3\x92\x05\x65\x49\x89\x00\x19\xb4\xcc\x5a\xad\x14\x5a\xce\x32\xf4\x28\x38\x8a\xd4\x5a\xc2\x37\xbe\x60\xeb\xe5\x30\x09\xbb\xed\x4f\xa1\x41\xc2\x2b\x87\xff\xdb\x1a\x05\x19\xdb\x9b\xde\xbe\x8e\x32\x6f\xba\xcb\x0f\x1c\xfc\xb2\x11\xcb\x76\xcc\xeb\xb9\x6c\x62\x6c\xdd\xa9\x10\x3f\x49\x9b\xb8\x3f\xe2\x10\x1f\xee\x2d\xe0\xe3\xde\xa0\x6d\xa8\x85\x1c\x3e\x6f\x97\x11\x6a\x67\x92\xba\x42\x7c\x11\xe5\x93\xb3\xf8\xf7\x50\xfe\x9e\xef\x84\x9c\x9e\x9d\xa3\x0f\xee\xaf\x4b\x9e\xdd\xbf\xa3\xb2\x78\x5a\x72\xba\x9b\xd0\x55\x3e\xb1\xbb\x88\xc9\xf7\xc6\x64\x41\x37\x2d\xb1\x72\x3c\x41\xe2\x85\x44\x7c\xfd\xb7\x7e\x68\x69\x32\xc2\x20\x3d\x44\xca\xdd\x9f\x00\x00\x00\xff\xff\x4c\x21\x1b\x1a\x60\x04\x00\x00")

func static_bleve_mapping_partials_analysis_wordlists_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_analysis_wordlists_html,
		"static-bleve-mapping/partials/analysis/wordlists.html",
	)
}

func static_bleve_mapping_partials_analysis_wordlists_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_analysis_wordlists_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/analysis/wordlists.html", size: 1120, mode: os.FileMode(420), modTime: time.Unix(1445123824, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_mapping_index_mapping_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x58\x4f\x6f\xe2\x3e\x10\xbd\xf7\x53\xb8\xb9\xf0\xfb\x69\x95\x46\xbb\xc7\x15\x20\xb5\x54\xd5\x1e\xf6\x4f\xa5\xad\xb4\x47\x64\xe2\x81\x58\x75\xe2\xc8\x76\xa0\x74\xb5\xdf\x7d\xc7\x89\x93\x06\x08\x10\x20\xb4\x5d\x0e\x24\x38\xe3\x99\xf7\x9e\x67\x26\x36\x7d\xc6\xe7\x24\x14\x54\xeb\x81\xc7\x13\x06\x4f\xdf\x68\x9a\xf2\x64\xe6\x0d\x2f\xf2\x47\xc9\xcc\x77\x4f\x7f\xf7\xe6\x1c\x16\x3f\x12\xb1\xec\x7d\x26\xe5\xed\x1f\xb4\xbb\xe8\x5f\xfa\x3e\x19\x1c\xf7\x21\xbe\x6f\x3d\xd4\x50\x68\x08\x0d\x97\x89\xd7\x3c\xfc\x05\x28\x03\x45\x74\x24\x17\x0f\xcb\x14\x1c\x5a\xfd\xb3\x9a\x44\x48\x7d\x96\x92\x8b\x7c\x6c\x75\x34\x94\xc2\xd7\xb1\xff\xf1\x93\x7b\x86\x4f\xa9\x65\x6a\xbd\x0e\xbc\xcb\x6d\xce\x9d\x2d\x7e\x72\x55\x78\xf8\x88\xb0\x9a\x6d\xc9\x80\x18\x95\x41\xe5\x1f\x23\xf0\x32\xfa\x4c\x2c\xd3\x88\x87\x68\x54\xdd\xf9\x61\x04\x73\x85\x57\xc5\x67\x91\xf1\x86\xfd\x80\xd7\x66\x0a\x3a\x01\x31\xb4\x51\x48\x19\xa6\x1f\x14\x83\x25\xfc\x80\x36\x31\xe9\x86\xc8\x94\x0a\x7d\x38\x13\x26\x17\xc9\x09\x44\xfa\x01\xae\x57\xbe\x9a\xc5\x8d\xbb\x34\xa5\xc4\x8d\x64\x4b\x62\xb6\xd0\xdc\xab\x45\x43\xc6\x10\x60\xdc\xd0\x89\x80\x76\xa9\x33\xc9\x8c\x41\x09\x9c\x41\x9a\x09\x51\x2c\x23\xa1\x8c\xd5\x22\xd6\x54\x5f\x93\x1e\xed\x46\x11\x17\xcc\x19\xfe\x97\xa0\x8b\xff\xbd\xe1\x35\x63\xa4\xae\x55\x3f\x28\x22\x35\x0b\x74\x6c\xe2\xbb\x22\xe7\x49\x28\x32\x06\xa8\x93\xa1\x86\x87\xe3\x54\xc1\x94\x3f\x91\x0f\xa4\x17\xa4\x54\x19\x8e\x39\x10\xc4\x05\x8e\xc0\x6a\xed\xbb\x1f\x57\x91\x89\x45\xcf\x2e\xb4\x83\xb3\x63\xe9\xca\xeb\xdb\xb4\x8b\xeb\x84\x8a\xe5\x33\xa8\xee\x7b\xc5\x86\xe7\x6d\xf5\xb5\x6e\x78\x86\x2e\x51\x85\x68\xdf\x21\x4e\x81\xdf\x75\x6f\xd8\x0b\xff\xd0\xbe\x40\x9b\xc8\xed\xa6\x7f\x74\x5e\xac\x96\x12\xd1\x2a\xdc\x59\x4e\x39\x34\xcd\xdd\x8d\x45\xf0\xef\x14\xd3\x1d\x17\xe6\x1c\xa5\xb4\xe6\x77\x5b\x26\xae\x9a\x9d\xa1\x8c\x46\x99\x36\x32\x26\x2e\x4e\xfb\x5a\x3a\x16\x7f\xd7\x75\xd4\x0e\xff\xa1\xc5\x34\xdd\x64\xb7\x8b\xfd\xd1\x59\x91\xf1\x89\x8f\x2f\x60\x0d\xa6\x46\xcc\x0d\x92\x08\xb3\x10\x5f\x3c\x03\x6f\x14\x51\x45\x43\x0c\x58\xd2\xac\xe9\x77\x42\x35\x86\xe8\xd6\x11\x6d\xa8\xc7\x42\x36\x87\x65\x17\xba\x07\xf9\x08\x09\x7f\xee\x0c\x96\xa9\xfc\x9d\x8c\xaa\x5b\xbd\x72\x60\x1d\x08\xf6\x4b\x2a\x46\xbe\x72\x6d\x3a\xc2\xb5\x40\x7f\xc2\xba\x6b\x0b\xaa\x1a\xa8\xf2\xee\x9d\x36\xdf\x7b\x25\x53\x40\xba\xd0\x7d\xff\xdd\x74\xbd\xad\x85\x6d\x58\x9e\x63\x33\xc3\xe6\x34\x09\x81\xb5\xef\xbf\xa7\xe1\xef\x7c\x37\xb3\x07\xff\xa1\xfd\x37\x6d\x64\xb7\x47\x80\x93\xb6\x33\xee\xe9\x54\xaa\xd8\x9f\x29\x99\xa5\x5e\xf3\x71\xee\x8e\x83\x58\xa7\x69\xf5\x4b\xd2\xcc\xe4\x67\xb3\x81\x67\xe0\xc9\x78\x2b\x0e\x51\x44\xa3\xa4\x58\x3f\x18\x59\x42\x8c\x6b\x7b\x00\x63\x03\xaf\xfc\xa7\xa1\xc9\x2a\x96\x0c\xc4\xea\xff\x16\x57\x36\xd8\x78\x6a\xe1\x6c\xcc\x48\x05\x0d\x21\x92\x02\xeb\x08\xcf\x69\x2f\x3f\xbc\xe0\x65\x65\x6a\x2d\xa2\xad\x00\xb7\x30\xa5\x99\x30\xf9\x59\xed\x5d\x48\xc0\x0a\x40\x63\x1b\xf4\xb5\x45\x28\x77\xd3\x9b\x42\x68\x10\x98\x91\x2d\x99\xed\xa3\x56\x6e\x99\x1b\x27\xca\xd4\x26\x3e\x02\xc6\x23\xb8\x26\x86\x20\x6e\xfc\xe6\x49\x75\x18\xf8\x4e\x63\xd0\x9b\x53\x9b\x16\xa6\xfe\xbe\x28\x18\x74\x22\xd3\x2d\x35\x10\x3c\xf0\x18\xc8\x3d\x55\xfa\xec\x72\x31\x0c\x67\x30\xda\x38\xcd\xa3\x1d\xa6\x9a\x9d\x6c\xa1\x16\x48\xdf\x5e\xbb\xf7\xd3\x6b\x4a\x79\x5f\xb5\xdd\xdc\x2c\x0d\x90\x6b\xa5\xe8\x92\x8c\x64\x32\xc7\x66\x7f\xb6\xf4\x99\x60\xa8\x31\xb5\xa1\xc6\x61\x19\xea\xb0\xdc\xb1\x1e\x72\xac\x15\xd4\xae\xf3\xe7\x15\xf6\x68\x2b\x8e\xff\x06\x00\x00\xff\xff\xcc\x9a\x9f\xef\x31\x17\x00\x00")

func static_bleve_mapping_partials_mapping_index_mapping_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_mapping_index_mapping_html,
		"static-bleve-mapping/partials/mapping/index-mapping.html",
	)
}

func static_bleve_mapping_partials_mapping_index_mapping_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_mapping_index_mapping_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/mapping/index-mapping.html", size: 5937, mode: os.FileMode(420), modTime: time.Unix(1445528145, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_mapping_type_mapping_tree_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x58\x4b\x6f\xe3\x36\x10\xbe\xe7\x57\x30\x3e\xac\x77\xd1\x7a\x7d\x2f\x62\x03\xc5\x16\x41\x2f\x5b\xe4\x90\xbb\xc1\x48\xb4\xc5\x86\xa6\x04\x92\x4e\x93\xa6\xfe\xef\xe5\xf0\x21\x53\x14\xa9\x87\xb3\x28\x2a\x20\xb1\x44\x72\x9e\x1c\xce\x7c\xc3\xbb\x92\xbe\x6c\x6f\x10\x82\x5f\x74\xa2\x2b\x25\x08\x59\x55\x98\x97\x8c\xe8\x51\xf3\x14\x0c\x4b\xb9\x59\x1c\x71\xd3\x50\x7e\xf8\xdd\xcc\x2d\xb6\x66\xf6\x4e\x36\x98\x23\x7e\x58\xd1\x7d\xbb\xe0\xeb\xee\x99\xf2\x12\x6d\x36\x68\xe9\x46\x1e\xdf\x1a\xb2\x74\x14\x9a\x86\x7a\x8e\x07\xf6\xd6\x54\xb4\xa8\x39\x6a\xdf\x56\x7b\x0a\xcc\xef\xd6\x54\xff\x01\xf3\x51\x39\xb7\x39\x39\xef\x67\x4b\xea\xd8\xe4\xf9\x70\x7c\x24\xa0\x2e\x3f\x31\x16\x68\xb9\x2d\xc9\x1e\x9f\x98\x02\x5d\x46\x38\xdd\xb6\x2a\x91\x92\x2a\xfd\x72\x61\x93\x13\xd8\xae\xd0\x8a\xbe\x87\x13\xe7\xb3\x27\x0d\xc5\x79\x4e\xce\x73\x58\x29\x21\x03\x16\x69\x6d\x08\xc7\x4f\x8c\x94\x8b\xed\x3f\xa8\xa4\xd2\xbc\x87\x4e\xcd\xea\xe7\xe8\xd0\xa7\x4f\xc8\x0f\x95\x6f\x5a\x37\x5a\x04\x22\x11\xd2\x5c\xed\xe8\xd5\x4c\xad\x83\x77\x98\x63\xf6\xf6\x37\x11\x11\xf7\x8b\x5f\xe2\x85\xe7\x73\x57\x64\x27\x54\x46\xc3\xc6\xed\x51\xa8\x89\x09\x81\x5b\x17\x02\x81\x12\x25\x56\x78\xc5\xeb\x52\xe0\xc3\x25\x30\x78\x73\x52\x13\x63\x3e\x60\xa5\x1f\xa5\xc7\x36\x0b\x45\x5e\xd5\x02\x35\x0c\x17\xa4\xaa\x59\x49\xc4\x66\xd1\x30\x82\x25\x41\x84\x2b\x22\x10\x36\xeb\x90\x09\x92\x2e\xbd\x96\x79\xac\x4b\xc2\xa2\x48\x5a\xcf\x54\xed\x5a\xb5\x1a\x51\x37\x44\xa8\xb7\xf9\xaa\x0d\x9c\x1c\x7f\x60\x02\x76\x41\x8c\x7f\xab\xb9\x12\x35\x93\x08\x96\x41\xfc\x5c\x0e\x16\xf6\xeb\x1a\xbd\x67\x2b\x41\x0f\x95\x42\x4f\x8a\xc3\xdf\xea\x55\x06\xfc\x82\x3d\xbc\x09\xf5\x4d\x04\xe7\xa2\xb3\xa0\x60\xb4\x78\xd6\xfc\xeb\xe6\xd4\x3c\xd6\x87\x03\x23\x9f\xdd\xfa\x2f\x61\xa4\x0e\xe7\xb3\x86\x9d\xa4\xcf\x67\xb8\x55\x1e\x92\x6d\x5f\x7d\x23\x09\x4c\xc6\x94\xeb\xd3\x10\x7a\x38\x69\x44\xd6\x8c\xe0\x28\x82\x24\xbd\x4a\x56\xf5\x5f\xce\x14\x08\x05\x47\x10\x6d\xa2\xd7\x08\x56\x75\xce\xa2\x2f\x12\xc1\x08\x0e\x3c\x84\xcb\xf2\x5b\x45\x59\xf9\xdd\x72\x4d\x7a\xc9\x3e\x94\x4b\x1d\x41\xa8\x80\xd5\x5e\x89\xc0\x2f\x36\x56\x22\x61\x13\x85\xdf\x53\xc2\xca\xa9\xa2\xf7\xb0\x78\x58\x70\xe7\xb3\xfb\x31\x1c\x7a\xe6\x07\xe2\x75\x42\x0c\x3a\x1b\x60\xf5\xaf\x90\xd2\xaf\x09\x30\xc2\x0b\xca\xa2\x10\xcb\x26\x41\x9f\xfb\xd2\x31\x90\x38\x79\x63\xd9\xf0\xc3\xc7\x30\x76\xc1\x6f\x35\x6f\xcf\xd9\xcf\x68\x8f\x99\x24\x33\xbc\x21\xc8\xb1\x7e\x21\xfd\x03\x37\x61\xcb\xe4\xa9\x28\x88\xfc\xb8\xca\x4a\x9c\xe6\x68\x5c\x3f\xa7\xb4\xcd\xd5\xac\x8d\xde\x38\x10\x30\xa1\x78\x8d\x1a\xac\x04\x96\xd5\x74\x73\xad\x6b\xef\x45\x7d\x7c\xc0\x42\xd7\x84\xc0\xe2\x8a\xca\x19\x16\x5b\xb9\xe9\x80\xb5\x1f\x2e\x69\xa5\x3c\xd0\x37\xd0\x6c\x83\x20\x18\xf9\x97\xef\xbd\xc0\x4e\x05\x2e\xc3\x4f\x84\x6d\x5d\xc9\xb4\x25\xb0\xa8\x48\xf1\xfc\x54\xbf\x2e\x12\xe5\xcc\xa7\xd6\x75\x94\x58\xdc\x78\x9b\x27\x2c\xdb\x2b\x85\x78\x94\x15\x0b\x71\xe3\x29\x21\x6d\x66\x72\x2f\xf0\x56\xb3\x16\xc9\x6b\xa3\x89\xbc\x69\xb7\x72\xa0\xe6\xf5\xb5\x31\x49\xb2\x3d\x0f\xc6\x87\xd6\x04\x33\x71\xa9\x53\x4e\x11\x46\x81\x87\x20\x0d\xc1\xca\xad\xd1\x49\x17\xa5\xb9\xa1\x8e\x86\x37\xd1\x96\x9a\xb5\x97\xa5\x26\x06\xcd\xc4\xfb\xd2\x85\xc1\xf2\x17\x9b\xc3\xdb\xb8\x38\x2f\x3a\xc5\x35\xdd\xc9\xc4\x22\x3a\xbd\x8c\xa1\xed\x60\x93\xae\x84\x4e\x49\x79\x7f\xb7\x93\x1e\x13\xb5\xa8\xfd\xc2\x25\x03\xd5\x7b\x62\x2c\x23\xf0\x2c\x00\x75\xcf\x18\xbe\x63\x98\x3b\x48\x6c\x1a\x21\x0f\xf3\x97\xbd\xfa\x97\xa0\xf2\x79\xa3\x6b\x49\xbf\x72\x6a\x28\x2e\x09\x16\x45\x05\xac\x11\x96\xd0\x1b\x79\x35\x6d\xc7\xd2\xb6\x48\x81\xbc\x84\xe6\x49\x2d\x3c\xa6\x87\x8c\x16\x58\x03\x78\x15\x20\x69\xdf\x12\xdb\x1a\x74\x89\x3b\xee\x9f\x25\x5e\x63\x63\xf2\x0a\x8e\x37\x2f\x93\xc9\xa4\xaa\x85\xd9\x2f\xf3\x32\x43\x5a\xc1\x4e\x25\xd9\x51\xbe\xc3\xd0\x6c\x82\x58\x33\x02\x27\x45\xbb\x15\x46\xc1\x99\x1e\xa0\xcc\x64\xab\x71\xfa\x71\xf7\x42\x0a\xad\x93\x9c\xe5\x4f\xaf\x05\x30\x40\x8e\xc1\x04\x8f\xf6\xc7\x7a\xad\xe0\x50\x6b\x18\x9d\xaf\x48\x60\x22\x69\x1b\x0e\x9d\x0c\x1b\x70\xdd\x66\x7d\xd6\xc9\xbf\xa6\xcf\xe9\xb9\x40\x3f\x43\xad\x8f\xcd\x66\x89\xbe\xc7\x3e\x97\xdc\x19\x9d\xa5\xcc\x62\x7d\x94\xf8\xc1\xd4\x02\xf8\x2d\x1f\xdc\xf2\xcf\x86\xfa\x4b\x37\xfd\x47\x25\xa5\x77\x2f\x30\xa1\xa1\x82\x67\x52\x53\x65\xb8\xcd\x47\xb7\xf0\x64\x1a\x94\x34\xca\x75\x76\x46\x91\x78\x05\xce\x0d\xfd\x91\x74\x47\x80\x77\xa3\xa2\x92\x75\xcb\xd4\x38\x9c\x8c\x7c\xe7\xba\xc7\xc0\x49\xa3\x6d\x0a\xff\x8e\x7b\x2a\x83\x81\xa7\x6e\x6e\x1f\x07\x7f\xc4\x80\x1e\x1a\x1e\xd7\x3f\x81\x88\x9d\xee\xc9\xbc\xd1\x62\xe2\x4c\x37\x3b\x19\xff\x4e\x34\xb3\x87\x83\xbd\xa5\x31\x0a\x1e\xb7\x34\x85\x84\x0d\x55\xef\x88\x07\x88\x78\x30\x6b\xe6\x30\xf1\x7d\x22\xf8\x73\x81\xdd\xef\xb7\x13\x29\xd7\x27\x5d\x48\xaa\xb9\x3a\x45\x98\xae\x24\xbd\xe4\x68\x90\x4e\x2a\x31\x5a\x2f\xd7\x8d\xa2\x35\xd7\x36\x28\x80\x1a\x0a\xed\x6b\xa1\xff\xeb\xf2\x68\xa8\xe1\x5a\x2d\x46\x53\x46\x98\x25\x43\x2f\x98\x9d\x74\x62\x5d\x6c\xeb\xa7\x3f\xb5\xf0\xbb\xb5\x1d\x4f\xa0\x13\xa3\x5c\x5c\xce\x7a\x86\x26\x6f\x23\x66\x82\xaf\x21\xf7\x75\x80\x55\xc6\x8f\x93\xaa\xd7\x70\xfd\xca\x56\xae\x7e\xed\xea\x5e\x29\x7e\xd8\x31\x39\xdc\x31\xe4\x14\x8f\xea\xe6\xc5\x55\x7b\x8b\x7c\x45\x6c\x79\xda\x3f\xb4\xf1\x93\xc2\x8b\xf2\x8a\x08\xfa\xdf\xc5\x17\xb8\x51\x9f\x57\xa2\xe8\x91\xcc\x71\xa5\xa7\x41\x0d\x16\x72\xae\x47\x3d\xf1\xce\x12\x5f\xe3\x58\x60\xf1\xa8\x59\x3c\x18\x0e\xff\x5b\xf7\x4e\x38\xbe\xa3\x4d\x7c\xd8\x4f\xc4\x0d\xbc\x7d\xcc\xdc\x98\xca\x73\x05\xda\x4e\x24\x2d\xd0\xcc\xfd\x68\x81\x51\x0f\x93\x33\x35\xdf\xd6\x4c\x55\x68\x46\x36\xf1\x74\xf3\x2c\x08\xdb\xa5\x11\x3b\xb2\x8d\xd1\x78\xd0\xe5\x2e\x92\x35\x25\xb5\x17\x37\x35\xfb\xa1\xf7\x36\xee\x37\x75\x73\xe3\xa6\x46\xee\x6e\xdc\xaa\xf0\xf6\x26\xe6\x39\x7c\x7f\xd3\xbb\x5a\x4e\xdf\xe0\xc4\x77\x7b\xe7\x0e\x81\x73\xfd\x66\x21\x15\x56\xb4\xd8\x35\x82\xec\xe9\x2b\xfa\x09\x2d\xd7\x3a\x1f\x29\xaa\x91\xf1\xda\x71\x58\x83\x75\x2b\xf7\x61\xd4\xfa\x5a\xa9\x23\x5b\x02\xb4\x0a\x9d\xec\xbc\xff\x6f\x00\x00\x00\xff\xff\x7f\xbb\x6b\x71\xf4\x1e\x00\x00")

func static_bleve_mapping_partials_mapping_type_mapping_tree_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_mapping_type_mapping_tree_html,
		"static-bleve-mapping/partials/mapping/type-mapping-tree.html",
	)
}

func static_bleve_mapping_partials_mapping_type_mapping_tree_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_mapping_type_mapping_tree_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/mapping/type-mapping-tree.html", size: 7924, mode: os.FileMode(420), modTime: time.Unix(1446836525, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _static_bleve_mapping_partials_mapping_type_mapping_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x90\xb1\x4e\xc4\x30\x0c\x86\xf7\x3e\x45\x94\xa5\x03\xca\x65\x47\xbd\x2e\xbc\x02\xfb\xc9\x6a\xcc\x61\xc9\x75\xa2\xc4\x87\x40\x88\x77\xc7\xad\x72\x45\x47\xb6\xff\xff\xed\x2f\xb6\xa7\x44\x1f\xee\x46\x41\x2b\xe2\xd9\xe7\xa2\x94\xa5\xf9\x79\x70\x6e\xca\x7c\x0f\x82\xe4\x84\xcd\xbc\xed\xc9\x35\xac\x26\xf9\xec\x57\x28\x85\xe4\xda\x7c\x4f\x12\x28\x04\xfd\x2a\x78\x44\xaf\x26\x5e\xb2\x28\x90\x60\xdd\xa9\xc6\x65\xda\x18\x15\x0b\x82\x1e\x95\x8e\xc4\xfd\xe7\xb9\x87\xff\x0f\x73\x61\x68\xed\x68\xfc\x2b\x36\x68\x8f\xbe\x47\x4c\xa4\x16\x8e\xcf\x77\xe8\xe9\xd2\xad\x9f\x87\x06\x92\x85\x6f\xc9\x06\x6e\x0a\x4a\xcb\xa5\x54\x7c\xa3\x4f\xf7\xe4\xc6\x58\xa0\x2a\x01\xb7\xd8\x09\x71\xdb\x2c\x74\xb1\x8f\x75\x7a\xd7\x95\x47\x3f\x4f\x91\x69\xbf\x58\xcc\x3c\x0f\x53\xb4\x93\xce\xc3\x6f\x00\x00\x00\xff\xff\x6f\x9d\x14\xad\x59\x01\x00\x00")

func static_bleve_mapping_partials_mapping_type_mapping_html_bytes() ([]byte, error) {
	return bindata_read(
		_static_bleve_mapping_partials_mapping_type_mapping_html,
		"static-bleve-mapping/partials/mapping/type-mapping.html",
	)
}

func static_bleve_mapping_partials_mapping_type_mapping_html() (*asset, error) {
	bytes, err := static_bleve_mapping_partials_mapping_type_mapping_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "static-bleve-mapping/partials/mapping/type-mapping.html", size: 345, mode: os.FileMode(420), modTime: time.Unix(1445103377, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"static-bleve-mapping/js/mapping/analysis-analyzer.js":                       static_bleve_mapping_js_mapping_analysis_analyzer_js,
	"static-bleve-mapping/js/mapping/analysis-charfilter.js":                     static_bleve_mapping_js_mapping_analysis_charfilter_js,
	"static-bleve-mapping/js/mapping/analysis-tokenfilter.js":                    static_bleve_mapping_js_mapping_analysis_tokenfilter_js,
	"static-bleve-mapping/js/mapping/analysis-tokenizer.js":                      static_bleve_mapping_js_mapping_analysis_tokenizer_js,
	"static-bleve-mapping/js/mapping/analysis-wordlist.js":                       static_bleve_mapping_js_mapping_analysis_wordlist_js,
	"static-bleve-mapping/js/mapping/analysis.js":                                static_bleve_mapping_js_mapping_analysis_js,
	"static-bleve-mapping/js/mapping/index-mapping.js":                           static_bleve_mapping_js_mapping_index_mapping_js,
	"static-bleve-mapping/js/mapping/type-mapping.js":                            static_bleve_mapping_js_mapping_type_mapping_js,
	"static-bleve-mapping/partials/analysis/analyzer.html":                       static_bleve_mapping_partials_analysis_analyzer_html,
	"static-bleve-mapping/partials/analysis/analyzers.html":                      static_bleve_mapping_partials_analysis_analyzers_html,
	"static-bleve-mapping/partials/analysis/charfilter.html":                     static_bleve_mapping_partials_analysis_charfilter_html,
	"static-bleve-mapping/partials/analysis/charfilters/generic.html":            static_bleve_mapping_partials_analysis_charfilters_generic_html,
	"static-bleve-mapping/partials/analysis/charfilters/regexp.html":             static_bleve_mapping_partials_analysis_charfilters_regexp_html,
	"static-bleve-mapping/partials/analysis/charfilters.html":                    static_bleve_mapping_partials_analysis_charfilters_html,
	"static-bleve-mapping/partials/analysis/tokenfilter.html":                    static_bleve_mapping_partials_analysis_tokenfilter_html,
	"static-bleve-mapping/partials/analysis/tokenfilters/dict_compound.html":     static_bleve_mapping_partials_analysis_tokenfilters_dict_compound_html,
	"static-bleve-mapping/partials/analysis/tokenfilters/edge_ngram.html":        static_bleve_mapping_partials_analysis_tokenfilters_edge_ngram_html,
	"static-bleve-mapping/partials/analysis/tokenfilters/elision.html":           static_bleve_mapping_partials_analysis_tokenfilters_elision_html,
	"static-bleve-mapping/partials/analysis/tokenfilters/generic.html":           static_bleve_mapping_partials_analysis_tokenfilters_generic_html,
	"static-bleve-mapping/partials/analysis/tokenfilters/keyword_marker.html":    static_bleve_mapping_partials_analysis_tokenfilters_keyword_marker_html,
	"static-bleve-mapping/partials/analysis/tokenfilters/length.html":            static_bleve_mapping_partials_analysis_tokenfilters_length_html,
	"static-bleve-mapping/partials/analysis/tokenfilters/ngram.html":             static_bleve_mapping_partials_analysis_tokenfilters_ngram_html,
	"static-bleve-mapping/partials/analysis/tokenfilters/normalize_unicode.html": static_bleve_mapping_partials_analysis_tokenfilters_normalize_unicode_html,
	"static-bleve-mapping/partials/analysis/tokenfilters/shingle.html":           static_bleve_mapping_partials_analysis_tokenfilters_shingle_html,
	"static-bleve-mapping/partials/analysis/tokenfilters/stop_tokens.html":       static_bleve_mapping_partials_analysis_tokenfilters_stop_tokens_html,
	"static-bleve-mapping/partials/analysis/tokenfilters/truncate_token.html":    static_bleve_mapping_partials_analysis_tokenfilters_truncate_token_html,
	"static-bleve-mapping/partials/analysis/tokenfilters/wordmap.html":           static_bleve_mapping_partials_analysis_tokenfilters_wordmap_html,
	"static-bleve-mapping/partials/analysis/tokenfilters.html":                   static_bleve_mapping_partials_analysis_tokenfilters_html,
	"static-bleve-mapping/partials/analysis/tokenizer.html":                      static_bleve_mapping_partials_analysis_tokenizer_html,
	"static-bleve-mapping/partials/analysis/tokenizers/exception.html":           static_bleve_mapping_partials_analysis_tokenizers_exception_html,
	"static-bleve-mapping/partials/analysis/tokenizers/generic.html":             static_bleve_mapping_partials_analysis_tokenizers_generic_html,
	"static-bleve-mapping/partials/analysis/tokenizers/regexp.html":              static_bleve_mapping_partials_analysis_tokenizers_regexp_html,
	"static-bleve-mapping/partials/analysis/tokenizers.html":                     static_bleve_mapping_partials_analysis_tokenizers_html,
	"static-bleve-mapping/partials/analysis/wordlist.html":                       static_bleve_mapping_partials_analysis_wordlist_html,
	"static-bleve-mapping/partials/analysis/wordlists.html":                      static_bleve_mapping_partials_analysis_wordlists_html,
	"static-bleve-mapping/partials/mapping/index-mapping.html":                   static_bleve_mapping_partials_mapping_index_mapping_html,
	"static-bleve-mapping/partials/mapping/type-mapping-tree.html":               static_bleve_mapping_partials_mapping_type_mapping_tree_html,
	"static-bleve-mapping/partials/mapping/type-mapping.html":                    static_bleve_mapping_partials_mapping_type_mapping_html,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func     func() (*asset, error)
	Children map[string]*_bintree_t
}

var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"static-bleve-mapping": &_bintree_t{nil, map[string]*_bintree_t{
		"js": &_bintree_t{nil, map[string]*_bintree_t{
			"mapping": &_bintree_t{nil, map[string]*_bintree_t{
				"analysis-analyzer.js":    &_bintree_t{static_bleve_mapping_js_mapping_analysis_analyzer_js, map[string]*_bintree_t{}},
				"analysis-charfilter.js":  &_bintree_t{static_bleve_mapping_js_mapping_analysis_charfilter_js, map[string]*_bintree_t{}},
				"analysis-tokenfilter.js": &_bintree_t{static_bleve_mapping_js_mapping_analysis_tokenfilter_js, map[string]*_bintree_t{}},
				"analysis-tokenizer.js":   &_bintree_t{static_bleve_mapping_js_mapping_analysis_tokenizer_js, map[string]*_bintree_t{}},
				"analysis-wordlist.js":    &_bintree_t{static_bleve_mapping_js_mapping_analysis_wordlist_js, map[string]*_bintree_t{}},
				"analysis.js":             &_bintree_t{static_bleve_mapping_js_mapping_analysis_js, map[string]*_bintree_t{}},
				"index-mapping.js":        &_bintree_t{static_bleve_mapping_js_mapping_index_mapping_js, map[string]*_bintree_t{}},
				"type-mapping.js":         &_bintree_t{static_bleve_mapping_js_mapping_type_mapping_js, map[string]*_bintree_t{}},
			}},
		}},
		"partials": &_bintree_t{nil, map[string]*_bintree_t{
			"analysis": &_bintree_t{nil, map[string]*_bintree_t{
				"analyzer.html":   &_bintree_t{static_bleve_mapping_partials_analysis_analyzer_html, map[string]*_bintree_t{}},
				"analyzers.html":  &_bintree_t{static_bleve_mapping_partials_analysis_analyzers_html, map[string]*_bintree_t{}},
				"charfilter.html": &_bintree_t{static_bleve_mapping_partials_analysis_charfilter_html, map[string]*_bintree_t{}},
				"charfilters": &_bintree_t{nil, map[string]*_bintree_t{
					"generic.html": &_bintree_t{static_bleve_mapping_partials_analysis_charfilters_generic_html, map[string]*_bintree_t{}},
					"regexp.html":  &_bintree_t{static_bleve_mapping_partials_analysis_charfilters_regexp_html, map[string]*_bintree_t{}},
				}},
				"charfilters.html": &_bintree_t{static_bleve_mapping_partials_analysis_charfilters_html, map[string]*_bintree_t{}},
				"tokenfilter.html": &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilter_html, map[string]*_bintree_t{}},
				"tokenfilters": &_bintree_t{nil, map[string]*_bintree_t{
					"dict_compound.html":     &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilters_dict_compound_html, map[string]*_bintree_t{}},
					"edge_ngram.html":        &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilters_edge_ngram_html, map[string]*_bintree_t{}},
					"elision.html":           &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilters_elision_html, map[string]*_bintree_t{}},
					"generic.html":           &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilters_generic_html, map[string]*_bintree_t{}},
					"keyword_marker.html":    &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilters_keyword_marker_html, map[string]*_bintree_t{}},
					"length.html":            &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilters_length_html, map[string]*_bintree_t{}},
					"ngram.html":             &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilters_ngram_html, map[string]*_bintree_t{}},
					"normalize_unicode.html": &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilters_normalize_unicode_html, map[string]*_bintree_t{}},
					"shingle.html":           &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilters_shingle_html, map[string]*_bintree_t{}},
					"stop_tokens.html":       &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilters_stop_tokens_html, map[string]*_bintree_t{}},
					"truncate_token.html":    &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilters_truncate_token_html, map[string]*_bintree_t{}},
					"wordmap.html":           &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilters_wordmap_html, map[string]*_bintree_t{}},
				}},
				"tokenfilters.html": &_bintree_t{static_bleve_mapping_partials_analysis_tokenfilters_html, map[string]*_bintree_t{}},
				"tokenizer.html":    &_bintree_t{static_bleve_mapping_partials_analysis_tokenizer_html, map[string]*_bintree_t{}},
				"tokenizers": &_bintree_t{nil, map[string]*_bintree_t{
					"exception.html": &_bintree_t{static_bleve_mapping_partials_analysis_tokenizers_exception_html, map[string]*_bintree_t{}},
					"generic.html":   &_bintree_t{static_bleve_mapping_partials_analysis_tokenizers_generic_html, map[string]*_bintree_t{}},
					"regexp.html":    &_bintree_t{static_bleve_mapping_partials_analysis_tokenizers_regexp_html, map[string]*_bintree_t{}},
				}},
				"tokenizers.html": &_bintree_t{static_bleve_mapping_partials_analysis_tokenizers_html, map[string]*_bintree_t{}},
				"wordlist.html":   &_bintree_t{static_bleve_mapping_partials_analysis_wordlist_html, map[string]*_bintree_t{}},
				"wordlists.html":  &_bintree_t{static_bleve_mapping_partials_analysis_wordlists_html, map[string]*_bintree_t{}},
			}},
			"mapping": &_bintree_t{nil, map[string]*_bintree_t{
				"index-mapping.html":     &_bintree_t{static_bleve_mapping_partials_mapping_index_mapping_html, map[string]*_bintree_t{}},
				"type-mapping-tree.html": &_bintree_t{static_bleve_mapping_partials_mapping_type_mapping_tree_html, map[string]*_bintree_t{}},
				"type-mapping.html":      &_bintree_t{static_bleve_mapping_partials_mapping_type_mapping_html, map[string]*_bintree_t{}},
			}},
		}},
	}},
}}

// Restore an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// Restore assets under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	if err != nil { // File
		return RestoreAsset(dir, name)
	} else { // Dir
		for _, child := range children {
			err = RestoreAssets(dir, path.Join(name, child))
			if err != nil {
				return err
			}
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

func assetFS() *assetfs.AssetFS {
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, Prefix: k}
	}
	panic("unreachable")
}
